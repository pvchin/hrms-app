[{"D:\\react-myprojects\\hrms\\client\\src\\index.js":"1","D:\\react-myprojects\\hrms\\client\\src\\App.js":"2","D:\\react-myprojects\\hrms\\client\\src\\reportWebVitals.js":"3","D:\\react-myprojects\\hrms\\client\\src\\components\\Copyright.js":"4","D:\\react-myprojects\\hrms\\client\\src\\components\\Navigator.js":"5","D:\\react-myprojects\\hrms\\client\\src\\components\\MenuListItems.js":"6","D:\\react-myprojects\\hrms\\client\\src\\components\\Appbanner.js":"7","D:\\react-myprojects\\hrms\\client\\src\\components\\SideDrawer.js":"8","D:\\react-myprojects\\hrms\\client\\src\\pages\\index.js":"9","D:\\react-myprojects\\hrms\\client\\src\\pages\\HomePage.js":"10","D:\\react-myprojects\\hrms\\client\\src\\pages\\DashboardPage.js":"11","D:\\react-myprojects\\hrms\\client\\src\\pages\\DepartmentsPage.js":"12","D:\\react-myprojects\\hrms\\client\\src\\pages\\AllEmployeesPage.js":"13","D:\\react-myprojects\\hrms\\client\\src\\pages\\ExpensesPage.js":"14","D:\\react-myprojects\\hrms\\client\\src\\pages\\LeavePage.js":"15","D:\\react-myprojects\\hrms\\client\\src\\pages\\PayslipPage.js":"16","D:\\react-myprojects\\hrms\\client\\src\\pages\\PayrollPage.js":"17","D:\\react-myprojects\\hrms\\client\\src\\pages\\DesignationPage.js":"18","D:\\react-myprojects\\hrms\\client\\src\\pages\\AllowancesPage.js":"19","D:\\react-myprojects\\hrms\\client\\src\\pages\\ClientsPage.js":"20","D:\\react-myprojects\\hrms\\client\\src\\pages\\PrivateRoute.js":"21","D:\\react-myprojects\\hrms\\client\\src\\pages\\ErrorPage.js":"22","D:\\react-myprojects\\hrms\\client\\src\\components\\DashboardAdmin.js":"23","D:\\react-myprojects\\hrms\\client\\src\\pages\\DailyAllowancesPage.js":"24","D:\\react-myprojects\\hrms\\client\\src\\components\\AllEmployeesTable.js":"25","D:\\react-myprojects\\hrms\\client\\src\\components\\SingleEmployee.js":"26","D:\\react-myprojects\\hrms\\client\\src\\components\\EmployeeForm.js":"27","D:\\react-myprojects\\hrms-airtable\\src\\index.js":"28","D:\\react-myprojects\\hrms-airtable\\src\\App.js":"29","D:\\react-myprojects\\hrms-airtable\\src\\reportWebVitals.js":"30","D:\\react-myprojects\\hrms-airtable\\src\\components\\DashboardAdmin.js":"31","D:\\react-myprojects\\hrms-airtable\\src\\components\\Appbanner.js":"32","D:\\react-myprojects\\hrms-airtable\\src\\components\\SideDrawer.js":"33","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleEmployee.js":"34","D:\\react-myprojects\\hrms-airtable\\src\\pages\\index.js":"35","D:\\react-myprojects\\hrms-airtable\\src\\components\\MenuListItems.js":"36","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeForm.js":"37","D:\\react-myprojects\\hrms-airtable\\src\\pages\\AllEmployeesPage.js":"38","D:\\react-myprojects\\hrms-airtable\\src\\pages\\DashboardPage.js":"39","D:\\react-myprojects\\hrms-airtable\\src\\pages\\ExpensesPage.js":"40","D:\\react-myprojects\\hrms-airtable\\src\\pages\\PayrollPage.js":"41","D:\\react-myprojects\\hrms-airtable\\src\\pages\\LeavePage.js":"42","D:\\react-myprojects\\hrms-airtable\\src\\pages\\PayslipPage.js":"43","D:\\react-myprojects\\hrms-airtable\\src\\pages\\DepartmentsPage.js":"44","D:\\react-myprojects\\hrms-airtable\\src\\pages\\PrivateRoute.js":"45","D:\\react-myprojects\\hrms-airtable\\src\\pages\\AllowancesPage.js":"46","D:\\react-myprojects\\hrms-airtable\\src\\pages\\DesignationPage.js":"47","D:\\react-myprojects\\hrms-airtable\\src\\pages\\DailyAllowancesPage.js":"48","D:\\react-myprojects\\hrms-airtable\\src\\pages\\ClientsPage.js":"49","D:\\react-myprojects\\hrms-airtable\\src\\pages\\ErrorPage.js":"50","D:\\react-myprojects\\hrms-airtable\\src\\components\\Copyright.js":"51","D:\\react-myprojects\\hrms-airtable\\src\\components\\AllEmployeesTable.js":"52","D:\\react-myprojects\\hrms-airtable\\src\\utils\\constants.js":"53","D:\\react-myprojects\\hrms-airtable\\src\\context\\employees_context.js":"54","D:\\react-myprojects\\hrms-airtable\\src\\actions.js":"55","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\employees_reducer.js":"56","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeForm2.js":"57","D:\\react-myprojects\\hrms-airtable\\src\\components\\TableForm.js":"58","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTable.js":"59","D:\\react-myprojects\\hrms-airtable\\src\\context\\leaves_context.js":"60","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleLeave.js":"61","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveForm.js":"62","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\leaves_reducer.js":"63","D:\\react-myprojects\\hrms-airtable\\src\\context\\expenses_context.js":"64","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleExpense.js":"65","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTable.js":"66","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\expenses_reducer.js":"67","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseForm.js":"68","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleDailyAllowance.js":"69","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTable.js":"70","D:\\react-myprojects\\hrms-airtable\\src\\context\\dailyallowances_context.js":"71","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\dailyallowances_reducer.js":"72","D:\\react-myprojects\\hrms-airtable\\src\\components\\DaiylAllowanceForm.js":"73","D:\\react-myprojects\\hrms-airtable\\src\\components\\BatchDailyAllowances.js":"74","D:\\react-myprojects\\hrms-airtable\\src\\components\\SinglePayslip.js":"75","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTable.js":"76","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesPeriods.js":"77","D:\\react-myprojects\\hrms-airtable\\src\\components\\BatchPayslips.js":"78","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipsPeriods.js":"79","D:\\react-myprojects\\hrms-airtable\\src\\context\\payslips_context.js":"80","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\payslips_reducer.js":"81","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example.js":"82","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTable2.js":"83","D:\\react-myprojects\\hrms-airtable\\src\\components\\Payslip_Earnings.js":"84","D:\\react-myprojects\\hrms-airtable\\src\\components\\Payslip_Deductions.js":"85","D:\\react-myprojects\\hrms-airtable\\src\\pages\\TablesPage.js":"86","D:\\react-myprojects\\hrms-airtable\\src\\components\\TablesUpdate.js":"87","D:\\react-myprojects\\hrms-airtable\\src\\context\\tables_context.js":"88","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\tables_reducer.js":"89","D:\\react-myprojects\\hrms-airtable\\src\\pages\\BatchPayslipsPage.js":"90","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipForm2.js":"91","D:\\react-myprojects\\hrms-airtable\\src\\components\\Preferences.js":"92","D:\\react-myprojects\\hrms-airtable\\src\\components\\Login.js":"93","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipForm.js":"94","D:\\react-myprojects\\hrms-airtable\\src\\components\\ModalDialog.js":"95","D:\\react-myprojects\\hrms-airtable\\src\\components\\SigninForm.js":"96","D:\\react-myprojects\\hrms-airtable\\src\\components\\DashboardMain.js":"97","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleDailyAllowsDetls.js":"98","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowsDetlsTable.js":"99","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTable2.js":"100","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CustomDialog.js":"101","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\AlertDialog.js":"102","D:\\react-myprojects\\hrms-airtable\\src\\components\\AllowancesTable.js":"103","D:\\react-myprojects\\hrms-airtable\\src\\components\\DeductionsTable.js":"104","D:\\react-myprojects\\hrms-airtable\\src\\components\\DepartmentsTable.js":"105","D:\\react-myprojects\\hrms-airtable\\src\\components\\DesignationsTable.js":"106","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CardLayout.js":"107","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example2.js":"108","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example3.js":"109","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeView.js":"110","D:\\react-myprojects\\hrms-airtable\\src\\context\\trainings_context.js":"111","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\trainings_reducer.js":"112","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CardLayout2.js":"113","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpEducations.js":"114","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpExperiences.js":"115","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpFamily.js":"116","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpPersonal.js":"117","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpTrainings.js":"118","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewTrainings.js":"119","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewLeaves.js":"120","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewFamily.js":"121","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewExperiences.js":"122","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewEducations.js":"123","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example4.js":"124","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\Recoilhelpers.js":"125","D:\\react-myprojects\\hrms-airtable\\src\\components\\data\\selectordata.js":"126","D:\\react-myprojects\\hrms-airtable\\src\\components\\data\\atomdata.js":"127","D:\\react-myprojects\\hrms-airtable\\src\\components\\Payslip_ViewDeductions.js":"128","D:\\react-myprojects\\hrms-airtable\\src\\components\\Payslip_ViewEarnings.js":"129","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example5.js":"130","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CardLayout3.js":"131","D:\\react-myprojects\\hrms-airtable\\src\\pages\\HomePage2.js":"132","D:\\react-myprojects\\hrms-airtable\\src\\pages\\HomePage.js":"133","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableView.js":"134","D:\\react-myprojects\\hrms-airtable\\src\\components\\HomeAdmin.js":"135","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableAdmin.js":"136","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTableAdmin.js":"137","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTableView.js":"138","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTableView.js":"139","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTableAdmin.js":"140","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTableAdmin.js":"141","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTableView.js":"142","D:\\react-myprojects\\hrms-airtable\\src\\components\\OnLeavesView.js":"143"},{"size":901,"mtime":1620532225097,"results":"144","hashOfConfig":"145"},{"size":192,"mtime":1620490706232,"results":"146","hashOfConfig":"145"},{"size":362,"mtime":1612573013334,"results":"147","hashOfConfig":"145"},{"size":474,"mtime":1620438181637,"results":"148","hashOfConfig":"145"},{"size":4519,"mtime":1620443272335,"results":"149","hashOfConfig":"145"},{"size":6926,"mtime":1620537358234,"results":"150","hashOfConfig":"145"},{"size":3593,"mtime":1620656139376,"results":"151","hashOfConfig":"145"},{"size":3702,"mtime":1620533805778,"results":"152","hashOfConfig":"145"},{"size":787,"mtime":1620537730379,"results":"153","hashOfConfig":"145"},{"size":4060,"mtime":1620490422332,"results":"154","hashOfConfig":"145"},{"size":165,"mtime":1620488263258,"results":"155","hashOfConfig":"145"},{"size":3129,"mtime":1620655295617,"results":"156","hashOfConfig":"145"},{"size":4779,"mtime":1620657095043,"results":"157","hashOfConfig":"145"},{"size":3120,"mtime":1620537502479,"results":"158","hashOfConfig":"145"},{"size":3111,"mtime":1620537502479,"results":"159","hashOfConfig":"145"},{"size":3117,"mtime":1620537502480,"results":"160","hashOfConfig":"145"},{"size":3117,"mtime":1620537502480,"results":"161","hashOfConfig":"145"},{"size":3129,"mtime":1620537502474,"results":"162","hashOfConfig":"145"},{"size":3126,"mtime":1620537502474,"results":"163","hashOfConfig":"145"},{"size":3116,"mtime":1620536608782,"results":"164","hashOfConfig":"145"},{"size":242,"mtime":1620488800849,"results":"165","hashOfConfig":"145"},{"size":3111,"mtime":1620537502475,"results":"166","hashOfConfig":"145"},{"size":4999,"mtime":1620657930276,"results":"167","hashOfConfig":"145"},{"size":3142,"mtime":1620537502474,"results":"168","hashOfConfig":"145"},{"size":13849,"mtime":1620923169702,"results":"169","hashOfConfig":"145"},{"size":4608,"mtime":1620922713095,"results":"170","hashOfConfig":"145"},{"size":3797,"mtime":1620924008980,"results":"171","hashOfConfig":"145"},{"size":1923,"mtime":1623158063134,"results":"172","hashOfConfig":"173"},{"size":1251,"mtime":1623152811867,"results":"174","hashOfConfig":"173"},{"size":362,"mtime":1612573013334,"results":"175","hashOfConfig":"173"},{"size":3184,"mtime":1622815350005,"results":"176","hashOfConfig":"173"},{"size":3825,"mtime":1622814888467,"results":"177","hashOfConfig":"173"},{"size":3443,"mtime":1622194265851,"results":"178","hashOfConfig":"173"},{"size":4504,"mtime":1622902342824,"results":"179","hashOfConfig":"173"},{"size":902,"mtime":1623198093681,"results":"180","hashOfConfig":"173"},{"size":7296,"mtime":1623039366714,"results":"181","hashOfConfig":"173"},{"size":24102,"mtime":1623212233175,"results":"182","hashOfConfig":"173"},{"size":3219,"mtime":1621342487299,"results":"183","hashOfConfig":"173"},{"size":225,"mtime":1621779292940,"results":"184","hashOfConfig":"173"},{"size":3683,"mtime":1623172638593,"results":"185","hashOfConfig":"173"},{"size":3181,"mtime":1621167963865,"results":"186","hashOfConfig":"173"},{"size":3290,"mtime":1623203016487,"results":"187","hashOfConfig":"173"},{"size":3195,"mtime":1621343658812,"results":"188","hashOfConfig":"173"},{"size":3214,"mtime":1621176394282,"results":"189","hashOfConfig":"173"},{"size":244,"mtime":1621591390071,"results":"190","hashOfConfig":"173"},{"size":3189,"mtime":1621005948632,"results":"191","hashOfConfig":"173"},{"size":3129,"mtime":1620537502474,"results":"192","hashOfConfig":"173"},{"size":3421,"mtime":1621866966445,"results":"193","hashOfConfig":"173"},{"size":3116,"mtime":1620536608782,"results":"194","hashOfConfig":"173"},{"size":4048,"mtime":1621565276600,"results":"195","hashOfConfig":"173"},{"size":469,"mtime":1622814974105,"results":"196","hashOfConfig":"173"},{"size":4980,"mtime":1623065378390,"results":"197","hashOfConfig":"173"},{"size":4342,"mtime":1623239214500,"results":"198","hashOfConfig":"173"},{"size":5109,"mtime":1622455758272,"results":"199","hashOfConfig":"173"},{"size":20423,"mtime":1622471908344,"results":"200","hashOfConfig":"173"},{"size":3565,"mtime":1622455997235,"results":"201","hashOfConfig":"173"},{"size":4085,"mtime":1621007307321,"results":"202","hashOfConfig":"173"},{"size":2343,"mtime":1622902246334,"results":"203","hashOfConfig":"173"},{"size":5871,"mtime":1623210835593,"results":"204","hashOfConfig":"173"},{"size":5625,"mtime":1623209034825,"results":"205","hashOfConfig":"173"},{"size":4588,"mtime":1621068413791,"results":"206","hashOfConfig":"173"},{"size":9932,"mtime":1623244173086,"results":"207","hashOfConfig":"173"},{"size":3955,"mtime":1622472085041,"results":"208","hashOfConfig":"173"},{"size":5063,"mtime":1623209839907,"results":"209","hashOfConfig":"173"},{"size":4601,"mtime":1621181277849,"results":"210","hashOfConfig":"173"},{"size":7232,"mtime":1623239293640,"results":"211","hashOfConfig":"173"},{"size":3453,"mtime":1621085522133,"results":"212","hashOfConfig":"173"},{"size":10407,"mtime":1623165224789,"results":"213","hashOfConfig":"173"},{"size":4648,"mtime":1621145879842,"results":"214","hashOfConfig":"173"},{"size":6340,"mtime":1623234066770,"results":"215","hashOfConfig":"173"},{"size":11976,"mtime":1623218252874,"results":"216","hashOfConfig":"173"},{"size":9453,"mtime":1622896716996,"results":"217","hashOfConfig":"173"},{"size":10013,"mtime":1622815489342,"results":"218","hashOfConfig":"173"},{"size":3261,"mtime":1623039169264,"results":"219","hashOfConfig":"173"},{"size":4606,"mtime":1623134606132,"results":"220","hashOfConfig":"173"},{"size":7131,"mtime":1623215948151,"results":"221","hashOfConfig":"173"},{"size":2024,"mtime":1623052037787,"results":"222","hashOfConfig":"173"},{"size":3198,"mtime":1621867179865,"results":"223","hashOfConfig":"173"},{"size":2830,"mtime":1623139522922,"results":"224","hashOfConfig":"173"},{"size":14899,"mtime":1623215091085,"results":"225","hashOfConfig":"173"},{"size":11300,"mtime":1621427654047,"results":"226","hashOfConfig":"173"},{"size":4085,"mtime":1622901629555,"results":"227","hashOfConfig":"173"},{"size":12692,"mtime":1621180178303,"results":"228","hashOfConfig":"173"},{"size":6877,"mtime":1623164315199,"results":"229","hashOfConfig":"173"},{"size":6774,"mtime":1623164342378,"results":"230","hashOfConfig":"173"},{"size":3192,"mtime":1621251598936,"results":"231","hashOfConfig":"173"},{"size":1959,"mtime":1622974000618,"results":"232","hashOfConfig":"173"},{"size":18593,"mtime":1622448641245,"results":"233","hashOfConfig":"173"},{"size":18174,"mtime":1622448741544,"results":"234","hashOfConfig":"173"},{"size":3206,"mtime":1621344267720,"results":"235","hashOfConfig":"173"},{"size":17494,"mtime":1621698706977,"results":"236","hashOfConfig":"173"},{"size":177,"mtime":1621590392825,"results":"237","hashOfConfig":"173"},{"size":4285,"mtime":1623247556440,"results":"238","hashOfConfig":"173"},{"size":22408,"mtime":1623196460119,"results":"239","hashOfConfig":"173"},{"size":368,"mtime":1621777960434,"results":"240","hashOfConfig":"173"},{"size":1699,"mtime":1623247626750,"results":"241","hashOfConfig":"173"},{"size":6694,"mtime":1623245434432,"results":"242","hashOfConfig":"173"},{"size":4555,"mtime":1622902220351,"results":"243","hashOfConfig":"173"},{"size":7343,"mtime":1623164443077,"results":"244","hashOfConfig":"173"},{"size":14537,"mtime":1621219621273,"results":"245","hashOfConfig":"173"},{"size":1423,"mtime":1622426372003,"results":"246","hashOfConfig":"173"},{"size":1489,"mtime":1622456334194,"results":"247","hashOfConfig":"173"},{"size":2402,"mtime":1622814856574,"results":"248","hashOfConfig":"173"},{"size":2397,"mtime":1622815389677,"results":"249","hashOfConfig":"173"},{"size":2784,"mtime":1623052069562,"results":"250","hashOfConfig":"173"},{"size":2448,"mtime":1622815537705,"results":"251","hashOfConfig":"173"},{"size":1573,"mtime":1623196100107,"results":"252","hashOfConfig":"173"},{"size":3788,"mtime":1622167319377,"results":"253","hashOfConfig":"173"},{"size":2016,"mtime":1622169452739,"results":"254","hashOfConfig":"173"},{"size":14238,"mtime":1623244498687,"results":"255","hashOfConfig":"173"},{"size":5426,"mtime":1622470700044,"results":"256","hashOfConfig":"173"},{"size":4243,"mtime":1622467767067,"results":"257","hashOfConfig":"173"},{"size":1344,"mtime":1622554172822,"results":"258","hashOfConfig":"173"},{"size":5444,"mtime":1622901230249,"results":"259","hashOfConfig":"173"},{"size":5533,"mtime":1622901238287,"results":"260","hashOfConfig":"173"},{"size":5863,"mtime":1622901245061,"results":"261","hashOfConfig":"173"},{"size":27246,"mtime":1623213485773,"results":"262","hashOfConfig":"173"},{"size":5240,"mtime":1622901259358,"results":"263","hashOfConfig":"173"},{"size":1771,"mtime":1622901266272,"results":"264","hashOfConfig":"173"},{"size":1683,"mtime":1622901272783,"results":"265","hashOfConfig":"173"},{"size":1553,"mtime":1622901780920,"results":"266","hashOfConfig":"173"},{"size":1748,"mtime":1622901284562,"results":"267","hashOfConfig":"173"},{"size":1553,"mtime":1622901288533,"results":"268","hashOfConfig":"173"},{"size":4233,"mtime":1623151726449,"results":"269","hashOfConfig":"173"},{"size":406,"mtime":1622961844382,"results":"270","hashOfConfig":"173"},{"size":1466,"mtime":1623082506768,"results":"271","hashOfConfig":"173"},{"size":1004,"mtime":1623156932750,"results":"272","hashOfConfig":"173"},{"size":3277,"mtime":1623164294695,"results":"273","hashOfConfig":"173"},{"size":2609,"mtime":1623164278370,"results":"274","hashOfConfig":"173"},{"size":3303,"mtime":1623239830588,"results":"275","hashOfConfig":"173"},{"size":1866,"mtime":1623210071067,"results":"276","hashOfConfig":"173"},{"size":4428,"mtime":1623198043181,"results":"277","hashOfConfig":"173"},{"size":2674,"mtime":1623204592578,"results":"278","hashOfConfig":"173"},{"size":3587,"mtime":1623210034297,"results":"279","hashOfConfig":"173"},{"size":9370,"mtime":1623240412702,"results":"280","hashOfConfig":"173"},{"size":6315,"mtime":1623244812822,"results":"281","hashOfConfig":"173"},{"size":6786,"mtime":1623209768446,"results":"282","hashOfConfig":"173"},{"size":2872,"mtime":1623209709680,"results":"283","hashOfConfig":"173"},{"size":2617,"mtime":1623217709101,"results":"284","hashOfConfig":"173"},{"size":5292,"mtime":1623217097057,"results":"285","hashOfConfig":"173"},{"size":6372,"mtime":1623235552591,"results":"286","hashOfConfig":"173"},{"size":3660,"mtime":1623235559979,"results":"287","hashOfConfig":"173"},{"size":3052,"mtime":1623240482148,"results":"288","hashOfConfig":"173"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},"mgqaen",{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"301"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"291"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"291"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"291"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"291"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"291"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"291"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},"1lbpp8a",{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"354"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"354"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"354"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"354"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"354"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"354"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"354"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"354"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"354"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"354"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"424"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"354"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"354"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"354"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"354"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"354"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"354"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"354"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"354"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"354"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"354"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"354"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"354"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"354"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"354"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"354"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"354"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"354"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"354"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"495","messages":"496","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"354"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"354"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"354"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"354"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"513","messages":"514","errorCount":6,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"517"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"520","messages":"521","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"354"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"525"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"354"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"354"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"539"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"354"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"354"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"354"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"354"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"354"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"561","messages":"562","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"563","messages":"564","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"565","messages":"566","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"354"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"354"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"354"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"354"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"354"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"354"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"354"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"354"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"354"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"354"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"354"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"605"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"608"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"354"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"354"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619","usedDeprecatedRules":"354"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622","usedDeprecatedRules":"354"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"354"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"628","messages":"629","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"354"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"354"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"354"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"354"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"354"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"354"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"354"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"354"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654","usedDeprecatedRules":"354"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"354"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"354"},"D:\\react-myprojects\\hrms\\client\\src\\index.js",[],["661","662"],"D:\\react-myprojects\\hrms\\client\\src\\App.js",[],"D:\\react-myprojects\\hrms\\client\\src\\reportWebVitals.js",[],"D:\\react-myprojects\\hrms\\client\\src\\components\\Copyright.js",[],"D:\\react-myprojects\\hrms\\client\\src\\components\\Navigator.js",["663"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport DnsRoundedIcon from \"@material-ui/icons/DnsRounded\";\r\nimport PermMediaOutlinedIcon from \"@material-ui/icons/PhotoSizeSelectActual\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport SettingsEthernetIcon from \"@material-ui/icons/SettingsEthernet\";\r\nimport SettingsInputComponentIcon from \"@material-ui/icons/SettingsInputComponent\";\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport PhonelinkSetupIcon from \"@material-ui/icons/PhonelinkSetup\";\r\n\r\nconst categories = [\r\n  {\r\n    id: \"Develop\",\r\n    children: [\r\n      { id: \"Authentication\", icon: <PeopleIcon />, active: true },\r\n      { id: \"Database\", icon: <DnsRoundedIcon /> },\r\n      { id: \"Storage\", icon: <PermMediaOutlinedIcon /> },\r\n      { id: \"Hosting\", icon: <PublicIcon /> },\r\n      { id: \"Functions\", icon: <SettingsEthernetIcon /> },\r\n      { id: \"ML Kit\", icon: <SettingsInputComponentIcon /> },\r\n    ],\r\n  },\r\n  {\r\n    id: \"Quality\",\r\n    children: [\r\n      { id: \"Analytics\", icon: <SettingsIcon /> },\r\n      { id: \"Performance\", icon: <TimerIcon /> },\r\n      { id: \"Test Lab\", icon: <PhonelinkSetupIcon /> },\r\n    ],\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: theme.palette.common.white,\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"rgba(255, 255, 255, 0.7)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.white,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"#4fc3f7\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Navigator() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer variant=\"permanent\">\r\n      <List disablePadding>\r\n        {/* <ListItem\r\n          className={clsx(classes.firebase, classes.item, classes.itemCategory)}\r\n        >\r\n          Paperbase\r\n        </ListItem>\r\n        <ListItem className={clsx(classes.item, classes.itemCategory)}>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <HomeIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            classes={{\r\n              primary: classes.itemPrimary,\r\n            }}\r\n          >\r\n            Project Overview\r\n          </ListItemText>\r\n        </ListItem> */}\r\n        {categories.map(({ id, children }) => (\r\n          <React.Fragment key={id}>\r\n            <ListItem className={classes.categoryHeader}>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classes.categoryHeaderPrimary,\r\n                }}\r\n              >\r\n                {id}\r\n              </ListItemText>\r\n            </ListItem>\r\n            {children.map(({ id: childId, icon, active }) => (\r\n              <ListItem\r\n                key={childId}\r\n                button\r\n                className={clsx(classes.item, active && classes.itemActiveItem)}\r\n              >\r\n                <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\r\n                <ListItemText\r\n                  classes={{\r\n                    primary: classes.itemPrimary,\r\n                  }}\r\n                >\r\n                  {childId}\r\n                </ListItemText>\r\n              </ListItem>\r\n            ))}\r\n\r\n            <Divider className={classes.divider} />\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nNavigator.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Navigator;\r\n",["664","665"],"D:\\react-myprojects\\hrms\\client\\src\\components\\MenuListItems.js",["666","667","668","669","670","671","672","673","674","675","676","677","678","679"],"import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport DnsRoundedIcon from \"@material-ui/icons/DnsRounded\";\r\nimport PermMediaOutlinedIcon from \"@material-ui/icons/PhotoSizeSelectActual\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport SettingsEthernetIcon from \"@material-ui/icons/SettingsEthernet\";\r\nimport SettingsInputComponentIcon from \"@material-ui/icons/SettingsInputComponent\";\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport PhonelinkSetupIcon from \"@material-ui/icons/PhonelinkSetup\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainHeader: {\r\n    fontSize: 24,\r\n    color: \"blue\",\r\n  },\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: theme.palette.common.blue,\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"blue\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.white,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"#4fc3f7\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    color: \"blue\",\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst MenuListItems = () => {\r\n  const classes = useStyles();\r\n  const [openPay, setOpenPay] = useState(false);\r\n  const [openTable, setOpenTable] = useState(false);\r\n\r\n  const handleClickPay = () => {\r\n    setOpenPay(!openPay);\r\n  };\r\n\r\n  const handleClickTable = () => {\r\n    setOpenTable(!openTable);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ListSubheader inset className={classes.mainHeader}>\r\n        Main\r\n      </ListSubheader>\r\n\r\n      <Link to=\"/\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Dashboard\" className={classes.item} />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/allemployees\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"All Employees\" className={classes.item} />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/leave\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Leave\" className={classes.item} />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <ListItem button onClick={handleClickPay}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Payroll\" className={classes.item} />\r\n        {openPay ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n\r\n      <Collapse in={openPay} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/payroll\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payroll Run\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/payslip\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payslip\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse>\r\n\r\n      <Link to=\"/expenses\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <LayersIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Expenses\" className={classes.item} />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/dailyallowances\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <LayersIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Daily Allowances\" className={classes.item} />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <ListItem button onClick={handleClickTable}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Tables\" className={classes.item} />\r\n        {openTable ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openTable} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/clients\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Clients\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/departments\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Departments\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/designation\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Designation\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/allowances\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Allowances\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuListItems;\r\n","D:\\react-myprojects\\hrms\\client\\src\\components\\Appbanner.js",["680","681"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nconst drawerWidth = 255;\r\n\r\nconst Appbanner = ({ handleDrawerOpen, handleDrawerClose, open, title }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar\r\n      position=\"absolute\"\r\n      className={clsx(classes.appBar, open && classes.appBarShift)}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={handleDrawerOpen}\r\n          className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          noWrap\r\n          className={classes.title}\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <IconButton color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Appbanner;\r\n","D:\\react-myprojects\\hrms\\client\\src\\components\\SideDrawer.js",["682","683","684","685","686","687","688","689","690","691","692","693"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\n\r\nimport MenuListItems from \"./MenuListItems\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      //changing the sidebar hide width\r\n      width: theme.spacing(7),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nconst SideDrawer = ({ HandleDrawerOpen, handleDrawerClose, open }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <MenuListItems />\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","D:\\react-myprojects\\hrms\\client\\src\\pages\\index.js",[],"D:\\react-myprojects\\hrms\\client\\src\\pages\\HomePage.js",["694","695","696","697","698","699","700","701","702","703","704","705","706"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\n\r\nimport Copyright from \"../components/Copyright\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nconst HomePage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          {/* Chart */}\r\n          <Grid item xs={12} md={8} lg={9}>\r\n            <Paper className={fixedHeightPaper}>\r\n              <div>Chart</div>\r\n            </Paper>\r\n          </Grid>\r\n          {/* Recent Deposits */}\r\n          <Grid item xs={12} md={4} lg={3}>\r\n            <Paper className={fixedHeightPaper}>\r\n              <div>Deposits</div>\r\n            </Paper>\r\n          </Grid>\r\n          {/* Recent Orders */}\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n              <div>Orders</div>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n        <Box pt={4}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","D:\\react-myprojects\\hrms\\client\\src\\pages\\DashboardPage.js",[],"D:\\react-myprojects\\hrms\\client\\src\\pages\\DepartmentsPage.js",[],"D:\\react-myprojects\\hrms\\client\\src\\pages\\AllEmployeesPage.js",[],"D:\\react-myprojects\\hrms\\client\\src\\pages\\ExpensesPage.js",[],"D:\\react-myprojects\\hrms\\client\\src\\pages\\LeavePage.js",[],"D:\\react-myprojects\\hrms\\client\\src\\pages\\PayslipPage.js",[],"D:\\react-myprojects\\hrms\\client\\src\\pages\\PayrollPage.js",[],"D:\\react-myprojects\\hrms\\client\\src\\pages\\DesignationPage.js",[],"D:\\react-myprojects\\hrms\\client\\src\\pages\\AllowancesPage.js",[],"D:\\react-myprojects\\hrms\\client\\src\\pages\\ClientsPage.js",[],"D:\\react-myprojects\\hrms\\client\\src\\pages\\PrivateRoute.js",["707","708"],"import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n// import { useUserContext } from '../context/user_context'\r\n\r\nconst PrivateRoute = () => {\r\n  return <h4>Private Route</h4>;\r\n};\r\nexport default PrivateRoute;\r\n","D:\\react-myprojects\\hrms\\client\\src\\pages\\ErrorPage.js",[],"D:\\react-myprojects\\hrms\\client\\src\\components\\DashboardAdmin.js",["709","710","711","712"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\n// import Chart from \"./Chart\";\r\n// import Deposits from \"./Deposits\";\r\n// import Orders from \"./Orders\";\r\n\r\nimport Appbanner from \"./Appbanner\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport SingleEmployee from \"./SingleEmployee\";\r\nimport {\r\n  Home,\r\n  Dashboard,\r\n  AllEmployees,\r\n  Leave,\r\n  Expenses,\r\n  Payslip,\r\n  Payroll,\r\n  Departments,\r\n  Designation,\r\n  Clients,\r\n  Allowances,\r\n  DailyAllowances,\r\n  PrivateRoute,\r\n  Error,\r\n} from \"../pages\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function DashboardAdmin() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Router>\r\n        <Appbanner\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          open={open}\r\n          title=\"Human Resource Management System\"\r\n        />\r\n\r\n        <SideDrawer\r\n          handleDrawerOpen={handleDrawerOpen}\r\n          handleDrawerClose={handleDrawerClose}\r\n          open={open}\r\n        />\r\n\r\n        <main className={classes.content}>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route exact path=\"/allemployees\">\r\n              <AllEmployees />\r\n            </Route>\r\n            <Route exact path=\"/payroll\">\r\n              <Payroll />\r\n            </Route>\r\n            <Route exact path=\"/payslip\">\r\n              <Payslip />\r\n            </Route>\r\n            <Route exact path=\"/leave\">\r\n              <Leave />\r\n            </Route>\r\n            <Route exact path=\"/dailyallowances\">\r\n              <DailyAllowances />\r\n            </Route>\r\n            <Route exact path=\"/expenses\">\r\n              <Expenses />\r\n            </Route>\r\n            <Route exact path=\"/departments\">\r\n              <Departments />\r\n            </Route>\r\n            <Route exact path=\"/designation\">\r\n              <Designation />\r\n            </Route>\r\n            <Route exact path=\"/allowances\">\r\n              <Allowances />\r\n            </Route>\r\n            <Route exact path=\"/clients\">\r\n              <Clients />\r\n            </Route>\r\n            <Route exact path=\"/singleemployee\">\r\n              <SingleEmployee />\r\n            </Route>\r\n            {/* <Route\r\n              exact\r\n              path=\"/employees/:empId\"\r\n              children={<SingleEmployee />}\r\n            /> */}\r\n            <Route path=\"*\">\r\n              <Error />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n","D:\\react-myprojects\\hrms\\client\\src\\pages\\DailyAllowancesPage.js",[],"D:\\react-myprojects\\hrms\\client\\src\\components\\AllEmployeesTable.js",["713","714","715","716","717","718"],"D:\\react-myprojects\\hrms\\client\\src\\components\\SingleEmployee.js",["719","720","721"],"D:\\react-myprojects\\hrms\\client\\src\\components\\EmployeeForm.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\index.js",[],["722","723"],"D:\\react-myprojects\\hrms-airtable\\src\\App.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\reportWebVitals.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\DashboardAdmin.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\Appbanner.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\SideDrawer.js",["724","725","726"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n\r\nimport MenuListItems from \"./MenuListItems\";\r\nimport headerlogo from \"../assets/headerlogo.png\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst SideDrawer = ({ HandleDrawerOpen, handleDrawerClose, open }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        {/* \"flex-end\" */}\r\n\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n\r\n        <Divider />\r\n        <List>\r\n          <MenuListItems />\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      //changing the sidebar hide width\r\n      width: theme.spacing(7),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  image: {\r\n    width: 200,\r\n    height: 1150,\r\n  },\r\n  img: {\r\n    margin: \"auto\",\r\n    display: \"block\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default SideDrawer;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleEmployee.js",["727"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EmployeeForm from \"./EmployeeForm\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleEmployee = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/allemployees\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n\r\n                  <EmployeeForm />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleEmployee;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\index.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\MenuListItems.js",["728","729"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport MoneyIcon from \"@material-ui/icons/Money\";\r\n// import Collapse from \"@material-ui/core/Collapse\";\r\n// import ExpandLess from \"@material-ui/icons/ExpandLess\";\r\n// import ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst MenuListItems = () => {\r\n  const classes = useStyles();\r\n  const [openPay, setOpenPay] = useState(false);\r\n  const [openTable, setOpenTable] = useState(false);\r\n\r\n  const handleClickPay = () => {\r\n    setOpenPay(!openPay);\r\n  };\r\n\r\n  const handleClickTable = () => {\r\n    setOpenTable(!openTable);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <ListSubheader inset className={classes.mainHeader}>\r\n        Admin\r\n      </ListSubheader>\r\n\r\n      <Link to=\"/\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Dashboard\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/allemployees\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"All Employees\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/leave\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <FlightIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Leave\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n      <Link to=\"/payslip\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MonetizationOnIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Payroll\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <ListItem button onClick={handleClickPay}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Payroll\" className={classes.item} />\r\n        {openPay ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n\r\n      <Collapse in={openPay} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/payroll\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payroll Run\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/payslip\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Payslip\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n\r\n      <Link to=\"/expenses\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Expenses\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      <Link to=\"/dailyallowances\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <MoneyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Site Allowances\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n      <Link to=\"/tables\">\r\n        <ListItem button>\r\n          <ListItemIcon className={classes.itemIcon}>\r\n            <LayersIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Tables\"\r\n            className={classes.categoryHeaderPrimary}\r\n          />\r\n        </ListItem>\r\n      </Link>\r\n\r\n      {/* <ListItem button onClick={handleClickTable}>\r\n        <ListItemIcon className={classes.itemIcon}>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Tables\" className={classes.item} />\r\n        {openTable ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n      <Collapse in={openTable} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n          <Link to=\"/clients\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Clients\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/departments\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Departments\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/designation\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Designation\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n\r\n          <Link to=\"/allowances\">\r\n            <ListItem button className={classes.nested}>\r\n              <ListItemIcon></ListItemIcon>\r\n              <ListItemText primary=\"Allowances\" className={classes.item} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainHeader: {\r\n    fontSize: 24,\r\n    color: \"primary\",\r\n  },\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: \"orange\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: \"primary\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: \"#232f3e\",\r\n    boxShadow: \"0 -1px 0 #404854 inset\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.orange,\r\n  },\r\n  itemActiveItem: {\r\n    color: \"primary\",\r\n  },\r\n  itemPrimary: {\r\n    fontSize: \"inherit\",\r\n  },\r\n  itemIcon: {\r\n    minWidth: \"auto\",\r\n    marginRight: theme.spacing(2),\r\n    color: \"primary\",\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default MenuListItems;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeForm.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\AllEmployeesPage.js",["730"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport AllEmployeesTable from \"../components/AllEmployeesTable\";\r\nimport { headEmployeesTableCells } from \"../utils/constants\";\r\nconst drawerWidth = 240;\r\n\r\nconst AllEmployees = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <AllEmployeesTable title=\"All Employees\" />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n    height: \"95vh\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 240,\r\n    height: \"80vh\",\r\n  },\r\n}));\r\nexport default AllEmployees;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\DashboardPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\ExpensesPage.js",["731"],"import React, { useEffect } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//import { headExpenseTableCells } from \"../utils/constants\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport ExpenseTable from \"../components/ExpenseTable\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ExpensesPage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { loadExpenses, expenses_loading } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    loadExpenses();\r\n  }, []);\r\n\r\n  if (expenses_loading) {\r\n    return (\r\n      <div>\r\n        <Paper className={fixedHeightPaper}>\r\n          \r\n        <h2>Loading...Expenses</h2>\r\n         </Paper>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <ExpenseTable title=\"Expenses Claims\" />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 240,\r\n    height: \"85vh\",\r\n  },\r\n}));\r\nexport default ExpensesPage;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\PayrollPage.js",["732"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport PayslipsPeriods from \"../components/PayslipsPeriods\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst PayrollPage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div>\r\n                  <h2>Payroll Page</h2>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default PayrollPage;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\LeavePage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\PayslipPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\DepartmentsPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\PrivateRoute.js",["733","734"],"import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n// import { useUserContext } from '../context/user_context'\r\n\r\nconst PrivateRoute = () => {\r\n  return <div>Private Route</div>;\r\n};\r\nexport default PrivateRoute;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\AllowancesPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\DesignationPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\DailyAllowancesPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\ClientsPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\ErrorPage.js",["735","736"],"import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { headExpenseTableCells } from \"../utils/constants\";\r\nimport ExpenseTable from \"../components/ExpenseTable\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ErrorPage = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <div className=\"main-wrapper\">\r\n                  <Helmet>\r\n                    <title>Error 404 - HRMS Admin Template</title>\r\n                    <meta name=\"description\" content=\"Login page\" />\r\n                  </Helmet>\r\n                  <div className=\"error-box\">\r\n                    <h1>404</h1>\r\n                    <h3>\r\n                      <i className=\"fa fa-warning\" /> Oops! Page not found!\r\n                    </h3>\r\n                    <p>The page you requested was not found.</p>\r\n                    <a\r\n                      onclick={() => localStorage.setItem(\"firstload\", \"true\")}\r\n                      href=\"/\"\r\n                      className=\"btn btn-custom\"\r\n                    >\r\n                      Back to Home\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    // height: 240,\r\n    height: \"85vh\",\r\n  },\r\n}));\r\nexport default ErrorPage;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\Copyright.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\AllEmployeesTable.js",["737"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\nimport EmployeeView from \"./EmployeeView\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"IC No\", field: \"ic_no\" },\r\n  { title: \"Gender\", field: \"gender\" },\r\n  { title: \"Age\", field: \"age\", type: \"numeric\" },\r\n  { title: \"Email\", field: \"email\" },\r\n];\r\n\r\nexport default function AllEmployeesTable() {\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n\r\n  const {\r\n    employees,\r\n    editEmployeeID,\r\n    employees_loading,\r\n    deleteEmployee,\r\n    loadEmployees,\r\n    setEditEmployeeID,\r\n    setIsEditingOn,\r\n    setIsEditingOff,\r\n    resetSingleEmployee,\r\n    resetEmployees,\r\n  } = useEmployeesContext();\r\n\r\n  const {\r\n    resetTables,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    resetEmployees();\r\n    loadEmployees();\r\n  }, []);\r\n\r\n  const update_Employee = async (data) => {\r\n    const { id } = data;\r\n    resetTables();\r\n    resetSingleEmployee();\r\n    //resetEmployees();\r\n    setEditEmployeeID(id);\r\n    setIsEditingOn();\r\n    //getSingleEmployee(id);\r\n    handleDialogOpen();\r\n    //history.push(\"/singleemployee\");\r\n  };\r\n\r\n  const add_Employee = async (data) => {\r\n       resetSingleEmployee();\r\n    setEditEmployeeID(\"\");\r\n    setIsEditingOff();\r\n    handleDialogOpen();\r\n    //history.push(\"/singleemployee\");\r\n  };\r\n\r\n  const delete_Employee = (data) => {\r\n    const { id } = data;\r\n    setEditEmployeeID(id);\r\n    handleAlertOpen();\r\n    //deleteEmployee(id);\r\n    //loadEmployees();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadEmployees();\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editEmployeeID;\r\n    deleteEmployee(id);\r\n    loadEmployees();\r\n  };\r\n\r\n  if (employees_loading) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    console.log(employees)\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={employees}\r\n          title=\"Employees Listing\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Employee(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Employee(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Employee(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"secondary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={true}\r\n        >\r\n          <EmployeeView handleDialogClose={handleDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Employee\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\utils\\constants.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\context\\employees_context.js",["738","739","740","741","742","743","744","745"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/employees_reducer\";\r\nimport { employees_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITEMPLOYEEID,\r\n  SET_ISEDITING_ON,\r\n  SET_ISEDITING_OFF,\r\n  SET_SINGLEEMPLOYEE,\r\n  GET_EMPLOYEES_BEGIN,\r\n  GET_EMPLOYEES_SUCCESS,\r\n  GET_EMPLOYEES_ERROR,\r\n  GET_SINGLE_EMPLOYEE_BEGIN,\r\n  GET_SINGLE_EMPLOYEE_SUCCESS,\r\n  GET_SINGLE_EMPLOYEE_ERROR,\r\n  ADD_EMPLOYEE_BEGIN,\r\n  ADD_EMPLOYEE_SUCCESS,\r\n  ADD_EMPLOYEE_ERROR,\r\n  DELETE_EMPLOYEE_BEGIN,\r\n  DELETE_EMPLOYEE_SUCCESS,\r\n  DELETE_EMPLOYEE_ERROR,\r\n  UPDATE_EMPLOYEE_BEGIN,\r\n  UPDATE_EMPLOYEE_SUCCESS,\r\n  UPDATE_EMPLOYEE_ERROR,\r\n  RESET_SINGLE_EMPLOYEE,\r\n  RESET_EMPLOYEES,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isEditing: false,\r\n  alert: { show: false, msg: \"\", type: \"\" },\r\n  editEmployeeID: null,\r\n  employees_loading: false,\r\n  employees_error: false,\r\n  employees: [],\r\n  single_employee_loading: false,\r\n  single_employee_error: false,\r\n  single_employee: {},\r\n  delete_employee_loading: false,\r\n  delete_employee_error: false,\r\n  update_employee_loading: false,\r\n  update_employee_error: false,\r\n  add_employee_loading: false,\r\n  add_employee_error: false,\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n};\r\n\r\nconst EmployeesContext = React.createContext();\r\n\r\nexport const EmployeesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const loadEmployees = async () => {\r\n    dispatch({ type: GET_EMPLOYEES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(employees_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const employees = await res.json();\r\n      dispatch({ type: GET_EMPLOYEES_SUCCESS, payload: employees });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EMPLOYEES_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsEditingOn = () => {\r\n    dispatch({ type: SET_ISEDITING_ON });\r\n  };\r\n\r\n  const setIsEditingOff = () => {\r\n    dispatch({ type: SET_ISEDITING_OFF });\r\n  };\r\n\r\n  const resetSingleEmployee = () => {\r\n    dispatch({ type: RESET_SINGLE_EMPLOYEE });\r\n  };\r\n\r\n  const resetEmployees = () => {\r\n    dispatch({ type: RESET_EMPLOYEES });\r\n  };\r\n\r\n  const setEditEmployeeID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITEMPLOYEEID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleEmployee = async (id) => {\r\n    dispatch({ type: GET_SINGLE_EMPLOYEE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${employees_url}?id=${id}`);\r\n      const singleemployee = data;\r\n      dispatch({ type: GET_SINGLE_EMPLOYEE_SUCCESS, payload: singleemployee });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleEmployeeEmail = async (fv) => {\r\n    dispatch({ type: GET_SINGLE_EMPLOYEE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${employees_url}?fv=${fv}`);\r\n      const singleemployee = data;\r\n      dispatch({ type: GET_SINGLE_EMPLOYEE_SUCCESS, payload: singleemployee });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addEmployee = async (data) => {\r\n    const { id, name, ic_no, email, age, gender } = data;\r\n    //\r\n    dispatch({ type: ADD_EMPLOYEE_BEGIN });\r\n    try {\r\n      await fetch(employees_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_EMPLOYEE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateEmployee = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_EMPLOYEE_BEGIN });\r\n    try {\r\n      await fetch(employees_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_EMPLOYEE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteEmployee = async (id) => {\r\n    dispatch({ type: DELETE_EMPLOYEE_BEGIN });\r\n    try {\r\n      await fetch(employees_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_EMPLOYEE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n  return (\r\n    <EmployeesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadEmployees,\r\n        addEmployee,\r\n        updateEmployee,\r\n        deleteEmployee,\r\n        getSingleEmployee,\r\n        getSingleEmployeeEmail,\r\n        setEditEmployeeID,\r\n        setIsEditingOn,\r\n        setIsEditingOff,\r\n        resetSingleEmployee,\r\n        resetEmployees,\r\n      }}\r\n    >\r\n      {children}\r\n    </EmployeesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useEmployeesContext = () => {\r\n  return useContext(EmployeesContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable\\src\\actions.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\reducers\\employees_reducer.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeForm2.js",["746","747","748","749","750","751","752","753","754"],"import React, { useState, useReducer, useEffect } from \"react\";\r\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  gender: \"\",\r\n  ic_no: \"\",\r\n  email: \"\",\r\n  age: 0,\r\n};\r\n\r\nconst EmployeeForm = () => {\r\n  const classes = useStyles();\r\n  const { isEditing, single_employee } = useEmployeesContext();\r\n  const { name, gender, ic_no, email, age } = single_employee || initial_values;\r\n\r\n  const [formInput, setFormInput] = useState(initial_values);\r\n\r\n  const handleInput = (e) => {\r\n    const { name, type, value } = e.target;\r\n    const val = type === \"number\" ? parseFloat(value) : value;\r\n    setFormInput({ [name]: val });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let data = { formInput };\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          EMPLOYEE FORM\r\n        </Typography>\r\n        <Typography component=\"p\">Employee Particulars</Typography>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <TextField\r\n              label=\"Name\"\r\n              id=\"margin-normal\"\r\n              name=\"name\"\r\n              defaultValue={formInput.name}\r\n              className={classes.textField}\r\n              helperText=\"Enter your full name\"\r\n              onChange={handleInput}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"IC No\"\r\n              id=\"margin-normal\"\r\n              name=\"ic_no\"\r\n              defaultValue={formInput.ic_no}\r\n              className={classes.textField}\r\n              helperText=\"Enter your I/C No\"\r\n              onChange={handleInput}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"Gender\"\r\n              id=\"margin-normal\"\r\n              name=\"gender\"\r\n              defaultValue={formInput.gender}\r\n              className={classes.textField}\r\n              helperText=\"Enter your gender\"\r\n              onChange={handleInput}\r\n              select\r\n            >\r\n              <MenuItem value=\"Maine\">Male</MenuItem>\r\n              <MenuItem value=\"Female\">Female</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"Age\"\r\n              id=\"margin-normal\"\r\n              type=\"number\"\r\n              name=\"age\"\r\n              defaultValue={formInput.age}\r\n              className={classes.textField}\r\n              helperText=\"Enter your age\"\r\n              onChange={handleInput}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              label=\"Email\"\r\n              id=\"margin-normal\"\r\n              name=\"email\"\r\n              defaultValue={formInput.name}\r\n              className={classes.textField}\r\n              helperText=\"e.g. name@gmail.com\"\r\n              onChange={handleInput}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n            >\r\n              Submit <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default EmployeeForm;\r\n",["755","756"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\TableForm.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTable.js",["757","758"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Leave Balance\", field: \"leave_bal\", type:\"numeric\",editable: \"never\" },\r\n  { title: \"No of Days\", field: \"no_of_days\", type: \"mumeric\",editable: \"never\" },\r\n  {\r\n    title: \"Reason\",\r\n    field: \"reason\",\r\n    editable: \"never\"\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function LeaveTable() {\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    leaves,\r\n    editLeaveID,\r\n    leaves_loading,\r\n    deleteLeave,\r\n    loadLeaves,\r\n    getSingleLeave,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n    resetSingleLeave,\r\n  } = useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    loadLeaves();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadEmployees();\r\n  }, []);\r\n\r\n  const update_Leave = async (data) => {\r\n    const { id } = data;\r\n    setEditLeaveID(id);\r\n    setIsLeaveEditingOn();\r\n    getSingleLeave(id);\r\n    handleDialogOpen();\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const add_Leave = async (data) => {\r\n    // const { id } = data;\r\n    resetSingleLeave();\r\n    setEditLeaveID(\"\");\r\n    setIsLeaveEditingOff();\r\n    handleDialogOpen();\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const delete_Leave = (data) => {\r\n    const { id } = data;\r\n    setEditLeaveID(id);\r\n    handleAlertOpen();\r\n    //deleteLeave(id);\r\n    //loadLeaves();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadLeaves();\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeave(id);\r\n    loadLeaves();\r\n  };\r\n\r\n  if (leaves_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Leaves</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leaves}\r\n          title=\"Leave Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          \r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Leave(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Leave(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Leave(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <LeaveForm handleDialogClose={handleDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\context\\leaves_context.js",["759","760","761","762","763","764","765","766","767","768"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/leaves_reducer\";\r\nimport { leaves_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITLEAVEID,\r\n  SET_ISLEAVEEDITING_ON,\r\n  SET_ISLEAVEEDITING_OFF,\r\n  SET_SINGLELEAVE,\r\n  GET_LEAVES_BEGIN,\r\n  GET_LEAVES_SUCCESS,\r\n  GET_LEAVES_ERROR,\r\n  GET_SINGLE_LEAVE_BEGIN,\r\n  GET_SINGLE_LEAVE_SUCCESS,\r\n  GET_SINGLE_LEAVE_ERROR,\r\n  GET_SINGLEBATCH_LEAVE_BEGIN,\r\n  GET_SINGLEBATCH_LEAVE_SUCCESS,\r\n  GET_SINGLEBATCH_LEAVE_ERROR,\r\n  ADD_LEAVE_BEGIN,\r\n  ADD_LEAVE_SUCCESS,\r\n  ADD_LEAVE_ERROR,\r\n  DELETE_LEAVE_BEGIN,\r\n  DELETE_LEAVE_SUCCESS,\r\n  DELETE_LEAVE_ERROR,\r\n  UPDATE_LEAVE_BEGIN,\r\n  UPDATE_LEAVE_SUCCESS,\r\n  UPDATE_LEAVE_ERROR,\r\n  RESET_SINGLE_LEAVE,\r\n  RESET_TABLES,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isLeaveEditing: false,\r\n  alertleave: { show: false, msg: \"\", type: \"\" },\r\n  editLeaveID: null,\r\n  leaves_loading: false,\r\n  leaves_error: false,\r\n  leaves: [],\r\n  single_leave_loading: false,\r\n  single_leave_error: false,\r\n  single_leave: {},\r\n  singlebatch_leave_loading: false,\r\n  singlebatch_leave_error: false,\r\n  singlebatch_leave: {},\r\n  delete_leave_loading: false,\r\n  delete_leave_error: false,\r\n  update_leave_loading: false,\r\n  update_leave_error: false,\r\n  add_leave_loading: false,\r\n  add_leave_error: false,\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n};\r\n\r\nconst LeavesContext = React.createContext();\r\n\r\nexport const LeavesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const loadLeaves = async () => {\r\n    dispatch({ type: GET_LEAVES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(leaves_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const leaves = await res.json();\r\n      dispatch({ type: GET_LEAVES_SUCCESS, payload: leaves });\r\n    } catch (error) {\r\n      dispatch({ type: GET_LEAVES_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadPendingLeaves = async (fi) => {\r\n    dispatch({ type: GET_LEAVES_BEGIN });\r\n    try {\r\n      //const res = await fetch(leaves_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const { data } = await axios.get(`${leaves_url}?fi=${fi}`);\r\n      const leaves = data;\r\n\r\n      dispatch({ type: GET_LEAVES_SUCCESS, payload: leaves });\r\n    } catch (error) {\r\n      dispatch({ type: GET_LEAVES_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsLeaveEditingOn = () => {\r\n    dispatch({ type: SET_ISLEAVEEDITING_ON });\r\n  };\r\n\r\n  const setIsLeaveEditingOff = () => {\r\n    dispatch({ type: SET_ISLEAVEEDITING_OFF });\r\n  };\r\n\r\n  const resetSingleLeave = () => {\r\n    dispatch({ type: RESET_SINGLE_LEAVE });\r\n  };\r\n\r\n  const setEditLeaveID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITLEAVEID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleLeave = async (id) => {\r\n    dispatch({ type: GET_SINGLE_LEAVE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${leaves_url}?id=${id}`);\r\n      const singleleave = data;\r\n      dispatch({ type: GET_SINGLE_LEAVE_SUCCESS, payload: singleleave });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_LEAVE_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleBatchLeave = async (empid) => {\r\n    dispatch({ type: GET_SINGLEBATCH_LEAVE_BEGIN });\r\n    try {\r\n      const res = await fetch(`${leaves_url}?fv=${empid}`);\r\n      //console.log(`${family_url}?fv=${linkid}`);\r\n      const singlebatchleave = await res.json();\r\n\r\n      dispatch({\r\n        type: GET_SINGLEBATCH_LEAVE_SUCCESS,\r\n        payload: singlebatchleave,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLEBATCH_LEAVE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addLeave = async (data) => {\r\n    const { id, name, from_date, to_date, reason, no_of_days, status } = data;\r\n    //\r\n    dispatch({ type: ADD_LEAVE_BEGIN });\r\n    try {\r\n      await fetch(leaves_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_LEAVE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_LEAVE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateLeave = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_LEAVE_BEGIN });\r\n    try {\r\n      await fetch(leaves_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_LEAVE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_LEAVE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteLeave = async (id) => {\r\n    dispatch({ type: DELETE_LEAVE_BEGIN });\r\n    try {\r\n      await fetch(leaves_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_LEAVE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_LEAVE_ERROR });\r\n    }\r\n  };\r\n  return (\r\n    <LeavesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadLeaves,\r\n        loadPendingLeaves,\r\n        addLeave,\r\n        updateLeave,\r\n        deleteLeave,\r\n        getSingleLeave,\r\n        getSingleBatchLeave,\r\n        setEditLeaveID,\r\n        setIsLeaveEditingOn,\r\n        setIsLeaveEditingOff,\r\n        resetSingleLeave,\r\n      }}\r\n    >\r\n      {children}\r\n    </LeavesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useLeavesContext = () => {\r\n  return useContext(LeavesContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleLeave.js",["769","770","771"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LeaveForm from \"./LeaveForm\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleLeave = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/leave\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n\r\n                  <LeaveForm />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleLeave;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveForm.js",["772"],"D:\\react-myprojects\\hrms-airtable\\src\\reducers\\leaves_reducer.js",["773"],"import {\r\n  SET_EDITLEAVEID,\r\n  SET_ISLEAVEEDITING_ON,\r\n  SET_ISLEAVEEDITING_OFF,\r\n  SET_SINGLELEAVE,\r\n  GET_LEAVES_BEGIN,\r\n  GET_LEAVES_SUCCESS,\r\n  GET_LEAVES_ERROR,\r\n  GET_SINGLE_LEAVE_BEGIN,\r\n  GET_SINGLE_LEAVE_SUCCESS,\r\n  GET_SINGLE_LEAVE_ERROR,\r\n  GET_SINGLEBATCH_LEAVE_BEGIN,\r\n  GET_SINGLEBATCH_LEAVE_SUCCESS,\r\n  GET_SINGLEBATCH_LEAVE_ERROR,\r\n  ADD_LEAVE_BEGIN,\r\n  ADD_LEAVE_SUCCESS,\r\n  ADD_LEAVE_ERROR,\r\n  DELETE_LEAVE_BEGIN,\r\n  DELETE_LEAVE_SUCCESS,\r\n  DELETE_LEAVE_ERROR,\r\n  UPDATE_LEAVE_BEGIN,\r\n  UPDATE_LEAVE_SUCCESS,\r\n  UPDATE_LEAVE_ERROR,\r\n  RESET_SINGLE_LEAVE,\r\n} from \"../actions\";\r\n\r\nconst leaves_reducer = (state, action) => {\r\n  // set leaves variables\r\n  if (action.type === SET_EDITLEAVEID) {\r\n    return { ...state, editLeaveID: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISLEAVEEDITING_ON) {\r\n    return { ...state, isLeaveEditing: true };\r\n  }\r\n  if (action.type === SET_ISLEAVEEDITING_OFF) {\r\n    return { ...state, isLeaveEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_LEAVE) {\r\n    return { ...state, single_leave: {} };\r\n  }\r\n  // get leaves\r\n  if (action.type === GET_LEAVES_BEGIN) {\r\n    return { ...state, leaves_loading: true };\r\n  }\r\n  if (action.type === GET_LEAVES_SUCCESS) {\r\n    return { ...state, leaves_loading: false, leaves: action.payload };\r\n  }\r\n  if (action.type === GET_LEAVES_ERROR) {\r\n    return { ...state, leaves_loading: false, leaves_error: true };\r\n  }\r\n\r\n  // add leave\r\n  if (action.type === ADD_LEAVE_BEGIN) {\r\n    return { ...state, add_leave_loading: true };\r\n  }\r\n  if (action.type === ADD_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_leaves_loading: false,\r\n      leaves: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_LEAVE_ERROR) {\r\n    return { ...state, leaves_loading: false, add_leave_error: true };\r\n  }\r\n  // update leave\r\n  if (action.type === UPDATE_LEAVE_BEGIN) {\r\n    return { ...state, update_leave_loading: true };\r\n  }\r\n  if (action.type === UPDATE_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      leaves_loading: false,\r\n      single_leave: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_LEAVE_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_leave_loading: false,\r\n      update_leave_error: true,\r\n    };\r\n  }\r\n\r\n  // delete leave\r\n  if (action.type === DELETE_LEAVE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_leave_loading: true,\r\n      delete_leave_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_leave_loading: false,\r\n      delete_leave_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_LEAVE_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_leave_loading: false,\r\n      delete_leave_error: true,\r\n    };\r\n  }\r\n\r\n  //single leave\r\n  if (action.type === GET_SINGLE_LEAVE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_leave_loading: true,\r\n      single_leave_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_leave_loading: false,\r\n      single_leave: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_LEAVE_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_leave_loading: false,\r\n      single_leave_error: true,\r\n    };\r\n  }\r\n\r\n  //single batch leave\r\n  if (action.type === GET_SINGLEBATCH_LEAVE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_leave_loading: true,\r\n      singlebatch_leave_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_LEAVE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      singlebatch_leave_loading: false,\r\n      singlebatch_leave: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_LEAVE_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_leave_loading: false,\r\n      singlebatch_leave_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default leaves_reducer;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\context\\expenses_context.js",["774","775","776","777","778","779","780","781","782"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/expenses_reducer\";\r\nimport { expenses_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITEXPENSEID,\r\n  SET_ISEXPENSEEDITING_ON,\r\n  SET_ISEXPENSEEDITING_OFF,\r\n  SET_SINGLEEXPENSE,\r\n  GET_EXPENSES_BEGIN,\r\n  GET_EXPENSES_SUCCESS,\r\n  GET_EXPENSES_ERROR,\r\n  GET_SINGLE_EXPENSE_BEGIN,\r\n  GET_SINGLE_EXPENSE_SUCCESS,\r\n  GET_SINGLE_EXPENSE_ERROR,\r\n  ADD_EXPENSE_BEGIN,\r\n  ADD_EXPENSE_SUCCESS,\r\n  ADD_EXPENSE_ERROR,\r\n  DELETE_EXPENSE_BEGIN,\r\n  DELETE_EXPENSE_SUCCESS,\r\n  DELETE_EXPENSE_ERROR,\r\n  UPDATE_EXPENSE_BEGIN,\r\n  UPDATE_EXPENSE_SUCCESS,\r\n  UPDATE_EXPENSE_ERROR,\r\n  RESET_SINGLE_EXPENSE,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isExpenseEditing: false,\r\n  alertExpense: { show: false, msg: \"\", type: \"\" },\r\n  editExpenseID: null,\r\n  expenses_loading: false,\r\n  expenses_error: false,\r\n  expenses: [],\r\n  single_expense_loading: false,\r\n  single_expense_error: false,\r\n  single_expense: {},\r\n  delete_expense_loading: false,\r\n  delete_expense_error: false,\r\n  update_expense_loading: false,\r\n  update_expense_error: false,\r\n  add_expense_loading: false,\r\n  add_expense_error: false,\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n};\r\n\r\nconst ExpensesContext = React.createContext();\r\n\r\nexport const ExpensesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const loadExpenses = async () => {\r\n    dispatch({ type: GET_EXPENSES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(expenses_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const expenses = await res.json();\r\n      dispatch({ type: GET_EXPENSES_SUCCESS, payload: expenses });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EXPENSES_ERROR });\r\n    }\r\n  };\r\n\r\nconst loadPendingExpenses = async (fi) => {\r\n  dispatch({ type: GET_EXPENSES_BEGIN });\r\n  try {\r\n    //const res = await fetch(leaves_url);\r\n    //const { data } = await axios.get(employees_url);\r\n    //const employees = data;\r\n    const { data } = await axios.get(`${expenses_url}?fi=${fi}`);\r\n    const expenses = data;\r\n\r\n    dispatch({ type: GET_EXPENSES_SUCCESS, payload: expenses });\r\n  } catch (error) {\r\n    dispatch({ type: GET_EXPENSES_ERROR });\r\n  }\r\n};\r\n\r\n  const setIsExpenseEditingOn = () => {\r\n    dispatch({ type: SET_ISEXPENSEEDITING_ON });\r\n  };\r\n\r\n  const setIsExpenseEditingOff = () => {\r\n    dispatch({ type: SET_ISEXPENSEEDITING_OFF });\r\n  };\r\n\r\n  const resetSingleExpense = () => {\r\n    dispatch({ type: RESET_SINGLE_EXPENSE });\r\n  };\r\n\r\n  const setEditExpenseID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITEXPENSEID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleExpense = async (id) => {\r\n    dispatch({ type: GET_SINGLE_EXPENSE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${expenses_url}?id=${id}`);\r\n      const singleexpense = data;\r\n      dispatch({ type: GET_SINGLE_EXPENSE_SUCCESS, payload: singleexpense });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_EXPENSE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addExpense = async (data) => {\r\n    const { id, name, date, purchased_date, remark, amount, status } = data;\r\n    //\r\n    dispatch({ type: ADD_EXPENSE_BEGIN });\r\n    try {\r\n      await fetch(expenses_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_EXPENSE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_EXPENSE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateExpense = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_EXPENSE_BEGIN });\r\n    try {\r\n      await fetch(expenses_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_EXPENSE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_EXPENSE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteExpense = async (id) => {\r\n    dispatch({ type: DELETE_EXPENSE_BEGIN });\r\n    try {\r\n      await fetch(expenses_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_EXPENSE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_EXPENSE_ERROR });\r\n    }\r\n  };\r\n  return (\r\n    <ExpensesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadExpenses,\r\n        loadPendingExpenses,\r\n        addExpense,\r\n        updateExpense,\r\n        deleteExpense,\r\n        getSingleExpense,\r\n        setEditExpenseID,\r\n        setIsExpenseEditingOn,\r\n        setIsExpenseEditingOff,\r\n        resetSingleExpense,\r\n      }}\r\n    >\r\n      {children}\r\n    </ExpensesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useExpensesContext = () => {\r\n  return useContext(ExpensesContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleExpense.js",["783","784","785"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleExpense = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/expenses\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n\r\n                  <ExpenseForm />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleExpense;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTable.js",["786","787","788","789","790","791","792"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\n\r\nconst columns = [\r\n  { title: \"Name\", field: \"name\", editable: \"never\" },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Description\",\r\n    field: \"description\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function ExpenseTable() {\r\n  const classes = useStyles();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    expenses,\r\n    editExpenseID,\r\n    updateExpense,\r\n    expenses_loading,\r\n    deleteExpense,\r\n    loadExpenses,\r\n    getSingleExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n    resetSingleExpense,\r\n  } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    setExpensesdata(expenses);\r\n    console.log(expensesdata)\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (expenses) {\r\n  //     setExpensesdata(expenses);\r\n  //     console.log(\"expenses\", expenses, expensesdata)\r\n  //   } else {\r\n  //     setIsLoad(!isLoad);\r\n  //   }\r\n  // }, [isLoad]);\r\n\r\n  const add_Expense = async (data) => {\r\n    // const { id } = data;\r\n    resetSingleExpense();\r\n    setEditExpenseID(\"\");\r\n    setIsExpenseEditingOff();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const approve_Expense = async (data) => {\r\n    console.log(\"approve\", data);\r\n    const { id, rec_id, ...fields } = data;\r\n    updateExpense({ id, ...fields });\r\n    // loadExpenses();\r\n  };\r\n\r\n  const update_Expense = async (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    setIsExpenseEditingOn();\r\n    getSingleExpense(id);\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Expense = (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    handleAlertOpen();\r\n\r\n    // deleteExpense(id);\r\n    // loadExpenses();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadExpenses();\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpense(id);\r\n    loadExpenses();\r\n  };\r\n\r\n  // if (expenses_loading) {\r\n  //   return (\r\n  //     <div>\r\n  //       <h2>Loading...Expenses</h2>\r\n  //     </div>\r\n  //   );\r\n  // }\r\nif (!expensesdata) {\r\n  return (\r\n    <div>\r\n      <h2>Loading...Expenses</h2>\r\n    </div>\r\n  );\r\n}\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expensesdata}\r\n          title=\"Expenses Claims Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...expensesdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setExpensesdata([...dataUpdate]);\r\n                  //approve_Expense(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Expense(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Expense(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Expense(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseForm handleDialogClose={handleDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\expenses_reducer.js",["793"],"import {\r\n  SET_EDITEXPENSEID,\r\n  SET_ISEXPENSEEDITING_ON,\r\n  SET_ISEXPENSEEDITING_OFF,\r\n  SET_SINGLEEXPENSE,\r\n  GET_EXPENSES_BEGIN,\r\n  GET_EXPENSES_SUCCESS,\r\n  GET_EXPENSES_ERROR,\r\n  GET_SINGLE_EXPENSE_BEGIN,\r\n  GET_SINGLE_EXPENSE_SUCCESS,\r\n  GET_SINGLE_EXPENSE_ERROR,\r\n  ADD_EXPENSE_BEGIN,\r\n  ADD_EXPENSE_SUCCESS,\r\n  ADD_EXPENSE_ERROR,\r\n  DELETE_EXPENSE_BEGIN,\r\n  DELETE_EXPENSE_SUCCESS,\r\n  DELETE_EXPENSE_ERROR,\r\n  UPDATE_EXPENSE_BEGIN,\r\n  UPDATE_EXPENSE_SUCCESS,\r\n  UPDATE_EXPENSE_ERROR,\r\n  RESET_SINGLE_EXPENSE,\r\n} from \"../actions\";\r\n\r\nconst expenses_reducer = (state, action) => {\r\n  // set leaves variables\r\n  if (action.type === SET_EDITEXPENSEID) {\r\n    return { ...state, editExpenseID: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISEXPENSEEDITING_ON) {\r\n    return { ...state, isExpenseEditing: true };\r\n  }\r\n  if (action.type === SET_ISEXPENSEEDITING_OFF) {\r\n    return { ...state, isExpenseEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_EXPENSE) {\r\n    return { ...state, single_expense: {} };\r\n  }\r\n  // get employees\r\n  if (action.type === GET_EXPENSES_BEGIN) {\r\n    return { ...state, expenses_loading: true };\r\n  }\r\n  if (action.type === GET_EXPENSES_SUCCESS) {\r\n    return { ...state, expenses_loading: false, expenses: action.payload };\r\n  }\r\n  if (action.type === GET_EXPENSES_ERROR) {\r\n    return { ...state, expenses_loading: false, expenses_error: true };\r\n  }\r\n\r\n  // add employee\r\n  if (action.type === ADD_EXPENSE_BEGIN) {\r\n    return { ...state, add_expense_loading: true };\r\n  }\r\n  if (action.type === ADD_EXPENSE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_expenses_loading: false,\r\n      expenses: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_EXPENSE_ERROR) {\r\n    return { ...state, expenses_loading: false, add_expense_error: true };\r\n  }\r\n  // update employee\r\n  if (action.type === UPDATE_EXPENSE_BEGIN) {\r\n    return { ...state, update_expense_loading: true };\r\n  }\r\n  if (action.type === UPDATE_EXPENSE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      expenses_loading: false,\r\n      single_expense: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_EXPENSE_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_expense_loading: false,\r\n      update_expense_error: true,\r\n    };\r\n  }\r\n\r\n  // delete employee\r\n  if (action.type === DELETE_EXPENSE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_expense_loading: true,\r\n      delete_expense_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_EXPENSE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_expense_loading: false,\r\n      delete_expense_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_EXPENSE_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_expense_loading: false,\r\n      delete_expense_error: true,\r\n    };\r\n  }\r\n\r\n  //single employee\r\n  if (action.type === GET_SINGLE_EXPENSE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_expense_loading: true,\r\n      single_expense_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_EXPENSE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_expense_loading: false,\r\n      single_expense: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_EXPENSE_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_expense_loading: false,\r\n      single_expense_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default expenses_reducer;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseForm.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleDailyAllowance.js",["794","795","796"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DailyAllowanceForm from \"./DaiylAllowanceForm\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleDailyAllowance = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/batchdailyallowances\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n\r\n                  <DailyAllowanceForm />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleDailyAllowance;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTable.js",["797","798","799","800","801","802","803"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  useSetRecoilState,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useRecoilValueLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  empidState,\r\n} from \"./data/atomdata\";\r\nimport { fetchDailyAllowancesSelector } from \"./data/selectordata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\r\n\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"Period\", field: \"period\" },\r\n  { title: \"Location\", field: \"location\" },\r\n  { title: \"Manager Name\", field: \"manager_name\" },\r\n  { title: \"No Of Days\", field: \"no_of_days\", type: \"numeric\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function DailyAllowancesTable() {\r\n  let history = useHistory()\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  const allows_empid = useRecoilValue(empidState);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  const setEmpID = useSetRecoilState(empidState);\r\n  const title = `Site Allowances (${allows_period})`;\r\n  const {\r\n    singlebatch_dailyallowance,\r\n    singlebatch_dailyallowance_loading,\r\n    deleteDailyAllowance,\r\n    setEditDailyAllowanceID,\r\n    setIsDailyAllowanceEditingOn,\r\n    setIsDailyAllowanceEditingOff,\r\n    resetSingleDailyAllowance,\r\n    dailyallowance_period,\r\n    getSingleBatchDailyAllowance,\r\n  } = useDailyAllowancesContext();\r\n\r\n  useEffect(() => {\r\n    getSingleBatchDailyAllowance(allows_period)\r\n  },[])\r\n\r\n  const update_DailyAllowance = async (data) => {\r\n    const { empid, period } = data;\r\n    console.log(\"id\",empid, period)\r\n    setEmpID(empid);\r\n        setEditDailyAllowanceID(empid);\r\n    setIsDailyAllowanceEditingOn();\r\n    //getSingleBatchDailyAllowsDetl(empid, period);\r\n    // getSingleBatchDailyAllowsDetl(empid, period);\r\n    //handleDialogOpen();\r\n\r\n    history.push(\"/singledailyallowsdetlstable\");\r\n  };\r\n\r\n  const add_DailyAllowance = async (data) => {\r\n    // const { id } = data;\r\n    resetSingleDailyAllowance();\r\n    setEditDailyAllowanceID(\"\");\r\n    setIsDailyAllowanceEditingOff();\r\n    handleDialogOpen();\r\n    //history.push(\"/singledailyallowance\");\r\n  };\r\n\r\n  const delete_DailyAllowance = (data) => {\r\n    const { id } = data;\r\n    setEditDailyAllowanceID(id);\r\n    deleteDailyAllowance(id);\r\n    getSingleBatchDailyAllowance(allows_period);\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    //console.log(\"allowsdetls\", allowsdata, allowsdataRef, singlebatch_dailyallowsdetl);\r\n    //setAllowsdata({ singlebatch_dailyallowsdetl });\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    //getSingleBatchDailyAllowance(dailyallowance_period);\r\n  };\r\n\r\n  if (singlebatch_dailyallowance_loading) {\r\n    return <div>\r\n      <h2>Loading... daily allowances</h2>\r\n    </div>\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatch_dailyallowance}\r\n          title={title}\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_DailyAllowance(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_DailyAllowance(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_DailyAllowance(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <Link to=\"/dailyallowances\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <div className={classes.dialog}>\r\n          <CustomDialog\r\n            isOpen={isDialogOpen}\r\n            handleClose={handleDialogClose}\r\n            title=\"\"\r\n            showButton={true}\r\n            isFullscreen={true}\r\n            isFullwidth={true}\r\n          >\r\n            <DailyAllowsDetlsTable\r\n              setAllowsdata={setAllowsdata}\r\n              allowsdata={allowsdata}\r\n              handleDialogClose={handleDialogClose}\r\n            />\r\n          </CustomDialog>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\context\\dailyallowances_context.js",["804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/dailyallowances_reducer\";\r\nimport { dailyallowances_url, dailyallowsdetls_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITDAILYALLOWANCEID,\r\n  SET_ISDAILYALLOWANCEEDITING_ON,\r\n  SET_ISDAILYALLOWANCEEDITING_OFF,\r\n  SET_DAILYALLOWANCE_PERIOD,\r\n  SET_SINGLEDAILYALLOWANCE,\r\n  LOAD_DAILYALLOWANCES,\r\n  GET_DAILYALLOWANCES_BEGIN,\r\n  GET_DAILYALLOWANCES_SUCCESS,\r\n  GET_DAILYALLOWANCES_ERROR,\r\n  GET_SINGLE_DAILYALLOWANCE_BEGIN,\r\n  GET_SINGLE_DAILYALLOWANCE_SUCCESS,\r\n  GET_SINGLE_DAILYALLOWANCE_ERROR,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_BEGIN,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_SUCCESS,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_ERROR,\r\n  ADD_DAILYALLOWANCE_BEGIN,\r\n  ADD_DAILYALLOWANCE_SUCCESS,\r\n  ADD_DAILYALLOWANCE_ERROR,\r\n  DELETE_DAILYALLOWANCE_BEGIN,\r\n  DELETE_DAILYALLOWANCE_SUCCESS,\r\n  DELETE_DAILYALLOWANCE_ERROR,\r\n  UPDATE_DAILYALLOWANCE_BEGIN,\r\n  UPDATE_DAILYALLOWANCE_SUCCESS,\r\n  UPDATE_DAILYALLOWANCE_ERROR,\r\n  RESET_SINGLE_DAILYALLOWANCE,\r\n  LOAD_DAILYALLOWSDETLS,\r\n  SET_DAILYALLOWSDETL_PERIOD,\r\n  GET_DAILYALLOWSDETLS_BEGIN,\r\n  GET_DAILYALLOWSDETLS_SUCCESS,\r\n  GET_DAILYALLOWSDETLS_ERROR,\r\n  GET_SINGLE_DAILYALLOWSDETL_BEGIN,\r\n  GET_SINGLE_DAILYALLOWSDETL_SUCCESS,\r\n  GET_SINGLE_DAILYALLOWSDETL_ERROR,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_BEGIN,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_SUCCESS,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_ERROR,\r\n  ADD_DAILYALLOWSDETL_BEGIN,\r\n  ADD_DAILYALLOWSDETL_SUCCESS,\r\n  ADD_DAILYALLOWSDETL_ERROR,\r\n  DELETE_DAILYALLOWSDETL_BEGIN,\r\n  DELETE_DAILYALLOWSDETL_SUCCESS,\r\n  DELETE_DAILYALLOWSDETL_ERROR,\r\n  UPDATE_DAILYALLOWSDETL_BEGIN,\r\n  UPDATE_DAILYALLOWSDETL_SUCCESS,\r\n  UPDATE_DAILYALLOWSDETL_ERROR,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isDailyAllowanceEditing: false,\r\n  alertDailyAllowance: { show: false, msg: \"\", type: \"\" },\r\n  editDailyAllowanceID: null,\r\n  dailyallowances_loading: false,\r\n  dailyallowances_error: false,\r\n  dailyallowances: [],\r\n  single_dailyallowance_loading: false,\r\n  single_dailyallowance_error: false,\r\n  single_dailyallowance: {},\r\n  singlebatch_dailyallowance_loading: false,\r\n  singlebatch_dailyallowance_error: false,\r\n  singlebatch_dailyallowances: {},\r\n  delete_dailyallowance_loading: false,\r\n  delete_dailyallowance_error: false,\r\n  update_dailyallowance_loading: false,\r\n  update_dailyallowance_error: false,\r\n  add_dailyallowance_loading: false,\r\n  add_dailyallowance_error: false,\r\n  dailyallowance_period: \"\",\r\n  isDailyAllowsDetlEditing: false,\r\n  alertDailyAllowsDetl: { show: false, msg: \"\", type: \"\" },\r\n  editDailyAllowsDetlID: null,\r\n  dailyallowsdetls_loading: false,\r\n  dailyallowsdetls_error: false,\r\n  dailyallowsdetls: [],\r\n  single_dailyallowsdetl_loading: false,\r\n  single_dailyallowsdetl_error: false,\r\n  single_dailyallowsdetl: {},\r\n  singlebatch_dailyallowsdetl: {},\r\n  singlebatch_dailyallowsdetl_loading: false,\r\n  singlebatch_dailyallowsdetl_error: false,\r\n  delete_dailyallowsdetl_loading: false,\r\n  delete_dailyallowsdetl_error: false,\r\n  update_dailyallowsdetl_loading: false,\r\n  update_dailyallowsdetl_error: false,\r\n  add_dailyallowsdetl_loading: false,\r\n  add_dailyallowsdetl_error: false,\r\n  dailyallowsdetl_period: \"\",\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n};\r\n\r\nconst DailyAllowancesContext = React.createContext();\r\n\r\nexport const DailyAllowancesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //daily allowances\r\n  const loadDailyAllowances = async () => {\r\n    dispatch({ type: GET_DAILYALLOWANCES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(dailyallowances_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const dailyallowances = await res.json();\r\n      dispatch({ type: GET_DAILYALLOWANCES_SUCCESS, payload: dailyallowances });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DAILYALLOWANCES_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadPendingDailyAllowances = async (fi) => {\r\n    dispatch({ type: GET_DAILYALLOWANCES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const { data } = await axios.get(`${dailyallowances_url}?fi=${fi}`);\r\n      const dailyallowances = data;\r\n      dispatch({ type: GET_DAILYALLOWANCES_SUCCESS, payload: dailyallowances });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DAILYALLOWANCES_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsDailyAllowanceEditingOn = () => {\r\n    dispatch({ type: SET_ISDAILYALLOWANCEEDITING_ON });\r\n  };\r\n\r\n  const setIsDailyAllowanceEditingOff = () => {\r\n    dispatch({ type: SET_ISDAILYALLOWANCEEDITING_OFF });\r\n  };\r\n\r\n  const resetSingleDailyAllowance = () => {\r\n    dispatch({ type: RESET_SINGLE_DAILYALLOWANCE });\r\n  };\r\n\r\n  const setDailyAllowancePeriod = async (name) => {\r\n    try {\r\n      dispatch({ type: SET_DAILYALLOWANCE_PERIOD, payload: name });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const setEditDailyAllowanceID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITDAILYALLOWANCEID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleDailyAllowance = async (id) => {\r\n    dispatch({ type: GET_SINGLE_DAILYALLOWANCE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${dailyallowances_url}?id=${id}`);\r\n      const singledailyallowance = data;\r\n      dispatch({\r\n        type: GET_SINGLE_DAILYALLOWANCE_SUCCESS,\r\n        payload: singledailyallowance,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_DAILYALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleBatchDailyAllowance = async (period) => {\r\n    dispatch({ type: GET_SINGLEBATCH_DAILYALLOWANCE_BEGIN });\r\n    try {\r\n      const res = await fetch(`${dailyallowances_url}?fv=${period}`);\r\n      const singlebatchdailyallowance = await res.json();\r\n\r\n      dispatch({\r\n        type: GET_SINGLEBATCH_DAILYALLOWANCE_SUCCESS,\r\n        payload: singlebatchdailyallowance,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLEBATCH_DAILYALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDailyAllowance = async (data) => {\r\n    const {\r\n      id,\r\n      name,\r\n      period,\r\n      location,\r\n      manager_name,\r\n      no_of_days,\r\n      amount,\r\n      status,\r\n    } = data;\r\n    //\r\n    dispatch({ type: ADD_DAILYALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(dailyallowances_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DAILYALLOWANCE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DAILYALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDailyAllowance = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DAILYALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(dailyallowances_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DAILYALLOWANCE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DAILYALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDailyAllowance = async (id) => {\r\n    dispatch({ type: DELETE_DAILYALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(dailyallowances_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DAILYALLOWANCE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DAILYALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadDailyAllowsDetls = async () => {\r\n    dispatch({ type: GET_DAILYALLOWSDETLS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(dailyallowsdetls_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const dailyallowsdetls = await res.json();\r\n      dispatch({\r\n        type: GET_DAILYALLOWSDETLS_SUCCESS,\r\n        payload: dailyallowsdetls,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DAILYALLOWSDETLS_ERROR });\r\n    }\r\n  };\r\n\r\n  const setDailyAllowsDetlPeriod = async (name) => {\r\n    try {\r\n      dispatch({ type: SET_DAILYALLOWSDETL_PERIOD, payload: name });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleDailyAllowsDetl = async (id) => {\r\n    dispatch({ type: GET_SINGLE_DAILYALLOWSDETL_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${dailyallowsdetls_url}?id=${id}`);\r\n      const singledailyallowsdetl = data;\r\n      dispatch({\r\n        type: GET_SINGLE_DAILYALLOWSDETL_SUCCESS,\r\n        payload: singledailyallowsdetl,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_DAILYALLOWSDETL_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleBatchDailyAllowsDetl = async (empid, period) => {\r\n    dispatch({ type: GET_SINGLEBATCH_DAILYALLOWSDETL_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(\r\n        `${dailyallowsdetls_url}?fv=${empid}&period=${period}`\r\n      );\r\n      const singlebatchdailyallowsdetl = data;\r\n      dispatch({\r\n        type: GET_SINGLEBATCH_DAILYALLOWSDETL_SUCCESS,\r\n        payload: singlebatchdailyallowsdetl,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLEBATCH_DAILYALLOWSDETL_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDailyAllowsDetl = async (data) => {\r\n    const {\r\n      id,\r\n      name,\r\n      period,\r\n      location,\r\n      manager_name,\r\n      no_of_days,\r\n      amount,\r\n      status,\r\n    } = data;\r\n    //\r\n    dispatch({ type: ADD_DAILYALLOWSDETL_BEGIN });\r\n    try {\r\n      await fetch(dailyallowsdetls_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DAILYALLOWSDETL_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DAILYALLOWSDETL_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDailyAllowsDetl = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DAILYALLOWSDETL_BEGIN });\r\n    try {\r\n      await fetch(dailyallowsdetls_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DAILYALLOWSDETL_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DAILYALLOWSDETL_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDailyAllowsDetl = async (id) => {\r\n    dispatch({ type: DELETE_DAILYALLOWSDETL_BEGIN });\r\n    try {\r\n      await fetch(dailyallowsdetls_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DAILYALLOWSDETL_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DAILYALLOWSDETL_ERROR });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DailyAllowancesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadDailyAllowances,\r\n        loadPendingDailyAllowances,\r\n        addDailyAllowance,\r\n        updateDailyAllowance,\r\n        deleteDailyAllowance,\r\n        getSingleDailyAllowance,\r\n        getSingleBatchDailyAllowance,\r\n        setEditDailyAllowanceID,\r\n        setIsDailyAllowanceEditingOn,\r\n        setIsDailyAllowanceEditingOff,\r\n        setDailyAllowancePeriod,\r\n        resetSingleDailyAllowance,\r\n\r\n        loadDailyAllowsDetls,\r\n        addDailyAllowsDetl,\r\n        updateDailyAllowsDetl,\r\n        deleteDailyAllowsDetl,\r\n        getSingleDailyAllowsDetl,\r\n        getSingleBatchDailyAllowsDetl,\r\n        setDailyAllowsDetlPeriod,\r\n        setDailyAllowsDetlPeriod,\r\n      }}\r\n    >\r\n      {children}\r\n    </DailyAllowancesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useDailyAllowancesContext = () => {\r\n  return useContext(DailyAllowancesContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\dailyallowances_reducer.js",["825","826"],"import {\r\n  SET_EDITDAILYALLOWANCEID,\r\n  SET_ISDAILYALLOWANCEEDITING_ON,\r\n  SET_ISDAILYALLOWANCEEDITING_OFF,\r\n  SET_DAILYALLOWANCE_PERIOD,\r\n  SET_SINGLEDAILYALLOWANCE,\r\n  GET_DAILYALLOWANCES_BEGIN,\r\n  GET_DAILYALLOWANCES_SUCCESS,\r\n  GET_DAILYALLOWANCES_ERROR,\r\n  GET_SINGLE_DAILYALLOWANCE_BEGIN,\r\n  GET_SINGLE_DAILYALLOWANCE_SUCCESS,\r\n  GET_SINGLE_DAILYALLOWANCE_ERROR,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_BEGIN,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_SUCCESS,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_ERROR,\r\n  ADD_DAILYALLOWANCE_BEGIN,\r\n  ADD_DAILYALLOWANCE_SUCCESS,\r\n  ADD_DAILYALLOWANCE_ERROR,\r\n  DELETE_DAILYALLOWANCE_BEGIN,\r\n  DELETE_DAILYALLOWANCE_SUCCESS,\r\n  DELETE_DAILYALLOWANCE_ERROR,\r\n  UPDATE_DAILYALLOWANCE_BEGIN,\r\n  UPDATE_DAILYALLOWANCE_SUCCESS,\r\n  UPDATE_DAILYALLOWANCE_ERROR,\r\n  RESET_SINGLE_DAILYALLOWANCE,\r\n  // daily allowances details\r\n  LOAD_DAILYALLOWSDETLS,\r\n  SET_DAILYALLOWSDETL_PERIOD,\r\n  GET_DAILYALLOWSDETLS_BEGIN,\r\n  GET_DAILYALLOWSDETLS_SUCCESS,\r\n  GET_DAILYALLOWSDETLS_ERROR,\r\n  GET_SINGLE_DAILYALLOWSDETL_BEGIN,\r\n  GET_SINGLE_DAILYALLOWSDETL_SUCCESS,\r\n  GET_SINGLE_DAILYALLOWSDETL_ERROR,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_BEGIN,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_SUCCESS,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_ERROR,\r\n  ADD_DAILYALLOWSDETL_BEGIN,\r\n  ADD_DAILYALLOWSDETL_SUCCESS,\r\n  ADD_DAILYALLOWSDETL_ERROR,\r\n  DELETE_DAILYALLOWSDETL_BEGIN,\r\n  DELETE_DAILYALLOWSDETL_SUCCESS,\r\n  DELETE_DAILYALLOWSDETL_ERROR,\r\n  UPDATE_DAILYALLOWSDETL_BEGIN,\r\n  UPDATE_DAILYALLOWSDETL_SUCCESS,\r\n  UPDATE_DAILYALLOWSDETL_ERROR,\r\n} from \"../actions\";\r\n\r\nconst dailyallowances_reducer = (state, action) => {\r\n  // set daily allowances variables\r\n  if (action.type === SET_DAILYALLOWANCE_PERIOD) {\r\n    return { ...state, dailyallowance_period: action.payload };\r\n  }\r\n  if (action.type === SET_EDITDAILYALLOWANCEID) {\r\n    return { ...state, editDailyAllowanceID: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISDAILYALLOWANCEEDITING_ON) {\r\n    return { ...state, isDailyAllowanceEditing: true };\r\n  }\r\n  if (action.type === SET_ISDAILYALLOWANCEEDITING_OFF) {\r\n    return { ...state, isDailyAllowanceEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_DAILYALLOWANCE) {\r\n    return { ...state, single_dailyallowance: {} };\r\n  }\r\n  // get daily allowances\r\n  if (action.type === GET_DAILYALLOWANCES_BEGIN) {\r\n    return { ...state, dailyallowances_loading: true };\r\n  }\r\n  if (action.type === GET_DAILYALLOWANCES_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      dailyallowances_loading: false,\r\n      dailyallowances: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_DAILYALLOWANCES_ERROR) {\r\n    return {\r\n      ...state,\r\n      dailyallowances_loading: false,\r\n      dailyallowances_error: true,\r\n    };\r\n  }\r\n\r\n  // add daily allowance\r\n  if (action.type === ADD_DAILYALLOWANCE_BEGIN) {\r\n    return { ...state, add_dailyallowance_loading: true };\r\n  }\r\n  if (action.type === ADD_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_dailyallowance_loading: false,\r\n      dailyallowances: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      add_dailyallowance_loading: false,\r\n      add_dailyallowance_error: true,\r\n    };\r\n  }\r\n  // update daily allowances\r\n  if (action.type === UPDATE_DAILYALLOWANCE_BEGIN) {\r\n    return { ...state, update_dailyallowance_loading: true };\r\n  }\r\n  if (action.type === UPDATE_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      update_dailyallowances_loading: false,\r\n      single_dailyallowance: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_dailyallowance_loading: false,\r\n      update_dailyallowance_error: true,\r\n    };\r\n  }\r\n\r\n  // delete daily allowances\r\n  if (action.type === DELETE_DAILYALLOWANCE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowance_loading: true,\r\n      delete_dailyallowance_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowance_loading: false,\r\n      delete_dailyallowance_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowance_loading: false,\r\n      delete_dailyallowance_error: true,\r\n    };\r\n  }\r\n\r\n  //single daily allowances\r\n  if (action.type === GET_SINGLE_DAILYALLOWANCE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowance_loading: true,\r\n      single_dailyallowance_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowance_loading: false,\r\n      single_dailyallowance: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowance_loading: false,\r\n      single_dailyallowance_error: true,\r\n    };\r\n  }\r\n\r\n  //single batch daily allowances\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWANCE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowance_loading: true,\r\n      singlebatch_dailyallowance_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowance_loading: false,\r\n      singlebatch_dailyallowance: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowance_loading: false,\r\n      singlebatch_dailyallowance_error: true,\r\n    };\r\n  }\r\n\r\n  // daily allowances details\r\n  // set daily allowances details variables\r\n  if (action.type === SET_DAILYALLOWSDETL_PERIOD) {\r\n    return { ...state, dailyallowsdetl_period: action.payload };\r\n  }\r\n  // get daily allowances details\r\n  if (action.type === GET_DAILYALLOWSDETLS_BEGIN) {\r\n    return { ...state, dailyallowsdetls_loading: true };\r\n  }\r\n  if (action.type === GET_DAILYALLOWSDETLS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      dailyallowsdetls_loading: false,\r\n      dailyallowsdetls: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_DAILYALLOWSDETLS_ERROR) {\r\n    return {\r\n      ...state,\r\n      dailyallowsdetls_loading: false,\r\n      dailyallowsdetls_error: true,\r\n    };\r\n  }\r\n\r\n  // add daily allowance details\r\n  if (action.type === ADD_DAILYALLOWSDETL_BEGIN) {\r\n    return { ...state, add_dailyallowsdetl_loading: true };\r\n  }\r\n  if (action.type === ADD_DAILYALLOWSDETL_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_dailyallowsdetl_loading: false,\r\n      dailyallowsdetls: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      add_dailyallowsdetl_loading: false,\r\n      add_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n  // update daily allowances\r\n  if (action.type === UPDATE_DAILYALLOWSDETL_BEGIN) {\r\n    return { ...state, update_dailyallowsdetl_loading: true };\r\n  }\r\n  if (action.type === UPDATE_DAILYALLOWSDETL_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      update_dailyallowsdetl_loading: false,\r\n      single_dailyallowsdetl: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_dailyallowsdetl_loading: false,\r\n      update_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n\r\n  // delete daily allowances details\r\n  if (action.type === DELETE_DAILYALLOWSDETL_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowsdetl_loading: true,\r\n      delete_dailyallowsdetl_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_DAILYALLOWSDETL_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowsdetl_loading: false,\r\n      delete_dailyallowsdetl_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowsdetl_loading: false,\r\n      delete_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n\r\n  //single daily allowances details\r\n  if (action.type === GET_SINGLE_DAILYALLOWSDETL_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowsdetl_loading: true,\r\n      single_dailyallowsdetl_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_DAILYALLOWSDETL_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowsdetl_loading: false,\r\n      single_dailyallowsdetl: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowsdetl_loading: false,\r\n      single_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n\r\n  //single daily batch allowances details\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWSDETL_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowsdetl_loading: true,\r\n      singlebatch_dailyallowsdetl_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWSDETL_SUCCESS) {\r\n    // console.log(\"reducer\", action.payload);\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowsdetl_loading: false,\r\n      singlebatch_dailyallowsdetl: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowsdetl_loading: false,\r\n      singlebatch_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default dailyallowances_reducer;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DaiylAllowanceForm.js",["827"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  period: \"\",\r\n  location: \"\",\r\n  manager_name: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  amount: 0,\r\n};\r\n\r\nconst DailyAllowanceForm = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const {\r\n    isDailyAllowanceEditing,\r\n    single_dailyallowance,\r\n    updateDailyAllowance,\r\n    addDailyAllowance,\r\n    editDailyAllowanceID,\r\n    loadDailyAllowances,\r\n    single_dailyallowance_loading,\r\n    dailyallowance_period,\r\n  } = useDailyAllowancesContext();\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const { name, period, location, manager_name, status, no_of_days, amount } =\r\n    single_dailyallowance || initial_values;\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  useEffect(() => {\r\n    loadEmployees();\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    if (isDailyAllowanceEditing) {\r\n      updateDailyAllowance({ id: editDailyAllowanceID, ...data });\r\n    } else {\r\n      addDailyAllowance({ ...data });\r\n    }\r\n    loadDailyAllowances();\r\n    history.push(\"/batchdailyallowances\");\r\n  };\r\n\r\n  if (single_dailyallowance_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          DAILY ALLOWANCES CLAIM FORM\r\n        </Typography>\r\n        <Typography component=\"p\">\r\n          Daily Allowances Claim Application\r\n        </Typography>\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"name\"\r\n              control={control}\r\n              defaultValue={name}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    id=\"margin-normal\"\r\n                    name=\"name\"\r\n                    defaultValue={name}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    {employees.map((e) => {\r\n                      return (\r\n                        <MenuItem key={e.name} value={e.name}>\r\n                          {e.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              rules={{ required: \"Name required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"period\"\r\n              control={control}\r\n              defaultValue={\r\n                isDailyAllowanceEditing ? period : dailyallowance_period\r\n              }\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Period\"\r\n                    id=\"margin-normal\"\r\n                    name=\"period\"\r\n                    defaultValue={\r\n                      isDailyAllowanceEditing ? period : dailyallowance_period\r\n                    }\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"Period is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"location\"\r\n              control={control}\r\n              defaultValue={location}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Location\"\r\n                    id=\"margin-normal\"\r\n                    name=\"location\"\r\n                    defaultValue={location}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"Purchased Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"manager_name\"\r\n              control={control}\r\n              defaultValue={manager_name}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Manager Name\"\r\n                    id=\"margin-normal\"\r\n                    name=\"manager_name\"\r\n                    defaultValue={manager_name}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"no_of_days\"\r\n              control={control}\r\n              defaultValue={no_of_days}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"No Of Days\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"no_of_days\"\r\n                    defaultValue={no_of_days}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"amount\"\r\n              control={control}\r\n              defaultValue={amount}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Amount\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"amount\"\r\n                    defaultValue={amount}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"status\"\r\n              control={control}\r\n              defaultValue=\"Pending\"\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Status\"\r\n                    id=\"margin-normal\"\r\n                    name=\"status\"\r\n                    defaultValue={status}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Pending\">Pending</MenuItem>\r\n                    <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n                    <MenuItem value=\"Approved\">Approved</MenuItem>\r\n                    <MenuItem value=\"Rejected\">Rejected</MenuItem>\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n            >\r\n              Submit <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default DailyAllowanceForm;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\BatchDailyAllowances.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\SinglePayslip.js",["828","829","830"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PayslipForm from \"./PayslipForm\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\nconst SinglePayslip = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/batchpayslips\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n\r\n                  <PayslipForm />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SinglePayslip;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTable.js",["831","832","833","834","835","836","837","838","839","840","841","842"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"Period\", field: \"period\" },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  { title: \"Basic Pay\", field: \"basic_pay\", type: \"currency\" },\r\n  { title: \"TAP Amount\", field: \"tap_amount\", type: \"currency\" },\r\n  { title: \"SCP Amount\", field: \"scp_amount\", type: \"currency\" },\r\n  { title: \"Earnings\", field: \"total_earnings\", type: \"currency\" },\r\n  { title: \"Deductions\", field: \"total_deductions\", type: \"currency\" },\r\n  { title: \"Nett Pay\", field: \"nett_pay\", type: \"currency\" },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function PayslipTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const {\r\n    payslips,\r\n    addPayslip,\r\n    payslips_loading,\r\n    updatePayslip,\r\n    deletePayslip,\r\n    loadPayslips,\r\n    getSinglePayslip,\r\n    getSingleBatchPayslip,\r\n    setEditPayslipID,\r\n    setIsPayslipEditingOn,\r\n    setIsPayslipEditingOff,\r\n    resetSinglePayslip,\r\n    payslip_period,\r\n    payslip_endmonthdate,\r\n    singlebatchpayslip,\r\n    singlebatch_payslip_loading,\r\n    singlebatch_payslip_error,\r\n  } = usePayslipsContext();\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslip(payslip_period);\r\n  }, []);\r\n\r\n  const update_Payslip = async (data) => {\r\n    const { id } = data;\r\n    setPayPeriodEmpId(id); //save to recoil\r\n    setEditPayslipID(id);\r\n    setIsPayslipEditingOn();\r\n    getSinglePayslip(id);\r\n    history.push(\"/singlepayslip\");\r\n  };\r\n\r\n  const add_Payslip = async (data) => {\r\n    const { id } = data;\r\n    resetSinglePayslip();\r\n    setEditPayslipID(\"\");\r\n    setIsPayslipEditingOff();\r\n    history.push(\"/singlepayslip\");\r\n  };\r\n\r\n  const delete_Payslip = (data) => {\r\n    const { id } = data;\r\n    setEditPayslipID(id);\r\n    deletePayslip(id);\r\n    loadPayslips();\r\n  };\r\n\r\n  const build_Payslip = () => {\r\n    const current_period = payslip_period;\r\n    const current_endmonthdate = Date.parse(payslip_endmonthdate);\r\n\r\n    // loadEmployees();\r\n    console.log(current_period);\r\n    getSingleBatchPayslip(payslip_period);\r\n    const paydata = singlebatchpayslip.map((e) => e.name) || [];\r\n  \r\n    {\r\n      employees.map((emp) => {\r\n        const {\r\n          id,\r\n          name,\r\n          bank_name,\r\n          bank_acno,\r\n          basic_salary,\r\n          nett_pay,\r\n          tap_acno,\r\n          tap_amount,\r\n          scp_acno,\r\n          scp_amount\r\n        } = emp;\r\n        const data = {\r\n          name: name,\r\n          period: current_period,\r\n          date: current_endmonthdate,\r\n          basic_pay: basic_salary,\r\n          nett_pay: nett_pay,\r\n          bank_name: bank_name,\r\n          bank_acno: bank_acno,\r\n          tap_acno: tap_acno,\r\n          tap_amount: tap_amount,\r\n          scp_acno: scp_acno,\r\n          scp_amount: scp_amount,\r\n          empid: id,\r\n          status: \"Pending\",\r\n        };\r\n        if (paydata) {\r\n          const res = paydata.includes(emp.name);\r\n          if (!res) {\r\n            console.log(\"add\", data);\r\n            addPayslip({ ...data });\r\n          } else {\r\n            addPayslip({ ...data });\r\n          }\r\n        }\r\n      });\r\n    }\r\n   getSingleBatchPayslip(payslip_period);\r\n  };\r\n\r\n  if (singlebatch_payslip_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.....Payslips</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatchpayslip}\r\n          title=\"Payslips\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Payslip(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Payslip(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Payslip(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"build\",\r\n              tooltip: \"Build Records\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                build_Payslip();\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ paddingLeft: 22 }}>\r\n                  <h3>{`Batch: ${payslip_period}      End Month: ${payslip_endmonthdate}`}</h3>\r\n                </div>\r\n                {/* <div style={{ paddingLeft: 22 }}>\r\n                  <h3>{`End Month: ${payslip_endmonthdate}`}</h3>\r\n                </div> */}\r\n                <Link to=\"/payslip\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesPeriods.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\BatchPayslips.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipsPeriods.js",["843","844","845","846","847"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { payPeriodState, payPeriodEndMonthState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { periods } from \"../utils/constants\";\r\nimport BatchPayslips from \"./BatchPayslips\";\r\n\r\nconst PayslipsPeriods = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriod = useSetRecoilState(payPeriodState);\r\n  const setPayPeriodEndMonth = useSetRecoilState(payPeriodEndMonthState);\r\n  const { setPayslipPeriod, setPayslipEndMonthDate } = usePayslipsContext();\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const { loadAllowances, allowances, loadDeductions, deductions } =\r\n    useTablesContext();\r\n\r\n  const handlePeriod = (name, monthenddate) => {\r\n    setPayPeriod(name);\r\n     setPayPeriodEndMonth(monthenddate);\r\n    setPayslipPeriod(name);\r\n    setPayslipEndMonthDate(monthenddate);\r\n    history.push(\"/batchpayslips\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllowances();\r\n    loadDeductions();\r\n    loadEmployees()\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          <h2>Payroll Period</h2>\r\n        </Typography>\r\n      </Toolbar>\r\n      <Grid container spacing={3}>\r\n        {periods.map((e) => {\r\n          const { name, monthenddate } = e;\r\n          return (\r\n            <Grid item xs={3} inline>\r\n              <Paper className={classes.paper}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  onClick={() => handlePeriod(name, monthenddate)}\r\n                >\r\n                  {name}\r\n                </Button>\r\n              </Paper>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\nexport default PayslipsPeriods;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\context\\payslips_context.js",["848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/payslips_reducer\";\r\nimport { payslips_url } from \"../utils/constants\";\r\nimport { payslipearnings_url } from \"../utils/constants\";\r\nimport { payslipdeductions_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITPAYSLIPID,\r\n  SET_ISPAYSLIPEDITING_ON,\r\n  SET_ISPAYSLIPEDITING_OFF,\r\n  SET_PAYSLIP_PERIOD,\r\n  SET_PAYSLIP_ENDMONTHDATE,\r\n  SET_SINGLEPAYSLIP,\r\n  SET_PAYSLIPEARNING_AMOUNT,\r\n  SET_PAYSLIPDEDUCTION_AMOUNT,\r\n  GET_PAYSLIPS_BEGIN,\r\n  GET_PAYSLIPS_SUCCESS,\r\n  GET_PAYSLIPS_ERROR,\r\n  GET_SINGLE_PAYSLIP_BEGIN,\r\n  GET_SINGLE_PAYSLIP_SUCCESS,\r\n  GET_SINGLE_PAYSLIP_ERROR,\r\n  GET_SINGLEBATCH_PAYSLIP_BEGIN,\r\n  GET_SINGLEBATCH_PAYSLIP_SUCCESS,\r\n  GET_SINGLEBATCH_PAYSLIP_ERROR,\r\n  ADD_PAYSLIP_BEGIN,\r\n  ADD_PAYSLIP_SUCCESS,\r\n  ADD_PAYSLIP_ERROR,\r\n  DELETE_PAYSLIP_BEGIN,\r\n  DELETE_PAYSLIP_SUCCESS,\r\n  DELETE_PAYSLIP_ERROR,\r\n  UPDATE_PAYSLIP_BEGIN,\r\n  UPDATE_PAYSLIP_SUCCESS,\r\n  UPDATE_PAYSLIP_ERROR,\r\n  RESET_SINGLE_PAYSLIP,\r\n  GET_PAYSLIPEARNINGS_BEGIN,\r\n  GET_PAYSLIPEARNINGS_SUCCESS,\r\n  GET_PAYSLIPEARNINGS_ERROR,\r\n  GET_SINGLE_PAYSLIPEARNING_BEGIN,\r\n  GET_SINGLE_PAYSLIPEARNING_SUCCESS,\r\n  GET_SINGLE_PAYSLIPEARNING_ERROR,\r\n  ADD_PAYSLIPEARNING_BEGIN,\r\n  ADD_PAYSLIPEARNING_SUCCESS,\r\n  ADD_PAYSLIPEARNING_ERROR,\r\n  DELETE_PAYSLIPEARNING_BEGIN,\r\n  DELETE_PAYSLIPEARNING_SUCCESS,\r\n  DELETE_PAYSLIPEARNING_ERROR,\r\n  UPDATE_PAYSLIPEARNING_BEGIN,\r\n  UPDATE_PAYSLIPEARNING_SUCCESS,\r\n  UPDATE_PAYSLIPEARNING_ERROR,\r\n  GET_PAYSLIPDEDUCTIONS_BEGIN,\r\n  GET_PAYSLIPDEDUCTIONS_SUCCESS,\r\n  GET_PAYSLIPDEDUCTIONS_ERROR,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_BEGIN,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_SUCCESS,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_ERROR,\r\n  ADD_PAYSLIPDEDUCTION_BEGIN,\r\n  ADD_PAYSLIPDEDUCTION_SUCCESS,\r\n  ADD_PAYSLIPDEDUCTION_ERROR,\r\n  DELETE_PAYSLIPDEDUCTION_BEGIN,\r\n  DELETE_PAYSLIPDEDUCTION_SUCCESS,\r\n  DELETE_PAYSLIPDEDUCTION_ERROR,\r\n  UPDATE_PAYSLIPDEDUCTION_BEGIN,\r\n  UPDATE_PAYSLIPDEDUCTION_SUCCESS,\r\n  UPDATE_PAYSLIPDEDUCTION_ERROR,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isPayslipEditing: false,\r\n  alertPayslip: { show: false, msg: \"\", type: \"\" },\r\n  editPayslipID: null,\r\n  payslips_loading: false,\r\n  payslips_error: false,\r\n  payslip_period: \"\",\r\n  payslip_endmonthdate: \"\",\r\n  payslip_earning_amount: 0,\r\n  payslip_deduction_amount: 0,\r\n  payslips: [],\r\n  single_payslip_loading: false,\r\n  single_payslip_error: false,\r\n  single_payslip: {},\r\n  singlebatch_payslip_loading: false,\r\n  singlebatch_payslip_error: false,\r\n  singlebatch_payslip: {},\r\n  delete_payslip_loading: false,\r\n  delete_payslip_error: false,\r\n  update_payslip_loading: false,\r\n  update_payslip_error: false,\r\n  add_payslip_loading: false,\r\n  add_payslip_error: false,\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n  // payslip earnings\r\n  isPayslipEarningEditing: false,\r\n  alertPayslipEarning: { show: false, msg: \"\", type: \"\" },\r\n  editPayslipEarningID: null,\r\n  payslipearnings_loading: false,\r\n  payslipearnings_error: false,\r\n  payslipearnings: [],\r\n\r\n  single_payslipearning_loading: false,\r\n  single_payslipearning_error: false,\r\n  single_payslipearning: {},\r\n  delete_payslipearning_loading: false,\r\n  delete_payslipearning_error: false,\r\n  update_payslipearning_loading: false,\r\n  update_payslipearning_error: false,\r\n  add_payslipearning_loading: false,\r\n  add_payslipearning_error: false,\r\n  // payslip deductions\r\n  isPayslipDeductionEditing: false,\r\n  alertPayslipDeduction: { show: false, msg: \"\", type: \"\" },\r\n  editPayslipDeductionID: null,\r\n  payslipdeductions_loading: false,\r\n  payslipdeductions_error: false,\r\n  payslipdeductions: [],\r\n  single_payslipdeduction_loading: false,\r\n  single_payslipdeduction_error: false,\r\n  single_payslipdeduction: {},\r\n  delete_payslipdeduction_loading: false,\r\n  delete_payslipdeduction_error: false,\r\n  update_payslipdeduction_loading: false,\r\n  update_payslipdeduction_error: false,\r\n  add_payslipdeduction_loading: false,\r\n  add_payslipdeduction_error: false,\r\n};\r\n\r\nconst PayslipsContext = React.createContext();\r\n\r\nexport const PayslipsProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //....... payslip\r\n  const loadPayslips = async () => {\r\n    dispatch({ type: GET_PAYSLIPS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(payslips_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslips = await res.json();\r\n      dispatch({ type: GET_PAYSLIPS_SUCCESS, payload: payslips });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPS_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadPendingPayslips = async (fi) => {\r\n    dispatch({ type: GET_PAYSLIPS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(`${payslips_url}?fi=${fi}`);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslips = await res.json();\r\n      dispatch({ type: GET_PAYSLIPS_SUCCESS, payload: payslips });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPS_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleBatchPayslip = async (period) => {\r\n    dispatch({ type: GET_SINGLEBATCH_PAYSLIP_BEGIN });\r\n    try {\r\n      const res = await fetch(`${payslips_url}?fv=${period}`);\r\n      const singlebatchpayslip = await res.json();\r\n\r\n      dispatch({\r\n        type: GET_SINGLEBATCH_PAYSLIP_SUCCESS,\r\n        payload: singlebatchpayslip,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLEBATCH_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsPayslipEditingOn = () => {\r\n    dispatch({ type: SET_ISPAYSLIPEDITING_ON });\r\n  };\r\n\r\n  const setIsPayslipEditingOff = () => {\r\n    dispatch({ type: SET_ISPAYSLIPEDITING_OFF });\r\n  };\r\n\r\n  const resetSinglePayslip = () => {\r\n    dispatch({ type: RESET_SINGLE_PAYSLIP });\r\n  };\r\n\r\n  const setPayslipEarningAmount = (value) => {\r\n    dispatch({ type: SET_PAYSLIPEARNING_AMOUNT, payload: value });\r\n  };\r\n  const setPayslipDeductionAmount = (value) => {\r\n    dispatch({ type: SET_PAYSLIPDEDUCTION_AMOUNT, payload: value });\r\n  };\r\n\r\n  const setPayslipPeriod = async (name) => {\r\n    try {\r\n      dispatch({ type: SET_PAYSLIP_PERIOD, payload: name });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n  const setPayslipEndMonthDate = async (name) => {\r\n    try {\r\n      dispatch({ type: SET_PAYSLIP_ENDMONTHDATE, payload: name });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const setEditPayslipID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITPAYSLIPID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSinglePayslip = async (id) => {\r\n    dispatch({ type: GET_SINGLE_PAYSLIP_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${payslips_url}?id=${id}`);\r\n      const singlepayslip = data;\r\n      dispatch({ type: GET_SINGLE_PAYSLIP_SUCCESS, payload: singlepayslip });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const addPayslip = async (data) => {\r\n    const { id, name, from_date, to_date, reason, no_of_days, status } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYSLIP_BEGIN });\r\n    try {\r\n      await fetch(payslips_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYSLIP_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayslip = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYSLIP_BEGIN });\r\n    try {\r\n      await fetch(payslips_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYSLIP_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayslip = async (id) => {\r\n    dispatch({ type: DELETE_PAYSLIP_BEGIN });\r\n    try {\r\n      await fetch(payslips_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYSLIP_SUCCESS });\r\n      loadPayslips();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  //.... payslip earnings\r\n  const loadPayslipEarnings = async () => {\r\n    dispatch({ type: GET_PAYSLIPEARNINGS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(payslipearnings_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslipearnings = await res.json();\r\n      dispatch({ type: GET_PAYSLIPEARNINGS_SUCCESS, payload: payslipearnings });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPEARNINGS_ERROR });\r\n    }\r\n  };\r\n  //.... payslip earnings\r\n  const getSingleBatchPayslipEarnings = async (empid, period) => {\r\n    dispatch({ type: GET_PAYSLIPEARNINGS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(\r\n        `${payslipearnings_url}?fv=${empid}&period=${period}`\r\n      );\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslipearnings = await res.json();\r\n      dispatch({ type: GET_PAYSLIPEARNINGS_SUCCESS, payload: payslipearnings });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPEARNINGS_ERROR });\r\n    }\r\n  };\r\n  const addPayslipEarning = async (data) => {\r\n    const { id, name, period, description, amount } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYSLIPEARNING_BEGIN });\r\n    try {\r\n      await fetch(payslipearnings_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYSLIPEARNING_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYSLIPEARNING_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayslipEarning = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYSLIPEARNING_BEGIN });\r\n    try {\r\n      await fetch(payslipearnings_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYSLIPEARNING_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYSLIPEARNING_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayslipEarning = async (id) => {\r\n    dispatch({ type: DELETE_PAYSLIPEARNING_BEGIN });\r\n    try {\r\n      await fetch(payslipearnings_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYSLIPEARNING_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYSLIPEARNING_ERROR });\r\n    }\r\n  };\r\n\r\n  //.... payslip deductions\r\n  const loadPayslipDeductions = async () => {\r\n    dispatch({ type: GET_PAYSLIPDEDUCTIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(payslipdeductions_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslipdeductions = await res.json();\r\n      dispatch({\r\n        type: GET_PAYSLIPDEDUCTIONS_SUCCESS,\r\n        payload: payslipdeductions,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPDEDUCTIONS_ERROR });\r\n    }\r\n  };\r\n  const getSingleBatchPayslipDeductions = async (empid, period) => {\r\n    dispatch({ type: GET_PAYSLIPDEDUCTIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(\r\n        `${payslipdeductions_url}?fv=${empid}&period=${period}`\r\n      );\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslipdeductions = await res.json();\r\n      dispatch({\r\n        type: GET_PAYSLIPDEDUCTIONS_SUCCESS,\r\n        payload: payslipdeductions,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPDEDUCTIONS_ERROR });\r\n    }\r\n  };\r\n  const addPayslipDeduction = async (data) => {\r\n    const { id, name, period, description, amount } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYSLIPDEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(payslipdeductions_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYSLIPDEDUCTION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYSLIPDEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayslipDeduction = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYSLIPDEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(payslipdeductions_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYSLIPDEDUCTION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYSLIPDEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayslipDeduction = async (id) => {\r\n    dispatch({ type: DELETE_PAYSLIPDEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(payslipdeductions_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYSLIPDEDUCTION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYSLIPDEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PayslipsContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadPayslips,\r\n        loadPendingPayslips,\r\n        addPayslip,\r\n        updatePayslip,\r\n        deletePayslip,\r\n        getSinglePayslip,\r\n        getSingleBatchPayslip,\r\n        setEditPayslipID,\r\n        setIsPayslipEditingOn,\r\n        setIsPayslipEditingOff,\r\n        loadPayslipEarnings,\r\n        addPayslipEarning,\r\n        updatePayslipEarning,\r\n        deletePayslipEarning,\r\n        getSingleBatchPayslipEarnings,\r\n        setPayslipEarningAmount,\r\n        loadPayslipDeductions,\r\n        addPayslipDeduction,\r\n        updatePayslipDeduction,\r\n        deletePayslipDeduction,\r\n        getSingleBatchPayslipDeductions,\r\n        setPayslipDeductionAmount,\r\n        resetSinglePayslip,\r\n        setPayslipPeriod,\r\n        setPayslipEndMonthDate,\r\n      }}\r\n    >\r\n      {children}\r\n    </PayslipsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePayslipsContext = () => {\r\n  return useContext(PayslipsContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\payslips_reducer.js",["873"],"import {\r\n  SET_EDITPAYSLIPID,\r\n  SET_ISPAYSLIPEDITING_ON,\r\n  SET_ISPAYSLIPEDITING_OFF,\r\n  SET_PAYSLIP_PERIOD,\r\n  SET_PAYSLIP_ENDMONTHDATE,\r\n  SET_PAYSLIPEARNING_AMOUNT,\r\n  SET_PAYSLIPDEDUCTION_AMOUNT,\r\n  SET_SINGLEPAYSLIP,\r\n  GET_PAYSLIPS_BEGIN,\r\n  GET_PAYSLIPS_SUCCESS,\r\n  GET_PAYSLIPS_ERROR,\r\n  GET_SINGLE_PAYSLIP_BEGIN,\r\n  GET_SINGLE_PAYSLIP_SUCCESS,\r\n  GET_SINGLE_PAYSLIP_ERROR,\r\n  GET_SINGLEBATCH_PAYSLIP_BEGIN,\r\n  GET_SINGLEBATCH_PAYSLIP_SUCCESS,\r\n  GET_SINGLEBATCH_PAYSLIP_ERROR,\r\n  ADD_PAYSLIP_BEGIN,\r\n  ADD_PAYSLIP_SUCCESS,\r\n  ADD_PAYSLIP_ERROR,\r\n  DELETE_PAYSLIP_BEGIN,\r\n  DELETE_PAYSLIP_SUCCESS,\r\n  DELETE_PAYSLIP_ERROR,\r\n  UPDATE_PAYSLIP_BEGIN,\r\n  UPDATE_PAYSLIP_SUCCESS,\r\n  UPDATE_PAYSLIP_ERROR,\r\n  RESET_SINGLE_PAYSLIP,\r\n  GET_PAYSLIPEARNINGS_BEGIN,\r\n  GET_PAYSLIPEARNINGS_SUCCESS,\r\n  GET_PAYSLIPEARNINGS_ERROR,\r\n  GET_SINGLE_PAYSLIPEARNING_BEGIN,\r\n  GET_SINGLE_PAYSLIPEARNING_SUCCESS,\r\n  GET_SINGLE_PAYSLIPEARNING_ERROR,\r\n  ADD_PAYSLIPEARNING_BEGIN,\r\n  ADD_PAYSLIPEARNING_SUCCESS,\r\n  ADD_PAYSLIPEARNING_ERROR,\r\n  DELETE_PAYSLIPEARNING_BEGIN,\r\n  DELETE_PAYSLIPEARNING_SUCCESS,\r\n  DELETE_PAYSLIPEARNING_ERROR,\r\n  UPDATE_PAYSLIPEARNING_BEGIN,\r\n  UPDATE_PAYSLIPEARNING_SUCCESS,\r\n  UPDATE_PAYSLIPEARNING_ERROR,\r\n  GET_PAYSLIPDEDUCTIONS_BEGIN,\r\n  GET_PAYSLIPDEDUCTIONS_SUCCESS,\r\n  GET_PAYSLIPDEDUCTIONS_ERROR,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_BEGIN,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_SUCCESS,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_ERROR,\r\n  ADD_PAYSLIPDEDUCTION_BEGIN,\r\n  ADD_PAYSLIPDEDUCTION_SUCCESS,\r\n  ADD_PAYSLIPDEDUCTION_ERROR,\r\n  DELETE_PAYSLIPDEDUCTION_BEGIN,\r\n  DELETE_PAYSLIPDEDUCTION_SUCCESS,\r\n  DELETE_PAYSLIPDEDUCTION_ERROR,\r\n  UPDATE_PAYSLIPDEDUCTION_BEGIN,\r\n  UPDATE_PAYSLIPDEDUCTION_SUCCESS,\r\n  UPDATE_PAYSLIPDEDUCTION_ERROR,\r\n} from \"../actions\";\r\n\r\nconst payslips_reducer = (state, action) => {\r\n  // set payslips variables\r\n  if (action.type === SET_PAYSLIP_PERIOD) {\r\n    return { ...state, payslip_period: action.payload };\r\n  }\r\n  if (action.type === SET_PAYSLIP_ENDMONTHDATE) {\r\n    return { ...state, payslip_endmonthdate: action.payload };\r\n  }\r\n  if (action.type === SET_EDITPAYSLIPID) {\r\n    return { ...state, editPayslipID: action.payload };\r\n  }\r\n  if (action.type === SET_PAYSLIPEARNING_AMOUNT) {\r\n    return { ...state, payslip_earning_amount: action.payload };\r\n  }\r\n  if (action.type === SET_PAYSLIPDEDUCTION_AMOUNT) {\r\n    return { ...state, payslip_deduction_amount: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISPAYSLIPEDITING_ON) {\r\n    return { ...state, isPayslipEditing: true };\r\n  }\r\n  if (action.type === SET_ISPAYSLIPEDITING_OFF) {\r\n    return { ...state, isPayslipEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_PAYSLIP) {\r\n    return { ...state, single_payslip: {} };\r\n  }\r\n  // get payslips\r\n  if (action.type === GET_PAYSLIPS_BEGIN) {\r\n    return { ...state, payslips_loading: true };\r\n  }\r\n  if (action.type === GET_PAYSLIPS_SUCCESS) {\r\n    return { ...state, payslips_loading: false, payslips: action.payload };\r\n  }\r\n  if (action.type === GET_PAYSLIPS_ERROR) {\r\n    return { ...state, payslips_loading: false, payslips_error: true };\r\n  }\r\n\r\n  // add payslips\r\n  if (action.type === ADD_PAYSLIP_BEGIN) {\r\n    return { ...state, add_payslip_loading: true };\r\n  }\r\n  if (action.type === ADD_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_payslips_loading: false,\r\n      payslips: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_PAYSLIP_ERROR) {\r\n    return { ...state, payslips_loading: false, add_payslip_error: true };\r\n  }\r\n  // update payslips\r\n  if (action.type === UPDATE_PAYSLIP_BEGIN) {\r\n    return { ...state, update_payslip_loading: true };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      payslips_loading: false,\r\n      single_payslip: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIP_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_payslip_loading: false,\r\n      update_payslip_error: true,\r\n    };\r\n  }\r\n\r\n  // delete payslips\r\n  if (action.type === DELETE_PAYSLIP_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_payslip_loading: true,\r\n      delete_payslip_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_payslip_loading: false,\r\n      delete_payslip_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_PAYSLIP_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_payslip_loading: false,\r\n      delete_payslip_error: true,\r\n    };\r\n  }\r\n\r\n  //single payslips\r\n  if (action.type === GET_SINGLE_PAYSLIP_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_payslip_loading: true,\r\n      single_payslip_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_payslip_loading: false,\r\n      single_payslip: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIP_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_payslip_loading: false,\r\n      single_payslip_error: true,\r\n    };\r\n  }\r\n\r\n  //single batch payslips\r\n  if (action.type === GET_SINGLEBATCH_PAYSLIP_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_payslip_loading: true,\r\n      singlebatch_payslip_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      singlebatch_payslip_loading: false,\r\n      singlebatchpayslip: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_PAYSLIP_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_payslip_loading: false,\r\n      singlebatch_payslip_error: true,\r\n    };\r\n  }\r\n\r\n  // ------ payslip earnings\r\n  // get payslip earning\r\n  if (action.type === GET_PAYSLIPEARNINGS_BEGIN) {\r\n    return { ...state, payslipearnings_loading: true };\r\n  }\r\n  if (action.type === GET_PAYSLIPEARNINGS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      payslipearnings_loading: false,\r\n      payslipearnings: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_PAYSLIPEARNINGS_ERROR) {\r\n    return {\r\n      ...state,\r\n      payslipearnings_loading: false,\r\n      payslipearnings_error: true,\r\n    };\r\n  }\r\n\r\n  // add payslip earning\r\n  if (action.type === ADD_PAYSLIPEARNING_BEGIN) {\r\n    return { ...state, add_payslipearning_loading: true };\r\n  }\r\n  if (action.type === ADD_PAYSLIPEARNING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_payslipearnings_loading: false,\r\n      payslipearnings: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_PAYSLIPEARNING_ERROR) {\r\n    return {\r\n      ...state,\r\n      payslipearnings_loading: false,\r\n      add_payslipearning_error: true,\r\n    };\r\n  }\r\n  // update payslip earning\r\n  if (action.type === UPDATE_PAYSLIPEARNING_BEGIN) {\r\n    return { ...state, update_payslipearning_loading: true };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIPEARNING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      payslipearnings_loading: false,\r\n      single_payslipearning: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIPEARNING_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_payslipearning_loading: false,\r\n      update_payslipearning_error: true,\r\n    };\r\n  }\r\n\r\n  // delete payslip earning\r\n  if (action.type === DELETE_PAYSLIPEARNING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_payslipearning_loading: true,\r\n      delete_payslipearning_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_PAYSLIPEARNING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_payslipearning_loading: false,\r\n      delete_payslipearning_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_PAYSLIPEARNING_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_payslipearning_loading: false,\r\n      delete_payslipearning_error: true,\r\n    };\r\n  }\r\n\r\n  //single payslip earning\r\n  if (action.type === GET_SINGLE_PAYSLIPEARNING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_payslipearning_loading: true,\r\n      single_payslipearning_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIPEARNING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_payslipearning_loading: false,\r\n      single_payslipearning: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIPEARNING_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_payslipearning_loading: false,\r\n      single_payslipearning_error: true,\r\n    };\r\n  }\r\n\r\n  // ..........payslip deductions\r\n  // get payslip deduction\r\n  if (action.type === GET_PAYSLIPDEDUCTIONS_BEGIN) {\r\n    return { ...state, payslipdeductions_loading: true };\r\n  }\r\n  if (action.type === GET_PAYSLIPDEDUCTIONS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      payslipdeductions_loading: false,\r\n      payslipdeductions: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_PAYSLIPDEDUCTIONS_ERROR) {\r\n    return {\r\n      ...state,\r\n      payslipdeductions_loading: false,\r\n      payslipdeductions_error: true,\r\n    };\r\n  }\r\n\r\n  // add payslip deduction\r\n  if (action.type === ADD_PAYSLIPDEDUCTION_BEGIN) {\r\n    return { ...state, add_payslipdeduction_loading: true };\r\n  }\r\n  if (action.type === ADD_PAYSLIPDEDUCTION_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_payslipdeductions_loading: false,\r\n      payslipdeductions: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_PAYSLIPDEDUCTION_ERROR) {\r\n    return {\r\n      ...state,\r\n      payslipdeductions_loading: false,\r\n      add_payslipdeduction_error: true,\r\n    };\r\n  }\r\n  // update payslip deduction\r\n  if (action.type === UPDATE_PAYSLIPDEDUCTION_BEGIN) {\r\n    return { ...state, update_payslipdeduction_loading: true };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIPDEDUCTION_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      payslipdeductions_loading: false,\r\n      single_payslipdeduction: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIPDEDUCTION_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_payslipdeduction_loading: false,\r\n      update_payslipdeduction_error: true,\r\n    };\r\n  }\r\n\r\n  // delete payslip deduction\r\n  if (action.type === DELETE_PAYSLIPDEDUCTION_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_payslipdeduction_loading: true,\r\n      delete_payslipdeduction_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_PAYSLIPDEDUCTION_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_payslipdeduction_loading: false,\r\n      delete_payslipdeduction_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_PAYSLIPDEDUCTION_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_payslipdeduction_loading: false,\r\n      delete_payslipdeduction_error: true,\r\n    };\r\n  }\r\n\r\n  //single payslip deduction\r\n  if (action.type === GET_SINGLE_PAYSLIPDEDUCTION_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_payslipdeduction_loading: true,\r\n      single_payslipdeduction_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIPDEDUCTION_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_payslipdeduction_loading: false,\r\n      single_payslipdeduction: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIPDEDUCTION_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_payslipdeduction_loading: false,\r\n      single_payslipdeduction_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default payslips_reducer;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTable2.js",["874","875","876","877","878","879","880","881","882","883","884","885"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\Payslip_Earnings.js",["886","887","888","889","890","891","892","893","894","895","896","897","898","899"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField, MenuItem } from \"@material-ui/core\";\r\n\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n  payEarningDataState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nexport default function Payslip_Earnings({\r\n  setCalc,\r\n  earningsdata,\r\n  oldEarningsdata,\r\n  setEarningsdata,\r\n  handleDialogClose,\r\n}) {\r\n  let history = useHistory();\r\n   const classes = useStyles();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n  const payEarningData = useRecoilValue(payEarningDataState);\r\n  const {\r\n    payslipearnings,\r\n    payslip_earning_amount,\r\n    setPayslipEarningAmount,\r\n    addPayslipEarning,\r\n    payslipearnings_loading,\r\n    updatePayslipEarning,\r\n    deletePayslipEarning,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipEarnings,\r\n  } = usePayslipsContext();\r\n\r\n  const { name, amount } = payslipearnings;\r\n  const { allowances } = useTablesContext();\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Description\",\r\n      field: \"description\",\r\n      editComponent: (props) => (\r\n        <TextField\r\n          //defaultValue={props.value || null}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n          style={{ width: 200 }}\r\n          value={props.value}\r\n          select\r\n        >\r\n          {allowances.map((r) => {\r\n            return <MenuItem value={r.name}>{r.name}</MenuItem>;\r\n          })}\r\n        </TextField>\r\n      ),\r\n    },\r\n    { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  }, []);\r\n\r\n  const calc_Earning = (data) => {\r\n    const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n    console.log(\"Earning\", data);\r\n    setPayslipEarningAmount(sum);\r\n  };\r\n\r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_earnings, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_earnings: payslip_earning_amount,\r\n      ...paydata,\r\n    });\r\n    setCalc(true);\r\n  };\r\n\r\n  const update_PayslipEarning = async (data) => {\r\n    const { id, rec_id, empid, ...fields } = data;\r\n    console.log(\"update\", data);\r\n    updatePayslipEarning({ id: data.id, empid: empid, ...fields });\r\n\r\n    update_Payslip();\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const add_PayslipEarning = (data) => {\r\n    console.log(\"add\", data);\r\n    const { description, amount } = data;\r\n    addPayslipEarning({\r\n      description: description,\r\n      amount: amount,\r\n      name: single_payslip.name,\r\n      empid: single_payslip.empid,\r\n      period: single_payslip.period,\r\n    });\r\n\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const delete_PayslipEarning = (data) => {\r\n    const { id } = data;\r\n    deletePayslipEarning(id);\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const Save_EarningsData = () => {\r\n    // delete unwanted data\r\n    console.log(\"update\", earningsdata, oldEarningsdata);\r\n    oldEarningsdata.forEach((row) => {\r\n      const { id, rec_id } = row;\r\n      const res = earningsdata.find((r) => r.rec_id === rec_id);\r\n      console.log(\"find\", id, res);\r\n      if (!res) {\r\n        deletePayslipEarning(id);\r\n      }\r\n    });\r\n    //add or update new data\r\n\r\n    earningsdata.forEach((data) => {\r\n      const { id, description, amount } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updatePayslipEarning({ id, ...fields });\r\n      } else {\r\n        addPayslipEarning({\r\n          description: description,\r\n          amount: amount,\r\n          name: single_payslip.name,\r\n          empid: payPeriodEmpId,\r\n          period: payPeriod,\r\n        });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  if (payslipearnings_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Incomes.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={earningsdata}\r\n          title=\"Income\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setEarningsdata([...earningsdata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...earningsdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setEarningsdata([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...earningsdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setEarningsdata([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_EarningsData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\Payslip_Deductions.js",["900","901","902","903","904","905","906","907","908","909","910","911"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField, MenuItem } from \"@material-ui/core\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n  payEarningDataState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nexport default function Payslip_Deductions({\r\n  setCalc,\r\n  deductionsdata,\r\n  oldDeductionsdata,\r\n  setDeductionsdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n  const payEarningData = useRecoilValue(payEarningDataState);\r\n  const {\r\n    payslipdeductions,\r\n    payslip_deduction_amount,\r\n    setPayslipDeductionAmount,\r\n    loadPayslipDeductions,\r\n    addPayslipDeduction,\r\n    payslipdeductions_loading,\r\n    updatePayslipDeduction,\r\n    deletePayslipDeduction,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipDeductions,\r\n  } = usePayslipsContext();\r\n  const { name, amount } = payslipdeductions;\r\n  const { deductions } = useTablesContext();\r\n\r\n  const calc_Deduction = (data) => {\r\n    const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n    setPayslipDeductionAmount(sum);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Description\",\r\n      field: \"description\",\r\n      editComponent: (props) => (\r\n        <TextField\r\n          //defaultValue={props.value || null}\r\n          onChange={(e) => props.onChange(e.target.value)}\r\n          style={{ width: 200 }}\r\n          value={props.value}\r\n          select\r\n        >\r\n          {deductions.map((r) => {\r\n            return <MenuItem value={r.name}>{r.name}</MenuItem>;\r\n          })}\r\n        </TextField>\r\n      ),\r\n    },\r\n    { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  }, []);\r\n\r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_deductions, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_deductions: payslip_deduction_amount,\r\n      ...paydata,\r\n    });\r\n  };\r\n\r\n  const update_PayslipDeduction = async (data) => {\r\n    const { id, rec_id, empid, ...fields } = data;\r\n    updatePayslipDeduction({ id: data.id, empid: empid, ...fields });\r\n    update_Payslip();\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const add_PayslipDeduction = (data) => {\r\n    const { description, amount } = data;\r\n    addPayslipDeduction({\r\n      description: description,\r\n      amount: amount,\r\n      name: single_payslip.name,\r\n      empid: single_payslip.empid,\r\n      period: single_payslip.period,\r\n    });\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const delete_PayslipDeduction = (data) => {\r\n    const { id } = data;\r\n    deletePayslipDeduction(id);\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const Save_DeductionsData = () => {\r\n    // delete unwanted data\r\n    console.log(\"update\", deductionsdata, oldDeductionsdata);\r\n    oldDeductionsdata.forEach((row) => {\r\n      const { id, rec_id } = row;\r\n      const res = deductionsdata.find((r) => r.rec_id === rec_id);\r\n      console.log(\"find\", id, res);\r\n      if (!res) {\r\n        deletePayslipDeduction(id);\r\n      }\r\n    });\r\n    //add or update new data\r\n\r\n    deductionsdata.forEach((data) => {\r\n      const { id, description, amount } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updatePayslipDeduction({ id, ...fields });\r\n      } else {\r\n        addPayslipDeduction({\r\n          description: description,\r\n          amount: amount,\r\n          name: single_payslip.name,\r\n          empid: payPeriodEmpId,\r\n          period: payPeriod,\r\n        });\r\n      }\r\n    });\r\n    handleDialogClose();\r\n  };\r\n\r\n  if (payslipdeductions_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Expenses.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={deductionsdata}\r\n          title=\"Deductions\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setDeductionsdata([...deductionsdata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...deductionsdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setDeductionsdata([...dataUpdate]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...deductionsdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setDeductionsdata([...dataDelete]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_DeductionsData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\TablesPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\TablesUpdate.js",["912","913","914","915","916","917","918","919","920","921","922","923"],"import React from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Select,\r\n  Divider,\r\n  Grid,\r\n  Toolbar,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport UpdateAllowances from \"./AllowancesTable\";\r\nimport UpdateDeductions from \"./DeductionsTable\";\r\nimport UpdateDepartments from \"./DepartmentsTable\";\r\nimport UpdateDesignations from \"./DesignationsTable\";\r\n\r\nconst TablesUpdate = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { allowances, load_allowances } = useTablesContext();\r\n  return (\r\n    <div>\r\n      <Grid container alignItems=\"center\" className={classes.grid}>\r\n        <Grid xs={12}>\r\n          <h2>Tables Maintenance</h2>\r\n        </Grid>\r\n\r\n        <Grid xs={12}>\r\n          <UpdateAllowances />\r\n        </Grid>\r\n        <Divider />\r\n\r\n        <Grid xs={12}>\r\n          <UpdateDeductions />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <UpdateDepartments />\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <UpdateDesignations />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n  grid: {\r\n    padding: theme.spacing(3, 2),\r\n    // justifyContent: \"center\",\r\n  },\r\n  box: {\r\n    height: 100,\r\n    display: \"flex\",\r\n    border: \"1px solid black\",\r\n    padding: 8,\r\n  },\r\n}));\r\n\r\nexport default TablesUpdate;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\context\\tables_context.js",["924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/tables_reducer\";\r\nimport { allowances_url } from \"../utils/constants\";\r\nimport { deductions_url } from \"../utils/constants\";\r\nimport { departments_url } from \"../utils/constants\";\r\nimport { designations_url } from \"../utils/constants\";\r\nimport { family_url } from \"../utils/constants\";\r\nimport { educations_url } from \"../utils/constants\";\r\nimport { experiences_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  GET_ALLOWANCES_BEGIN,\r\n  GET_ALLOWANCES_SUCCESS,\r\n  GET_ALLOWANCES_ERROR,\r\n  ADD_ALLOWANCE_BEGIN,\r\n  ADD_ALLOWANCE_SUCCESS,\r\n  ADD_ALLOWANCE_ERROR,\r\n  UPDATE_ALLOWANCE_BEGIN,\r\n  UPDATE_ALLOWANCE_SUCCESS,\r\n  UPDATE_ALLOWANCE_ERROR,\r\n  DELETE_ALLOWANCE_BEGIN,\r\n  DELETE_ALLOWANCE_SUCCESS,\r\n  DELETE_ALLOWANCE_ERROR,\r\n  GET_DEDUCTIONS_BEGIN,\r\n  GET_DEDUCTIONS_SUCCESS,\r\n  GET_DEDUCTIONS_ERROR,\r\n  ADD_DEDUCTION_BEGIN,\r\n  ADD_DEDUCTION_SUCCESS,\r\n  ADD_DEDUCTION_ERROR,\r\n  UPDATE_DEDUCTION_BEGIN,\r\n  UPDATE_DEDUCTION_SUCCESS,\r\n  UPDATE_DEDUCTION_ERROR,\r\n  DELETE_DEDUCTION_BEGIN,\r\n  DELETE_DEDUCTION_SUCCESS,\r\n  DELETE_DEDUCTION_ERROR,\r\n  GET_DEPARTMENTS_BEGIN,\r\n  GET_DEPARTMENTS_SUCCESS,\r\n  GET_DEPARTMENTS_ERROR,\r\n  ADD_DEPARTMENT_BEGIN,\r\n  ADD_DEPARTMENT_SUCCESS,\r\n  ADD_DEPARTMENT_ERROR,\r\n  UPDATE_DEPARTMENT_BEGIN,\r\n  UPDATE_DEPARTMENT_SUCCESS,\r\n  UPDATE_DEPARTMENT_ERROR,\r\n  DELETE_DEPARTMENT_BEGIN,\r\n  DELETE_DEPARTMENT_SUCCESS,\r\n  DELETE_DEPARTMENT_ERROR,\r\n  GET_DESIGNATIONS_BEGIN,\r\n  GET_DESIGNATIONS_SUCCESS,\r\n  GET_DESIGNATIONS_ERROR,\r\n  ADD_DESIGNATION_BEGIN,\r\n  ADD_DESIGNATION_SUCCESS,\r\n  ADD_DESIGNATION_ERROR,\r\n  UPDATE_DESIGNATION_BEGIN,\r\n  UPDATE_DESIGNATION_SUCCESS,\r\n  UPDATE_DESIGNATION_ERROR,\r\n  DELETE_DESIGNATION_BEGIN,\r\n  DELETE_DESIGNATION_SUCCESS,\r\n  DELETE_DESIGNATION_ERROR,\r\n  GET_FAMILY_BEGIN,\r\n  GET_FAMILY_SUCCESS,\r\n  GET_FAMILY_ERROR,\r\n  ADD_FAMILY_BEGIN,\r\n  ADD_FAMILY_SUCCESS,\r\n  ADD_FAMILY_ERROR,\r\n  UPDATE_FAMILY_BEGIN,\r\n  UPDATE_FAMILY_SUCCESS,\r\n  UPDATE_FAMILY_ERROR,\r\n  DELETE_FAMILY_BEGIN,\r\n  DELETE_FAMILY_SUCCESS,\r\n  DELETE_FAMILY_ERROR,\r\n  LOAD_SINGLEBATCH_FAMILY_BEGIN,\r\n  LOAD_SINGLEBATCH_FAMILY_SUCCESS,\r\n  LOAD_SINGLEBATCH_FAMILY_ERROR,\r\n  // education\r\n  GET_EDUCATION_BEGIN,\r\n  GET_EDUCATION_SUCCESS,\r\n  GET_EDUCATION_ERROR,\r\n  ADD_EDUCATION_BEGIN,\r\n  ADD_EDUCATION_SUCCESS,\r\n  ADD_EDUCATION_ERROR,\r\n  UPDATE_EDUCATION_BEGIN,\r\n  UPDATE_EDUCATION_SUCCESS,\r\n  UPDATE_EDUCATION_ERROR,\r\n  DELETE_EDUCATION_BEGIN,\r\n  DELETE_EDUCATION_SUCCESS,\r\n  DELETE_EDUCATION_ERROR,\r\n  LOAD_SINGLEBATCH_EDUCATION_BEGIN,\r\n  LOAD_SINGLEBATCH_EDUCATION_SUCCESS,\r\n  LOAD_SINGLEBATCH_EDUCATION_ERROR,\r\n  // experience\r\n  GET_EXPERIENCE_BEGIN,\r\n  GET_EXPERIENCE_SUCCESS,\r\n  GET_EXPERIENCE_ERROR,\r\n  ADD_EXPERIENCE_BEGIN,\r\n  ADD_EXPERIENCE_SUCCESS,\r\n  ADD_EXPERIENCE_ERROR,\r\n  UPDATE_EXPERIENCE_BEGIN,\r\n  UPDATE_EXPERIENCE_SUCCESS,\r\n  UPDATE_EXPERIENCE_ERROR,\r\n  DELETE_EXPERIENCE_BEGIN,\r\n  DELETE_EXPERIENCE_SUCCESS,\r\n  DELETE_EXPERIENCE_ERROR,\r\n  LOAD_SINGLEBATCH_EXPERIENCE_BEGIN,\r\n  LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS,\r\n  LOAD_SINGLEBATCH_EXPERIENCE_ERROR,\r\n  // reset\r\n  RESET_TABLES,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  allowances: [],\r\n  allowances_loading: false,\r\n  allowances_error: false,\r\n  deductions: [],\r\n  deductions_loading: false,\r\n  deductions_error: false,\r\n  departments: [],\r\n  departments_loading: false,\r\n  departments_error: false,\r\n  designatons: [],\r\n  designations_loading: false,\r\n  designations_error: false,\r\n  family: [],\r\n  family_loading: false,\r\n  family_error: false,\r\n  singlebatch_family_loading: false,\r\n  singlebatch_family_error: false,\r\n  singlebatchfamily: {},\r\n  single_family: {},\r\n  education: [],\r\n  education_loading: false,\r\n  education_error: false,\r\n  singlebatch_education_loading: false,\r\n  singlebatch_education_error: false,\r\n  singlebatcheducation: {},\r\n  experience: [],\r\n  experience_loading: false,\r\n  experience_error: false,\r\n  singlebatch_experience_loading: false,\r\n  singlebatch_experience_error: false,\r\n  singlebatchexperience: {},\r\n};\r\n\r\nconst TablesContext = React.createContext();\r\n\r\nexport const TablesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  // Allowances\r\n  const loadAllowances = async () => {\r\n    dispatch({ type: GET_ALLOWANCES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(allowances_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const allowances = await res.json();\r\n      dispatch({ type: GET_ALLOWANCES_SUCCESS, payload: allowances });\r\n    } catch (error) {\r\n      dispatch({ type: GET_ALLOWANCES_ERROR });\r\n    }\r\n  };\r\n\r\n  const addAllowance = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_ALLOWANCE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateAllowance = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_ALLOWANCE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteAllowance = async (id) => {\r\n    dispatch({ type: DELETE_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_ALLOWANCE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  // Deductions\r\n  const loadDeductions = async () => {\r\n    dispatch({ type: GET_DEDUCTIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(deductions_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const deductions = await res.json();\r\n      dispatch({ type: GET_DEDUCTIONS_SUCCESS, payload: deductions });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DEDUCTIONS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDeduction = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DEDUCTION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDeduction = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DEDUCTION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDeduction = async (id) => {\r\n    dispatch({ type: DELETE_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DEDUCTION_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  // Departments\r\n  const loadDepartments = async () => {\r\n    dispatch({ type: GET_DEPARTMENTS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(departments_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const departments = await res.json();\r\n      dispatch({ type: GET_DEPARTMENTS_SUCCESS, payload: departments });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DEPARTMENTS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDepartment = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DEPARTMENT_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDepartment = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DEPARTMENT_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDepartment = async (id) => {\r\n    dispatch({ type: DELETE_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DEPARTMENT_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  // Designations\r\n  const loadDesignations = async () => {\r\n    dispatch({ type: GET_DESIGNATIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(designations_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const designations = await res.json();\r\n      dispatch({ type: GET_DESIGNATIONS_SUCCESS, payload: designations });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DESIGNATIONS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDesignation = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DESIGNATION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDesignation = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DESIGNATION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDesignation = async (id) => {\r\n    dispatch({ type: DELETE_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DESIGNATION_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  // Family\r\n  const loadFamily = async () => {\r\n    dispatch({ type: GET_FAMILY_BEGIN });\r\n    try {\r\n      const res = await fetch(family_url);\r\n      const family = await res.json();\r\n      dispatch({ type: GET_FAMILY_SUCCESS, payload: family });\r\n    } catch (error) {\r\n      dispatch({ type: GET_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadSingleBatchFamily = async (empid) => {\r\n    dispatch({ type: LOAD_SINGLEBATCH_FAMILY_BEGIN });\r\n    try {\r\n      const res = await fetch(`${family_url}?fv=${empid}`);\r\n      //console.log(`${family_url}?fv=${linkid}`);\r\n      const singlebatchfamily = await res.json();\r\n\r\n      dispatch({\r\n        type: LOAD_SINGLEBATCH_FAMILY_SUCCESS,\r\n        payload: singlebatchfamily,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: LOAD_SINGLEBATCH_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const addFamily = async (data) => {\r\n    const { id, name } = data;\r\n\r\n    dispatch({ type: ADD_FAMILY_BEGIN });\r\n    try {\r\n      await fetch(family_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_FAMILY_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateFamily = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_FAMILY_BEGIN });\r\n    try {\r\n      await fetch(family_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_FAMILY_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteFamily = async (id) => {\r\n    dispatch({ type: DELETE_FAMILY_BEGIN });\r\n    try {\r\n      await fetch(family_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_FAMILY_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  // Education\r\n  const loadEducation = async () => {\r\n    dispatch({ type: GET_EDUCATION_BEGIN });\r\n    try {\r\n      const res = await fetch(educations_url);\r\n\r\n      const education = await res.json();\r\n      dispatch({ type: GET_EDUCATION_SUCCESS, payload: education });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadSingleBatchEducation = async (empid) => {\r\n    dispatch({ type: LOAD_SINGLEBATCH_EDUCATION_BEGIN });\r\n    try {\r\n      const res = await fetch(`${educations_url}?fv=${empid}`);\r\n\r\n      const singlebatcheducation = await res.json();\r\n      dispatch({\r\n        type: LOAD_SINGLEBATCH_EDUCATION_SUCCESS,\r\n        payload: singlebatcheducation,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: LOAD_SINGLEBATCH_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const addEducation = async (data) => {\r\n    const { id, name } = data;\r\n\r\n    dispatch({ type: ADD_EDUCATION_BEGIN });\r\n    try {\r\n      await fetch(educations_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_EDUCATION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateEducation = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_EDUCATION_BEGIN });\r\n    try {\r\n      await fetch(educations_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_EDUCATION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteEducation = async (id) => {\r\n    dispatch({ type: DELETE_EDUCATION_BEGIN });\r\n    try {\r\n      await fetch(educations_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_EDUCATION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  // Experience\r\n  const loadExperience = async () => {\r\n    dispatch({ type: GET_EXPERIENCE_BEGIN });\r\n    try {\r\n      const res = await fetch(educations_url);\r\n\r\n      const experience = await res.json();\r\n      dispatch({ type: GET_EXPERIENCE_SUCCESS, payload: experience });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadSingleBatchExperience = async (empid) => {\r\n    dispatch({ type: LOAD_SINGLEBATCH_EXPERIENCE_BEGIN });\r\n    try {\r\n      const res = await fetch(`${experiences_url}?fv=${empid}`);\r\n\r\n      const singlebatchexperience = await res.json();\r\n      dispatch({\r\n        type: LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS,\r\n        payload: singlebatchexperience,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: LOAD_SINGLEBATCH_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addExperience = async (data) => {\r\n    const { id, name } = data;\r\n\r\n    dispatch({ type: ADD_EXPERIENCE_BEGIN });\r\n    try {\r\n      await fetch(experiences_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_EXPERIENCE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateExperience = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_EXPERIENCE_BEGIN });\r\n    try {\r\n      await fetch(experiences_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_EXPERIENCE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteExperience = async (id) => {\r\n    dispatch({ type: DELETE_EXPERIENCE_BEGIN });\r\n    try {\r\n      await fetch(experiences_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_EXPERIENCE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const resetTables = () => {\r\n    dispatch({ type: RESET_TABLES });\r\n  };\r\n\r\n  return (\r\n    <TablesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadAllowances,\r\n        addAllowance,\r\n        deleteAllowance,\r\n        updateAllowance,\r\n        loadDeductions,\r\n        addDeduction,\r\n        deleteDeduction,\r\n        updateDeduction,\r\n        loadDepartments,\r\n        addDepartment,\r\n        deleteDepartment,\r\n        updateDepartment,\r\n        loadDesignations,\r\n        addDesignation,\r\n        deleteDesignation,\r\n        updateDesignation,\r\n        loadFamily,\r\n        loadSingleBatchFamily,\r\n        addFamily,\r\n        deleteFamily,\r\n        updateFamily,\r\n        loadEducation,\r\n        loadSingleBatchEducation,\r\n        addEducation,\r\n        deleteEducation,\r\n        updateEducation,\r\n        loadExperience,\r\n        loadSingleBatchExperience,\r\n        addExperience,\r\n        deleteExperience,\r\n        updateExperience,\r\n        resetTables,\r\n      }}\r\n    >\r\n      {children}\r\n    </TablesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTablesContext = () => {\r\n  return useContext(TablesContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\tables_reducer.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\BatchPayslipsPage.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipForm2.js",["940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\Preferences.js",[],["962","963"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\Login.js",["964","965","966","967","968","969","970"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipForm.js",["971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001"],"import React, { useState, useReducer, useEffect, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Select,\r\n  Divider,\r\n  Grid,\r\n  Toolbar,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n  payEarningDataState,\r\n  payDeductionDataState,\r\n} from \"./data/atomdata\";\r\n\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport Payslip_ViewEarnings from \"./Payslip_ViewEarnings\";\r\nimport Payslip_ViewDeductions from \"./Payslip_ViewDeductions\";\r\nimport Payslip_Earnings from \"./Payslip_Earnings\";\r\nimport Payslip_Deductions from \"./Payslip_Deductions\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  period: \"\",\r\n  date: \"\",\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  status: \"Pending\",\r\n  total_earnings: 0,\r\n  total_deductions: 0,\r\n  tap_amount: 0,\r\n  scp_amount: 0,\r\n  basic_pay: 0,\r\n  nett_pay: 0,\r\n};\r\n\r\nconst PayslipForm = () => {\r\n  let history = useHistory();\r\n  const [calc, setCalc] = useState(false);\r\n  const classes = useStyles();\r\n  const {\r\n    isPayslipEditing,\r\n    single_payslip,\r\n    updatePayslip,\r\n    addPayslip,\r\n    editPayslipID,\r\n    loadPayslips,\r\n    getSinglePayslip,\r\n    single_payslip_loading,\r\n    single_payslip_error,\r\n    payslip_period,\r\n    payslip_earning_amount,\r\n    payslip_deduction_amount,\r\n    setPayslipEarningAmount,\r\n    setPayslipDeductionAmount,\r\n    payslipearnings,\r\n    payslipdeductions,\r\n    getSingleBatchPayslipEarnings,\r\n    getSingleBatchPayslipDeductions,\r\n  } = usePayslipsContext();\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const { loadAllowances, loadDeductions, allowances, deductions } =\r\n    useTablesContext();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n  const setPayEarningData = useSetRecoilState(payEarningDataState);\r\n  const setPayDeductionData = useSetRecoilState(payDeductionDataState);\r\n  const [earningsdata, setEarningsdata] = useState([]);\r\n  const [oldEarningsdata, setOldEarningsdata] = useState([]);\r\n  const [deductionsdata, setDeductionsdata] = useState([]);\r\n  const [oldDeductionsdata, setOldDeductionsdata] = useState([]);\r\n  const [isEarningsDialogOpen, setIsEarningsDialogOpen] = useState(false);\r\n  const [isDeductionsDialogOpen, setIsDeductionsDialogOpen] = useState(false);\r\n  //const [state, setState] = useState(single_payslip);\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const {\r\n    name,\r\n    period,\r\n    date,\r\n    bank_name,\r\n    bank_acno,\r\n    status,\r\n    total_earnings,\r\n    total_deductions,\r\n    tap_amount,\r\n    scp_amount,\r\n    basic_pay,\r\n    nett_pay,\r\n  } = single_payslip;\r\n\r\n  useEffect(async () => {\r\n    getSinglePayslip(editPayslipID);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (calc) {\r\n  //     setTimeout(() => {\r\n  //       console.log(\"calc\");\r\n  //       calc_totals();\r\n  //       setCalc(false);\r\n  //     }, 10000);\r\n  //   }\r\n  // }, [calc]);\r\n\r\n  const handleChange = (event) => {\r\n    //const { rec_id, ...fields } = single_payslip;\r\n    // const value =\r\n    //   event.target.type === \"number\"\r\n    //     ? parseInt(event.target.value, 10)\r\n    //     : event.target.value;\r\n    // setState({ ...state, [event.target.name]: value });\r\n  };\r\n\r\n  const calc_totals = () => {\r\n    const totalTAP = Math.ceil(basic_pay * 0.05);\r\n    const totalSCP =\r\n      Math.round((basic_pay + Number.EPSILON) * 0.035 * 100) / 100;\r\n    const totalEarnings = payslipearnings.reduce(\r\n      (a, v) => (a = a + v.amount),\r\n      0\r\n    );\r\n    const totalDeductions = payslipdeductions.reduce(\r\n      (a, v) => (a = a + v.amount),\r\n      0\r\n    );\r\n    const nettPay =\r\n      basic_pay + totalEarnings - totalDeductions - totalTAP - totalSCP;\r\n    setPayslipEarningAmount(totalEarnings);\r\n    setPayslipDeductionAmount(totalDeductions);\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_earnings: totalEarnings,\r\n      total_deductions: totalDeductions,\r\n      tap_amount: totalTAP,\r\n      scp_amount: totalSCP,\r\n      nett_pay: nettPay,\r\n    });\r\n    console.log(\r\n      \"total\",\r\n      totalEarnings,\r\n      totalDeductions,\r\n      totalTAP,\r\n      totalSCP,\r\n      nettPay\r\n    );\r\n    getSinglePayslip(editPayslipID);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    const { rec_id, ...fields } = single_payslip;\r\n    updatePayslip(...fields);\r\n\r\n    // if (isPayslipEditing) {\r\n    //   updatePayslip({ id: editPayslipID, ...data });\r\n    // } else {\r\n    //   addPayslip({ ...data });\r\n    // }\r\n    // loadPayslips();\r\n    // history.push(\"/batchpayslips\");\r\n  };\r\n  const handleEarningsDialogOpen = () => {\r\n    // setPayEarningData([...payslipearnings]);\r\n    setOldEarningsdata([...payslipearnings]);\r\n    setEarningsdata([...payslipearnings]);\r\n    setIsEarningsDialogOpen(true);\r\n  };\r\n\r\n  const handleEarningsDialogClose = () => {\r\n    setIsEarningsDialogOpen(false);\r\n    getSingleBatchPayslipEarnings(payPeriodEmpId, payPeriod);\r\n  };\r\n  const handleDeductionsDialogOpen = () => {\r\n    setOldDeductionsdata([...payslipdeductions]);\r\n    setDeductionsdata([...payslipdeductions]);\r\n    setIsDeductionsDialogOpen(true);\r\n  };\r\n\r\n  const handleDeductionsDialogClose = () => {\r\n    setIsDeductionsDialogOpen(false);\r\n    getSingleBatchPayslipDeductions(payPeriodEmpId, payPeriod);\r\n  };\r\n\r\n  if (single_payslip_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (single_payslip_error) {\r\n    history.push(\"/error\");\r\n  }\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Grid xs={12} md={8} lg={12}>\r\n          <CardLayout2 title=\"Employee Profile\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <Grid>\r\n                <div>\r\n                  <Typography variant=\"h5\" component=\"h3\">\r\n                    PAYSLIP FORM\r\n                  </Typography>\r\n                  <Typography component=\"p\">Payslip Preparation</Typography>\r\n\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                  >\r\n                    Submit <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n              <Divider className={classes.divider} />\r\n              <Grid item xs={12}>\r\n                <div>\r\n                  <Controller\r\n                    name=\"name\"\r\n                    control={control}\r\n                    defaultValue={name}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Name\"\r\n                          id=\"margin-normal\"\r\n                          name=\"name\"\r\n                          defaultValue={name}\r\n                          className={classes.textField}\r\n                          onChange={handleChange}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        >\r\n                          {/* {employees.map((e) => {\r\n                  return (\r\n                    <MenuItem key={e.name} value={e.name}>\r\n                      {e.name}\r\n                    </MenuItem>\r\n                  );\r\n                })} */}\r\n                        </TextField>\r\n                      );\r\n                    }}\r\n                    rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"period\"\r\n                    control={control}\r\n                    defaultValue={period}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Period\"\r\n                          id=\"margin-normal\"\r\n                          name=\"period\"\r\n                          defaultValue={period}\r\n                          className={classes.textField}\r\n                          onChange={handleChange}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                  <Controller\r\n                    name=\"date\"\r\n                    control={control}\r\n                    defaultValue={date}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Date\"\r\n                          type=\"date\"\r\n                          id=\"margin-normal\"\r\n                          name=\"date\"\r\n                          defaultValue={date}\r\n                          className={classes.textField}\r\n                          onChange={handleChange}\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"bank_name\"\r\n                    control={control}\r\n                    defaultValue={bank_name}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Bank Name\"\r\n                          id=\"margin-normal\"\r\n                          name=\"bank_name\"\r\n                          defaultValue={bank_name}\r\n                          className={classes.textField}\r\n                          onChange={handleChange}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                  <Controller\r\n                    name=\"bank_acno\"\r\n                    control={control}\r\n                    defaultValue={bank_acno}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Bank AC No\"\r\n                          id=\"margin-normal\"\r\n                          name=\"bank_acno\"\r\n                          value={bank_acno}\r\n                          className={classes.textField}\r\n                          onChange={handleChange}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"tap_amount\"\r\n                    control={control}\r\n                    defaultValue={tap_amount}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"TAP Contrinution\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"tap_amount\"\r\n                          defaultValue={tap_amount}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            handleChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                  <Controller\r\n                    name=\"scp_amount\"\r\n                    control={control}\r\n                    defaultValue={scp_amount}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"SCP Contribution\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"scp_amount\"\r\n                          defaultValue={scp_amount}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            handleChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"total_earnings\"\r\n                    control={control}\r\n                    defaultValue={total_earnings}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Total Earnings\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"total_earnings\"\r\n                          value={total_earnings}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            handleChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                  <Controller\r\n                    name=\"total_deductions\"\r\n                    control={control}\r\n                    defaultValue={total_deductions}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Total Deductions\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"total_deductions\"\r\n                          value={total_deductions}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            handleChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"basic_pay\"\r\n                    control={control}\r\n                    defaultValue={basic_pay}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Basic Pay\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"basic_pay\"\r\n                          value={basic_pay}\r\n                          className={classes.textField}\r\n                          onChange={handleChange}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                          // onChange={(e) => {\r\n                          //   handleChange(parseInt(e.target.value, 10));\r\n                          // }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                  <Controller\r\n                    name=\"nett_pay\"\r\n                    control={control}\r\n                    defaultValue={nett_pay}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Nett Pay\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"nett_pay\"\r\n                          value={nett_pay}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            handleChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n                        ></TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  onClick={calc_totals}\r\n                >\r\n                  Calc <Icon className={classes.rightIcon}>send</Icon>\r\n                </Button>\r\n              </Grid>\r\n              <Divider className={classes.divider} />\r\n            </form>\r\n          </CardLayout2>\r\n        </Grid>\r\n        <div>\r\n          <Grid container alignItems=\"center\" className={classes.grid}>\r\n            <Grid item xs={6} md={8} lg={6}>\r\n              <div>\r\n                <CardLayout\r\n                  title=\"Earnings\"\r\n                  handleClick={handleEarningsDialogOpen}\r\n                >\r\n                  <Payslip_ViewEarnings />\r\n                </CardLayout>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={6} md={8} lg={6}>\r\n              <div>\r\n                <CardLayout\r\n                  title=\"Deductions\"\r\n                  handleClick={handleDeductionsDialogOpen}\r\n                >\r\n                  <Payslip_ViewDeductions />\r\n                </CardLayout>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <Divider className={classes.divider} />\r\n        <CustomDialog\r\n          isOpen={isEarningsDialogOpen}\r\n          handleClose={handleEarningsDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <Payslip_Earnings\r\n            setEarningsdata={setEarningsdata}\r\n            earningsdata={earningsdata}\r\n            oldEarningsdata={oldEarningsdata}\r\n            handleDialogClose={handleEarningsDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isDeductionsDialogOpen}\r\n          handleClose={handleDeductionsDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <Payslip_Deductions\r\n            setDeductionsdata={setDeductionsdata}\r\n            deductionsdata={deductionsdata}\r\n            oldDeductionsdata={oldDeductionsdata}\r\n            handleDialogClose={handleDeductionsDialogClose}\r\n          />\r\n        </CustomDialog>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  divider: {\r\n    padding: 4,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n  grid: {\r\n    padding: theme.spacing(3, 2),\r\n    // justifyContent: \"center\",\r\n  },\r\n  box: {\r\n    height: 100,\r\n    display: \"flex\",\r\n    border: \"1px solid black\",\r\n    padding: 8,\r\n  },\r\n}));\r\n\r\nexport default PayslipForm;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\ModalDialog.js",[],["1002","1003"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\SigninForm.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\DashboardMain.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\SingleDailyAllowsDetls.js",["1004"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst ToolbarHeader = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Toolbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SingleDailyAllowsDetls = ({ title }) => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n\r\n      <div className={classes.appBarSpacer}>\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* <Grid item xs={12} md={8} lg={9}> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Link to=\"/batchdailyallowances\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n                <div>\r\n                  {/* <ToolbarHeader title={title} /> */}\r\n\r\n                  <DailyAllowsDetlsTable />\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    border: \"1px solid\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport default SingleDailyAllowsDetls;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowsDetlsTable.js",["1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Icon, Button } from \"@material-ui/core\";\r\nimport {\r\n  selector,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useRecoilValueLoadable,\r\n  useRecoilStateLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  empidState,\r\n} from \"./data/atomdata\";\r\nimport { fetchDailyAllowsDetlsSelector } from \"./data/selectordata\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  { title: \"District\", field: \"district\" },\r\n  { title: \"Operation Type\", field: \"typeoperation\" },\r\n  { title: \"Client\", field: \"client\" },\r\n  { title: \"Location/Rig\", field: \"location\" },\r\n  { title: \"Ticket No/Job No\", field: \"jobno\" },\r\n  { title: \"Crew Operation\", field: \"crewoperation\" },\r\n  {\r\n    title: \"Job Bonus\",\r\n    field: \"jobbonus\",\r\n    type: \"currency\",\r\n    cellStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n    headerStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n  },\r\n  {\r\n    title: \"Per Diem\",\r\n    field: \"perdiem\",\r\n    type: \"currency\",\r\n    cellStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n    headerStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n  },\r\n];\r\n\r\nexport default function DailyAllowsDetlsTable({\r\n  setAllowsdata,\r\n  allowsdata,\r\n  handleDialogClose,\r\n}) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  // const [allowsDetlsTable, setAllowsDetlsTable] =\r\n  // useRecoilState(allowsDataDetlsState);\r\n  //console.log(\"detlstable\", singlebatch_dailyallowsdetl);\r\n  //const [allowsDetlsdata, setAllowsDetilsdata] = useRecoilStateLoadable(fetchDailyAllowsDetlsSelector);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  const allows_empid = useRecoilValue(empidState);\r\n  const {\r\n    dailyallowsdetls,\r\n    addDailyAllowsDetl,\r\n    dailyallowsdetls_loading,\r\n    updateDailyAllowsDetl,\r\n    deleteDailyAllowsDetl,\r\n    getSingleBatchDailyAllowsDetl,\r\n    singlebatch_dailyallowsdetl,\r\n    singlebatch_dailyallowsdetl_loading,\r\n    dailyallowance_period,\r\n    single_dailyallowance,\r\n    editDailyAllowanceID,\r\n  } = useDailyAllowancesContext();\r\n\r\n  useEffect(() => {\r\n    getSingleBatchDailyAllowsDetl(editDailyAllowanceID, allows_period);\r\n  }, []);\r\n\r\n  // const add_DailyAllowsDetl = async (data) => {\r\n  //   console.log(\"add\", data);\r\n  //   const { description, amount } = data;\r\n  //   addDailyAllowsDetl({\r\n  //     description: description,\r\n  //     amount: amount,\r\n  //     name: single_dailyallowance.name,\r\n  //     empid: single_dailyallowance.empid,\r\n  //     period: dailyallowance_period,\r\n  //   });\r\n  // };\r\n\r\n  // const delete_DailyAllowance = (data) => {\r\n  //   const { id } = data;\r\n  //   deleteDailyAllowsDetl(id);\r\n  //   //update_Daily Allowances Details;\r\n  //   getSingleBatchDailyAllowsDetl(\r\n  //     single_dailyallowance.empid,\r\n  //     dailyallowance_period\r\n  //   );\r\n  // };\r\n\r\n  const Save_Allowsdata = () => {\r\n    // delete unwanted data\r\n    singlebatch_dailyallowsdetl.forEach((row) => {\r\n      const { id, rec_id, name } = row;\r\n      const res = allowsdata.find((r) => r.rec_id === rec_id);\r\n      if (!res) {\r\n        deleteDailyAllowsDetl(id);\r\n      }\r\n    });\r\n\r\n    //add or update new data\r\n    {\r\n      allowsdata.forEach((data) => {\r\n        const {\r\n          id,\r\n          date,\r\n          district,\r\n          typeoperation,\r\n          client,\r\n          location,\r\n          jobno,\r\n          crewoperation,\r\n          jobbonus,\r\n          perdiem,\r\n        } = data;\r\n        if (id) {\r\n          const { id, rec_id, tableData, ...fields } = data;\r\n          updateDailyAllowsDetl({ id, ...fields });\r\n        } else {\r\n          addDailyAllowsDetl({\r\n            date,\r\n            district,\r\n            typeoperation,\r\n            client,\r\n            location,\r\n            jobno,\r\n            crewoperation,\r\n            jobbonus,\r\n            perdiem,\r\n            empid: editDailyAllowanceID,\r\n            period: dailyallowance_period,\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  if (dailyallowsdetls_loading) {\r\n    return <div>\r\n      <h2>Loading.... daily site allowances</h2>\r\n    </div>\r\n  }\r\n    return (\r\n      <div className={classes.root}>\r\n        {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n        <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n          <MaterialTable\r\n            columns={columns}\r\n            data={singlebatch_dailyallowsdetl}\r\n            title=\"Daily Allowances Details\"\r\n            editable={{\r\n              onRowAdd: (newData) =>\r\n                new Promise((resolve, reject) => {\r\n                  setTimeout(() => {\r\n                    setAllowsdata([...allowsdata, newData]);\r\n                    resolve();\r\n                  }, 1000);\r\n                }),\r\n              onRowUpdate: (newData, oldData) =>\r\n                new Promise((resolve, reject) => {\r\n                  setTimeout(() => {\r\n                    const dataUpdate = [...singlebatch_dailyallowsdetl];\r\n                    const index = oldData.tableData.id;\r\n                    dataUpdate[index] = newData;\r\n                    //setAllowsDetlsTable([...dataUpdate]);\r\n                    //editable = dataUpdate;\r\n                    resolve();\r\n                  }, 1000);\r\n                }),\r\n              onRowDelete: (oldData) =>\r\n                new Promise((resolve, reject) => {\r\n                  setTimeout(() => {\r\n                    //const dataDelete = [...allowsDetlsTable];\r\n                    const index = oldData.tableData.id;\r\n                    //dataDelete.splice(index, 1);\r\n                    //setAllowsDetlsTable([...dataDelete]);\r\n\r\n                    resolve();\r\n                  }, 1000);\r\n                }),\r\n            }}\r\n            options={{\r\n              filtering: true,\r\n              headerStyle: {\r\n                backgroundColor: \"orange\",\r\n                color: \"primary\",\r\n              },\r\n              showTitle: true,\r\n            }}\r\n            components={{\r\n              Toolbar: (props) => (\r\n                <div>\r\n                  <MTableToolbar {...props} />\r\n                  <div style={{ padding: \"5px 10px\" }}>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      className={classes.button}\r\n                      onClick={Save_Allowsdata}\r\n                    >\r\n                      Update <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n    width: 1500,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTable2.js",["1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n    headCells,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell> */}\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst ToolbarHeader = ({\r\n  title,\r\n  add_DailyAllowance,\r\n  build_DailyAllowance,\r\n  loadDailyAllowances,\r\n  period,\r\n}) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  let history = useHistory();\r\n\r\n  const handleBuild = () => {\r\n    build_DailyAllowance();\r\n    loadDailyAllowances();\r\n  };\r\n\r\n  return (\r\n    <Toolbar>\r\n      <Typography\r\n        className={classes.title}\r\n        variant=\"h6\"\r\n        id=\"tableTitle\"\r\n        component=\"div\"\r\n      >\r\n        `{title} (Period: {period} )`\r\n      </Typography>\r\n      <Tooltip title=\"build records\">\r\n        <IconButton aria-label=\"filter list\" onClick={handleBuild}>\r\n          <BuildOutlinedIcon fontSize=\"medium\" color=\"primary\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip title=\"add record\">\r\n        <IconButton aria-label=\"filter list\" onClick={add_DailyAllowance}>\r\n          <AddIcon fontSize=\"large\" color=\"primary\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default function DailyAllowancesTable({ title, headCells }) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const {\r\n    dailyallowances,\r\n    addDailyAllowance,\r\n    dailyallowances_loading,\r\n    updateDailyAllowance,\r\n    deleteDailyAllowance,\r\n    loadDailyAllowances,\r\n    getSingleDailyAllowance,\r\n    setEditDailyAllowanceID,\r\n    setIsDailyAllowanceEditingOn,\r\n    setIsDailyAllowanceEditingOff,\r\n    resetSingleDailyAllowance,\r\n    dailyallowance_period,\r\n  } = useDailyAllowancesContext();\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n\r\n  useEffect(() => {\r\n    loadDailyAllowances();\r\n  }, []);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = dailyallowances.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(rowsPerPage, dailyallowances.length - page * rowsPerPage);\r\n\r\n  const update_DailyAllowance = async (id) => {\r\n    setEditDailyAllowanceID(id);\r\n    setIsDailyAllowanceEditingOn();\r\n    getSingleDailyAllowance(id);\r\n    history.push(\"/singledailyallowance\");\r\n  };\r\n\r\n  const add_DailyAllowance = async () => {\r\n    resetSingleDailyAllowance();\r\n    setEditDailyAllowanceID(\"\");\r\n    setIsDailyAllowanceEditingOff();\r\n    history.push(\"/singledailyallowance\");\r\n  };\r\n\r\n  const delete_DailyAllowance = (id) => {\r\n    setEditDailyAllowanceID(id);\r\n    deleteDailyAllowance(id);\r\n    loadDailyAllowances();\r\n  };\r\n  //name, period, location, manager_name, status, no_of_days, amount\r\n\r\n  const build_DailyAllowance = () => {\r\n    loadEmployees();\r\n    loadDailyAllowances();\r\n    const allowdata = dailyallowances.map((e) => e.name);\r\n    console.log(allowdata.length);\r\n    {\r\n      employees.map((emp) => {\r\n        const { name } = emp;\r\n        const data = {\r\n          name: name,\r\n          period: \"2021-01\",\r\n          location: \"\",\r\n          manager_name: \"\",\r\n          status: \"Pending\",\r\n          no_of_days: 0,\r\n          amount: 0,\r\n        };\r\n        const res = allowdata.includes(emp.name);\r\n        if (!res) {\r\n          console.log(\"add\");\r\n          addDailyAllowance({ ...data });\r\n        }\r\n      });\r\n    }\r\n    //loadDailyAllowances();\r\n  };\r\n\r\n  if (dailyallowances_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ToolbarHeader\r\n        title=\"Daily Allowances Claims Applications\"\r\n        add_DailyAllowance={add_DailyAllowance}\r\n        build_DailyAllowance={build_DailyAllowance}\r\n        loadDailyAllowances={loadDailyAllowances}\r\n        period={dailyallowance_period}\r\n      />\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                // onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={dailyallowances.length}\r\n                headCells={headCells}\r\n              />\r\n              <TableBody>\r\n                {stableSort(dailyallowances, getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const isItemSelected = isSelected(row.name);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        // onClick={(event) => handleClick(event, row.name)}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={row.name}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        {/* <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            checked={isItemSelected}\r\n                            inputProps={{ \"aria-labelledby\": labelId }}\r\n                          />\r\n                        </TableCell> */}\r\n\r\n                        <TableCell align=\"left\" padding=\"none\">\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\" padding=\"none\">\r\n                          {row.period}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\" padding=\"none\">\r\n                          {row.location}\r\n                        </TableCell>\r\n\r\n                        <TableCell align=\"middle\" padding=\"none\">\r\n                          {row.amount}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\" padding=\"none\">\r\n                          {row.status}\r\n                        </TableCell>\r\n                        <div>\r\n                          <TableCell align=\"right\">\r\n                            <CreateIcon\r\n                              color=\"primary\"\r\n                              onClick={() => update_DailyAllowance(row.id)}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            <DeleteIcon\r\n                              color=\"primary\"\r\n                              onClick={() => delete_DailyAllowance(row.id)}\r\n                            />\r\n                          </TableCell>\r\n                        </div>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={dailyallowances.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        <FormControlLabel\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Dense padding\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// EnhancedTableHead.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n//   numSelected: PropTypes.number.isRequired,\r\n//   onRequestSort: PropTypes.func.isRequired,\r\n//   onSelectAllClick: PropTypes.func.isRequired,\r\n//   order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n//   orderBy: PropTypes.string.isRequired,\r\n//   rowCount: PropTypes.number.isRequired,\r\n// };\r\n// ToolbarHeader.propTypes = {\r\n//   numSelected: PropTypes.number.isRequired,\r\n// };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n    marginLeft: 20,\r\n    height: 350,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n",["1037","1038"],"D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CustomDialog.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\helpers\\AlertDialog.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\AllowancesTable.js",["1039"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n];\r\n\r\nexport default function UpdateAllowances() {\r\n   const classes = useStyles();\r\n  const {\r\n    loadAllowances,\r\n    allowances,\r\n    allowances_loading,\r\n    addAllowance,\r\n    deleteAllowance,\r\n    updateAllowance,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    loadAllowances();\r\n  }, []);\r\n\r\n  const update_Allowance = (data) => {\r\n    updateAllowance({ id: data.id, ...data });\r\n    loadAllowances();\r\n  };\r\n\r\n  const add_Allowance = async (data) => {\r\n    addAllowance(data);\r\n    loadAllowances();\r\n  };\r\n\r\n  const delete_Allowance = (data) => {\r\n    const { id } = data;\r\n    deleteAllowance(id);\r\n    loadAllowances();\r\n  };\r\n\r\n  if (allowances_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Allowances</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={allowances}\r\n          title=\"Allowances\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Allowance(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Allowance(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Allowance(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DeductionsTable.js",["1040"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n];\r\n\r\nexport default function UpdateDeductions() {\r\n\r\n  const classes = useStyles();\r\n  const {\r\n    loadDeductions,\r\n    deductions,\r\n    deductions_loading,\r\n    addDeduction,\r\n    deleteDeduction,\r\n    updateDeduction,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    loadDeductions();\r\n  }, []);\r\n\r\n  const update_Deduction = (data) => {\r\n    updateDeduction({ id: data.id, ...data });\r\n    loadDeductions();\r\n  };\r\n\r\n  const add_Deduction = (data) => {\r\n    addDeduction(data);\r\n    loadDeductions();\r\n  };\r\n\r\n  const delete_Deduction = (data) => {\r\n    const { id } = data;\r\n    deleteDeduction(id);\r\n    loadDeductions();\r\n  };\r\n\r\n  if (deductions_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Deductions</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={deductions}\r\n          title=\"Deductions\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Deduction(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Deduction(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Deduction(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DepartmentsTable.js",["1041","1042","1043","1044","1045"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { fetchDepartmentsSelector } from \"./data/selectordata\";\r\nimport { deptDataState } from \"./data/atomdata\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n];\r\n\r\nexport default function UpdateDepartments() {\r\n  const classes = useStyles();\r\n  const [deptdata, setDeptdata] = useRecoilState(deptDataState);\r\n  const deptDetails = useRecoilValueLoadable(fetchDepartmentsSelector);\r\n  const { state, contents } = deptDetails;\r\n  const {\r\n    loadDepartments,\r\n    departments,\r\n    departments_loading,\r\n    addDepartment,\r\n    deleteDepartment,\r\n    updateDepartment,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    loadDepartments();\r\n  }, []);\r\n\r\n  const update_Department = (data) => {\r\n    updateDepartment({ id: data.id, ...data });\r\n    loadDepartments();\r\n  };\r\n\r\n  const add_Department = (data) => {\r\n    addDepartment(data);\r\n    loadDepartments();\r\n  };\r\n\r\n  const delete_Department = (data) => {\r\n    const { id } = data;\r\n    deleteDepartment(id);\r\n    loadDepartments();\r\n  };\r\n\r\n  if (departments_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.....Designations</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={departments}\r\n          title=\"Departments\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Department(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Department(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Department(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DesignationsTable.js",["1046"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n];\r\n\r\nexport default function UpdateDesignations() {\r\n \r\n  const classes = useStyles();\r\n  const {\r\n    loadDesignations,\r\n    designations,\r\n    designations_loading,\r\n    addDesignation,\r\n    deleteDesignation,\r\n    updateDesignation,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    loadDesignations();\r\n  }, []);\r\n\r\n  const update_Designation = (data) => {\r\n    updateDesignation({ id: data.id, ...data });\r\n    loadDesignations();\r\n  };\r\n\r\n  const add_Designation = (data) => {\r\n    addDesignation(data);\r\n    loadDesignations();\r\n  };\r\n\r\n  const delete_Designation = (data) => {\r\n    const { id } = data;\r\n    deleteDesignation(id);\r\n    loadDesignations();\r\n  };\r\n\r\n  if (designations_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.....Designations</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={designations}\r\n          title=\"Designatioms\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  add_Designation(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  update_Designation(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  delete_Designation(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CardLayout.js",["1047","1048","1049","1050","1051","1052","1053"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\n\r\nconst CardLayout = ({ title, children, handleClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        action={\r\n          <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n            <EditIcon />\r\n          </IconButton>\r\n        }\r\n        title={title}\r\n      />\r\n      <CardContent>{children}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"500\",\r\n  },\r\n  card: {\r\n    margin: \"15px 10px\",\r\n    padding: 0,\r\n    border: \"solid 1px black\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"dark\",\r\n  },\r\n  small: {\r\n    gridRowEnd: \"span 26\",\r\n  },\r\n  medium: {\r\n    gridRowEnd: \"span 33\",\r\n  },\r\n  large: {\r\n    gridRowEnd: \"span 45\",\r\n  },\r\n}));\r\n\r\nexport default CardLayout;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example2.js",["1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\Example3.js",["1069","1070","1071"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\EmployeeView.js",["1072"],"D:\\react-myprojects\\hrms-airtable\\src\\context\\trainings_context.js",["1073","1074","1075","1076","1077","1078","1079","1080","1081","1082"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/trainings_reducer\";\r\nimport { trainings_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITTRAININGID,\r\n  SET_ISTRAININGEDITING_ON,\r\n  SET_ISTRAININGEDITING_OFF,\r\n  SET_SINGLETRAINING,\r\n  GET_TRAININGS_BEGIN,\r\n  GET_TRAININGS_SUCCESS,\r\n  GET_TRAININGS_ERROR,\r\n  GET_SINGLE_TRAINING_BEGIN,\r\n  GET_SINGLE_TRAINING_SUCCESS,\r\n  GET_SINGLE_TRAINING_ERROR,\r\n  GET_SINGLEBATCH_TRAINING_BEGIN,\r\n  GET_SINGLEBATCH_TRAINING_SUCCESS,\r\n  GET_SINGLEBATCH_TRAINING_ERROR,\r\n  ADD_TRAINING_BEGIN,\r\n  ADD_TRAINING_SUCCESS,\r\n  ADD_TRAINING_ERROR,\r\n  DELETE_TRAINING_BEGIN,\r\n  DELETE_TRAINING_SUCCESS,\r\n  DELETE_TRAINING_ERROR,\r\n  UPDATE_TRAINING_BEGIN,\r\n  UPDATE_TRAINING_SUCCESS,\r\n  UPDATE_TRAINING_ERROR,\r\n  RESET_SINGLE_TRAINING,\r\n  RESET_TABLES,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isTrainingEditing: false,\r\n  alerttraining: { show: false, msg: \"\", type: \"\" },\r\n  editTrainingID: null,\r\n  trainings_loading: false,\r\n  trainings_error: false,\r\n  trainings: [],\r\n  single_training_loading: false,\r\n  single_training_error: false,\r\n  single_training: {},\r\n  singlebatch_training_loading: false,\r\n  singlebatch_training_error: false,\r\n  singlebatch_training: {},\r\n  delete_training_loading: false,\r\n  delete_training_error: false,\r\n  update_training_loading: false,\r\n  update_training_error: false,\r\n  add_training_loading: false,\r\n  add_training_error: false,\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n};\r\n\r\nconst TrainingsContext = React.createContext();\r\n\r\nexport const TrainingsProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const loadTrainings = async () => {\r\n    dispatch({ type: GET_TRAININGS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(trainings_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const trainings = await res.json();\r\n      dispatch({ type: GET_TRAININGS_SUCCESS, payload: trainings });\r\n    } catch (error) {\r\n      dispatch({ type: GET_TRAININGS_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsTrainingEditingOn = () => {\r\n    dispatch({ type: SET_ISTRAININGEDITING_ON });\r\n  };\r\n\r\n  const setIsTrainingEditingOff = () => {\r\n    dispatch({ type: SET_ISTRAININGEDITING_OFF });\r\n  };\r\n\r\n  const resetSingleTraining = () => {\r\n    dispatch({ type: RESET_SINGLE_TRAINING });\r\n  };\r\n\r\n  const setEditTrainingID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITTRAININGID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleTraining = async (id) => {\r\n    dispatch({ type: GET_SINGLE_TRAINING_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${trainings_url}?id=${id}`);\r\n      const singletraining = data;\r\n      dispatch({ type: GET_SINGLE_TRAINING_SUCCESS, payload: singletraining });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_TRAINING_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleBatchTraining = async (empid) => {\r\n    dispatch({ type: GET_SINGLEBATCH_TRAINING_BEGIN });\r\n    try {\r\n      const res = await fetch(`${trainings_url}?fv=${empid}`);\r\n      //console.log(`${family_url}?fv=${linkid}`);\r\n      const singlebatchtraining = await res.json();\r\n\r\n      dispatch({\r\n        type: GET_SINGLEBATCH_TRAINING_SUCCESS,\r\n        payload: singlebatchtraining,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLEBATCH_TRAINING_ERROR });\r\n    }\r\n  };\r\n\r\n  const addTraining = async (data) => {\r\n    const { id, name, from_date, to_date, reason, no_of_days, status } = data;\r\n    //\r\n    dispatch({ type: ADD_TRAINING_BEGIN });\r\n    try {\r\n      await fetch(trainings_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_TRAINING_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_TRAINING_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateTraining = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_TRAINING_BEGIN });\r\n    try {\r\n      await fetch(trainings_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_TRAINING_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_TRAINING_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteTraining = async (id) => {\r\n    dispatch({ type: DELETE_TRAINING_BEGIN });\r\n    try {\r\n      await fetch(trainings_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_TRAINING_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_TRAINING_ERROR });\r\n    }\r\n  };\r\n  return (\r\n    <TrainingsContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadTrainings,\r\n        addTraining,\r\n        updateTraining,\r\n        deleteTraining,\r\n        getSingleTraining,\r\n        getSingleBatchTraining,\r\n        setEditTrainingID,\r\n        setIsTrainingEditingOn,\r\n        setIsTrainingEditingOff,\r\n        resetSingleTraining,\r\n      }}\r\n    >\r\n      {children}\r\n    </TrainingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTrainingsContext = () => {\r\n  return useContext(TrainingsContext);\r\n};\r\n","D:\\react-myprojects\\hrms-airtable\\src\\reducers\\trainings_reducer.js",["1083","1084"],"import {\r\n  SET_EDITTRAININGID,\r\n  SET_ISTRAININGEDITING_ON,\r\n  SET_ISTRAININGEDITING_OFF,\r\n  SET_SINGLETRAINING,\r\n  GET_TRAININGS_BEGIN,\r\n  GET_TRAININGS_SUCCESS,\r\n  GET_TRAININGS_ERROR,\r\n  GET_SINGLE_TRAINING_BEGIN,\r\n  GET_SINGLE_TRAINING_SUCCESS,\r\n  GET_SINGLE_TRAINING_ERROR,\r\n  GET_SINGLEBATCH_TRAINING_BEGIN,\r\n  GET_SINGLEBATCH_TRAINING_SUCCESS,\r\n  GET_SINGLEBATCH_TRAINING_ERROR,\r\n  ADD_TRAINING_BEGIN,\r\n  ADD_TRAINING_SUCCESS,\r\n  ADD_TRAINING_ERROR,\r\n  DELETE_TRAINING_BEGIN,\r\n  DELETE_TRAINING_SUCCESS,\r\n  DELETE_TRAINING_ERROR,\r\n  UPDATE_TRAINING_BEGIN,\r\n  UPDATE_TRAINING_SUCCESS,\r\n  UPDATE_TRAINING_ERROR,\r\n  RESET_SINGLE_TRAINING,\r\n  RESET_TABLES,\r\n} from \"../actions\";\r\n\r\nconst trainings_reducer = (state, action) => {\r\n  // set training variables\r\n  if (action.type === SET_EDITTRAININGID) {\r\n    return { ...state, editTrainingID: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISTRAININGEDITING_ON) {\r\n    return { ...state, isTrainingEditing: true };\r\n  }\r\n  if (action.type === SET_ISTRAININGEDITING_OFF) {\r\n    return { ...state, isTrainingEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_TRAINING) {\r\n    return { ...state, single_training: {} };\r\n  }\r\n  // get trainings\r\n  if (action.type === GET_TRAININGS_BEGIN) {\r\n    return { ...state, trainings_loading: true };\r\n  }\r\n  if (action.type === GET_TRAININGS_SUCCESS) {\r\n    return { ...state, trainings_loading: false, trainings: action.payload };\r\n  }\r\n  if (action.type === GET_TRAININGS_ERROR) {\r\n    return { ...state, trainings_loading: false, trainings_error: true };\r\n  }\r\n\r\n  // add training\r\n  if (action.type === ADD_TRAINING_BEGIN) {\r\n    return { ...state, add_training_loading: true };\r\n  }\r\n  if (action.type === ADD_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_trainings_loading: false,\r\n      trainings: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_TRAINING_ERROR) {\r\n    return { ...state, trainings_loading: false, add_training_error: true };\r\n  }\r\n  // update trainig\r\n  if (action.type === UPDATE_TRAINING_BEGIN) {\r\n    return { ...state, update_training_loading: true };\r\n  }\r\n  if (action.type === UPDATE_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      trainings_loading: false,\r\n      single_training: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_training_loading: false,\r\n      update_training_error: true,\r\n    };\r\n  }\r\n\r\n  // delete training\r\n  if (action.type === DELETE_TRAINING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_training_loading: true,\r\n      delete_training_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_training_loading: false,\r\n      delete_training_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_training_loading: false,\r\n      delete_training_error: true,\r\n    };\r\n  }\r\n\r\n  //single training\r\n  if (action.type === GET_SINGLE_TRAINING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_training_loading: true,\r\n      single_training_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_training_loading: false,\r\n      single_training: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_training_loading: false,\r\n      single_training_error: true,\r\n    };\r\n  }\r\n\r\n  //single batch training\r\n  if (action.type === GET_SINGLEBATCH_TRAINING_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_training_loading: true,\r\n      singlebatch_training_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_TRAINING_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      singlebatch_training_loading: false,\r\n      singlebatch_training: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_TRAINING_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_training_loading: false,\r\n      singlebatch_training_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default trainings_reducer;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CardLayout2.js",["1085","1086","1087","1088","1089","1090","1091","1092"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst CardLayout2 = ({ title, children, handleClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader title={title} />\r\n      <CardContent>{children}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"500\",\r\n  },\r\n  card: {\r\n    margin: \"15px 10px\",\r\n    padding: 0,\r\n    border: \"solid 1px black\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"dark\",\r\n  },\r\n  small: {\r\n    gridRowEnd: \"span 26\",\r\n  },\r\n  medium: {\r\n    gridRowEnd: \"span 33\",\r\n  },\r\n  large: {\r\n    gridRowEnd: \"span 45\",\r\n  },\r\n}));\r\n\r\nexport default CardLayout2;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpEducations.js",["1093"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { Button, Icon, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Institution\",\r\n    field: \"institution\",\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField onChange={(e) => props.onChange(e.target.value)} type=\"date\" />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Archievement\",\r\n    field: \"archievement\",\r\n  },\r\n\r\n  { title: \"Grade\", field: \"grade\" },\r\n  {\r\n    title: \"Remark\",\r\n    field: \"remark\",\r\n  },\r\n];\r\n\r\nexport default function Emp_Educations({\r\n  educationdata,\r\n  setEducationdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  const {\r\n    singlebatcheducation,\r\n    addEducation,\r\n    deleteEducation,\r\n    updateEducation,\r\n    singlebatch_education_loading,\r\n  } = useTablesContext();\r\n\r\n  //useEffect(() => {}, [educationdata]);\r\n\r\n  const Save_EducationData = () => {\r\n    //console.log(educationdata);\r\n    // delete unwanted data\r\n    singlebatcheducation.forEach((row) => {\r\n      const { id, rec_id } = row;\r\n      const res = educationdata.find((r) => r.rec_id === rec_id);\r\n      if (!res) {\r\n        deleteEducation(id);\r\n      }\r\n    });\r\n\r\n    //add or update new data\r\n\r\n    educationdata.forEach((data) => {\r\n      const { id, institution, course, from_date, to_date, grade, remark } =\r\n        data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateEducation({ id, ...fields });\r\n      } else {\r\n        addEducation({\r\n          institution,\r\n          course,\r\n          from_date,\r\n          to_date,\r\n          grade,\r\n          remark,\r\n          empid: editEmployeeID,\r\n        });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  // const update_Education = (data) => {\r\n  //   updateEducation({ id: data.id, ...data });\r\n  //   loadSingleBatchEducation(editEmployeeID);\r\n  // };\r\n\r\n  // const add_Education = (data) => {\r\n  //   addEducation({ ...data, empid: editEmployeeID });\r\n  //   loadSingleBatchEducation(editEmployeeID);\r\n  // };\r\n\r\n  // const delete_Education = (data) => {\r\n  //   const { id } = data;\r\n  //   deleteEducation(id);\r\n  //   loadSingleBatchEducation(editEmployeeID);\r\n  // };\r\n\r\n  if (singlebatch_education_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Education</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={educationdata}\r\n          title=\"Education\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setEducationdata([...educationdata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...educationdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setEducationdata([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...educationdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setEducationdata([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_EducationData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpExperiences.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpFamily.js",["1094"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField, MenuItem } from \"@material-ui/core\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Relationship\",\r\n    field: \"relationship\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Father\">Father</MenuItem>\r\n        <MenuItem value=\"Mother\">Mother</MenuItem>\r\n        <MenuItem value=\"Daughter\">Daughter</MenuItem>\r\n        <MenuItem value=\"Son\">Son</MenuItem>\r\n        <MenuItem value=\"Son-in-law\">Son-in-law</MenuItem>\r\n        <MenuItem value=\"Daughter-in-law\">Daughter-in-law</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n  {\r\n    title: \"BIrth Date\",\r\n    field: \"birth_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Phone\",\r\n    field: \"phone\",\r\n  },\r\n  { title: \"Age\", field: \"age\", type: \"numeric\" },\r\n];\r\n\r\nexport default function Emp_Family({\r\n  familydata,\r\n  setFamilydata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    singlebatchfamily,\r\n    addFamily,\r\n    deleteFamily,\r\n    updateFamily,\r\n    singlebatch_family_loading,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {}, [familydata]);\r\n\r\n  const Save_FamilyData = () => {\r\n    // delete unwanted data\r\n    singlebatchfamily.forEach((row) => {\r\n      const { id, rec_id } = row;\r\n      const res = familydata.find((r) => r.rec_id === rec_id);\r\n      if (!res) {\r\n        deleteFamily(id);\r\n      }\r\n    });\r\n    //add or update new data\r\n\r\n    familydata.forEach((data) => {\r\n      const { id, name, relationship, birth_date, phone, age } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateFamily({ id, ...fields });\r\n      } else {\r\n        addFamily({\r\n          name,\r\n          relationship,\r\n          birth_date,\r\n          phone,\r\n          age,\r\n          empid: editEmployeeID,\r\n        });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  // const update_Family = (data) => {\r\n  //   const { id, rec_id, tableData, ...fields } = data;\r\n  //   setTimeout(() => {}, 1000);\r\n\r\n  //   updateFamily({ id, ...fields });\r\n  //   //loadSingleBatchFamily(editEmployeeID);\r\n  //   //loadSingleBatchFamily(editEmployeeID);\r\n  // };\r\n\r\n  // const add_Family = (data) => {\r\n  //   addFamily({ ...data, empid: editEmployeeID });\r\n  //   //loadSingleBatchFamily(editEmployeeID);\r\n  // };\r\n\r\n  // const delete_Family = (data) => {\r\n  //   const { id } = data;\r\n  //   deleteFamily(id);\r\n  //   //loadSingleBatchFamily(editEmployeeID);\r\n  // };\r\n\r\n  if (singlebatch_family_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Family</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={familydata}\r\n          title=\"Family\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setFamilydata([...familydata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...familydata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setFamilydata([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...familydata];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setFamilydata([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_FamilyData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n          // localization={{\r\n          //   body: {\r\n          //     dateTimePickerLocalization: enGB,\r\n          //   },\r\n          // }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpPersonal.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpTrainings.js",["1095"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField } from \"@material-ui/core\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTrainingsContext } from \"../context/trainings_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Institute\",\r\n    field: \"institute\",\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Expiry Date\",\r\n    field: \"expiry_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || new Date()}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function Emp_Training({\r\n  trainingdata,\r\n  setTrainingdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    getSingleBatchTraining,\r\n    singlebatch_training,\r\n    addTraining,\r\n    deleteTraining,\r\n    updateTraining,\r\n    singlebatch_training_loading,\r\n  } = useTrainingsContext();\r\n\r\n  useEffect(() => {}, [trainingdata]);\r\n\r\n  const Save_TrainingData = () => {\r\n    //console.log(trainingdata);\r\n    // delete unwanted data\r\n    singlebatch_training.forEach((row) => {\r\n      const { id, rec_id } = row;\r\n      const res = trainingdata.find((r) => r.rec_id === rec_id);\r\n      if (!res) {\r\n        deleteTraining(id);\r\n      }\r\n    });\r\n\r\n    //add or update new data\r\n\r\n    trainingdata.forEach((data) => {\r\n      const { id, institute, course, from_date, to_date, expiry_date } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateTraining({ id, ...fields });\r\n      } else {\r\n        addTraining({\r\n          institute,\r\n          course,\r\n          from_date,\r\n          to_date,\r\n          expiry_date,\r\n          empid: editEmployeeID,\r\n        });\r\n      }\r\n    });\r\n\r\n    getSingleBatchTraining(editEmployeeID);\r\n    handleDialogClose();\r\n  };\r\n\r\n  if (singlebatch_training_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Training</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={trainingdata}\r\n          title=\"Training\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setTrainingdata([...trainingdata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...trainingdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setTrainingdata([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...trainingdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setTrainingdata([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_TrainingData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewTrainings.js",["1096"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTrainingsContext } from \"../context/trainings_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Institute\",\r\n    field: \"institute\",\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    filtering: false,\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    filtering: false,\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  {\r\n    title: \"Expiry Date\",\r\n    field: \"expiry_date\",\r\n    type: \"date\",\r\n    filtering: false,\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n];\r\n\r\nexport default function Emp_ViewFamily() {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    singlebatch_training,\r\n    getSingleBatchTraining,\r\n    singlebatch_training_loading,\r\n  } = useTrainingsContext();\r\n\r\n  useEffect(() => {\r\n    getSingleBatchTraining(editEmployeeID);\r\n  }, []);\r\n\r\n  if (singlebatch_training_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Trainings</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatch_training}\r\n          title=\"\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewLeaves.js",["1097"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    filtering: false,\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    filtering: false,\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    field: \"Reason\",\r\n  },\r\n  {\r\n    title: \"No of Days\",\r\n    field: \"no_of_days\",\r\n    type: \"numeric\",\r\n    filtering: false,\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n  },\r\n];\r\n\r\nexport default function Emp_ViewFamily() {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const { singlebatch_leave, getSingleBatchLeave, singlebatch_leave_loading } =\r\n    useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    getSingleBatchLeave(editEmployeeID);\r\n  }, []);\r\n\r\n  if (singlebatch_leave_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Leaves</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatch_leave}\r\n          title=\"\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewFamily.js",["1098"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    filtering: false,\r\n  },\r\n  {\r\n    title: \"Relationship\",\r\n    field: \"relationship\",\r\n  },\r\n  {\r\n    title: \"BIrth Date\",\r\n    field: \"birth_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    filtering: false,\r\n  },\r\n  {\r\n    title: \"Phone\",\r\n    field: \"phone\",\r\n  },\r\n];\r\n\r\nexport default function Emp_ViewFamily() {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    loadSingleBatchFamily,\r\n     singlebatchfamily,\r\n     singlebatch_family_loading,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    loadSingleBatchFamily(editEmployeeID);\r\n  }, []);\r\n  \r\n  if (singlebatch_family_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Family</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatchfamily}\r\n          title=\"Family\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewExperiences.js",["1099"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Company\",\r\n    field: \"company\",\r\n  },\r\n  {\r\n    title: \"Location\",\r\n    field: \"location\",\r\n  },\r\n  {\r\n    title: \"Position\",\r\n    field: \"position\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n];\r\n\r\nexport default function Emp_Experiences({\r\n  experiencedata,\r\n  setExperiencedata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    loadSingleBatchExperience,\r\n    singlebatchexperience,\r\n    singlebatch_experience_loading,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    //console.log(linkid);\r\n    loadSingleBatchExperience(editEmployeeID);\r\n  }, []);\r\n\r\n  if (singlebatch_experience_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Experience</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatchexperience}\r\n          title=\"Experience\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\EmpViewEducations.js",["1100"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Institution\",\r\n    field: \"institution\",\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n];\r\n\r\nexport default function Emp_Educations() {\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  const {\r\n    loadSingleBatchEducation,\r\n    singlebatcheducation,\r\n    singlebatch_education_loading,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    loadSingleBatchEducation(editEmployeeID);\r\n  }, []);\r\n\r\n  if (singlebatch_education_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Education</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatcheducation}\r\n          title=\"Experience\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example4.js",["1101","1102","1103","1104","1105","1106","1107","1108","1109","1110"],"import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport MaterialTable from \"material-table\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  atom,\r\n  selector,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useSetRecoilState,\r\n  useRecoilValueLoadable,\r\n  useRecoilStateLoadable,\r\n} from \"recoil\";\r\n// import { useRecoilValue, useSetRecoilState, useRecoilState } from \"recoil\";\r\n// import { departmentsSelector } from \"../helpers/Recoilhelpers\";\r\nimport { departments_url } from \"../utils/constants\";\r\nimport { fetchDepartmentsSelector } from \"./data/selectordata\";\r\n\r\nconst url = `https://reqres.in/api/users?page=1`;\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    filtering: false,\r\n  },\r\n  {\r\n    title: \"ID\",\r\n    field: \"id\",\r\n  },\r\n\r\n  {\r\n    title: \"Rec ID\",\r\n    field: \"rec_id\",\r\n    type: \"numeric\",\r\n  },\r\n];\r\n\r\nexport const userdatastate = atom({\r\n  key: \"userdata\",\r\n  default: [],\r\n  dangerouslyAllowMutability: true,\r\n});\r\n\r\nconst fetchUserDetails = selector({\r\n  key: \"userDetailsSelector\",\r\n  get: async () => {\r\n    const { data } = await axios\r\n      .get(departments_url)\r\n      .then((res) => {\r\n        const data = res.data;\r\n        console.log(data);\r\n        return data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    return data;\r\n  },\r\n});\r\n\r\nconst fetchUserDetailsdata = selector({\r\n  key: \"userDetailsSelectordata\",\r\n  get: async () => {\r\n    const { data } = await axios.get(departments_url);\r\n    return data;\r\n  },\r\n});\r\n\r\nconst Example = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [userdata, setUserdata] = useRecoilState(fetchUserDetailsdata);\r\n  //const [userDetails, setUserDetails] =\r\n  //  useRecoilStateLoadable(fetchUserDetailsdata);\r\n  //   fetchDepartmentsSelector\r\n  // );\r\n\r\n  // const { state, contents } = userDetails;\r\n\r\n  // console.log(\r\n  //   \"userdetails\",\r\n  //   userDetails,\r\n  //   Object.isFrozen(userDetails.contents),\r\n  //   Object.isExtensible(userDetails.contents)\r\n  // );\r\n  console.log(\r\n    \"userdata\",\r\n    userdata,\r\n    Object.isFrozen(userdata),\r\n    Object.isExtensible(userdata)\r\n  );\r\n  // if (userDetails.state === \"hasError\") {\r\n  //   return <div> There is some problem! </div>;\r\n  // }\r\n\r\n  // if (state === \"loading\") {\r\n  //   return <div>Its loading</div>;\r\n  // }\r\n\r\n  // if (state === \"hasValue\") {\r\n\r\n  return (\r\n    <React.Suspense fallback={<h1>Loading profile...</h1>}>\r\n      <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n        <MaterialTable columns={columns} data={userdata} title=\"Family\" />\r\n      </Paper>\r\n    </React.Suspense>\r\n  );\r\n};\r\n\r\n// const DetailsWithSuspense = () => {\r\n//   const userDetails = useRecoilValue(fetchUserDetails);\r\n//   const { data } = userDetails;\r\n\r\n//   return data.map((item) => (\r\n//     <div key={item.id}>\r\n//       <p>{`Email: ${item.email} Name: ${item.first_name} ${item.last_name}`}</p>\r\n//     </div>\r\n//   ));\r\n// };\r\n\r\n// const Example = () => {\r\n//   const classes = useStyles();\r\n//   const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n//   const departsdata = useRecoilValue(departmentsSelector);\r\n\r\n//   return (\r\n//     <div>\r\n//       <DetailsWithoutSuspense />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n}));\r\n\r\nexport default Example;\r\n",["1111","1112"],"D:\\react-myprojects\\hrms-airtable\\src\\helpers\\Recoilhelpers.js",[],["1113","1114"],"D:\\react-myprojects\\hrms-airtable\\src\\components\\data\\selectordata.js",["1115","1116","1117"],"import axios from \"axios\";\r\nimport { selector, useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport {\r\n  empidState,\r\n  allowsPeriodState,\r\n  allowsDataDetlsState,\r\n} from \"./atomdata\";\r\nimport { departments_url } from \"../../utils/constants\";\r\nimport {\r\n  dailyallowances_url,\r\n  dailyallowsdetls_url,\r\n} from \"../../utils/constants\";\r\n\r\nexport const fetchDepartmentsSelector = selector({\r\n  key: \"departmentsSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const res = await fetch(departments_url);\r\n      const data = await res.json();\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n\r\nexport const fetchDailyAllowancesSelector = selector({\r\n  key: \"dailyallowancesSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const period = get(allowsPeriodState);\r\n      const { data } = await axios.get(`${dailyallowances_url}?fv=${period}`);\r\n      const res = await data;\r\n\r\n      return res;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n\r\nexport const fetchDailyAllowsDetlsSelector = selector({\r\n  key: \"dailyallowsDetlsSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const period = get(allowsPeriodState);\r\n      const empid = get(empidState);\r\n      const { data } = await axios.get(\r\n        `${dailyallowsdetls_url}?fv=${empid}&period=${period}`\r\n      );\r\n      const res = await data;\r\n      \r\n      return res;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n \r\n});\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\data\\atomdata.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\components\\Payslip_ViewDeductions.js",["1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nexport default function Payslip_ViewDeductions() {\r\n  const classes = useStyles();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n  \r\n  const {\r\n    payslipdeductions,\r\n    payslip_deduction_amount,\r\n    setPayslipDeductionAmount,\r\n    loadPayslipDeductions,\r\n    addPayslipDeduction,\r\n    payslipdeductions_loading,\r\n    updatePayslipDeduction,\r\n    deletePayslipDeduction,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipDeductions,\r\n  } = usePayslipsContext();\r\n  const { name, amount } = payslipdeductions;\r\n  const { deductions } = useTablesContext();\r\n\r\n  const calc_Deduction = (data) => {\r\n    const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n    setPayslipDeductionAmount(sum);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      field: \"description\",\r\n    },\r\n    { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipDeductions(payPeriodEmpId, payPeriod);\r\n  }, []);\r\n\r\n  \r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_deductions, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_deductions: payslip_deduction_amount,\r\n      ...paydata,\r\n    });\r\n  };\r\n\r\n  const update_PayslipDeduction = async (data) => {\r\n    const { id, rec_id, empid, ...fields } = data;\r\n    updatePayslipDeduction({ id: data.id, empid: empid, ...fields });\r\n    update_Payslip();\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const add_PayslipDeduction = (data) => {\r\n    const { description, amount } = data;\r\n    addPayslipDeduction({\r\n      description: description,\r\n      amount: amount,\r\n      name: single_payslip.name,\r\n      empid: single_payslip.empid,\r\n      period: single_payslip.period,\r\n    });\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const delete_PayslipDeduction = (data) => {\r\n    const { id } = data;\r\n    deletePayslipDeduction(id);\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  \r\n  if (payslipdeductions_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Expenses.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipdeductions}\r\n          title=\"Expense\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\Payslip_ViewEarnings.js",["1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\n\r\n\r\nexport default function Payslip_ViewEarnings({ setCalc }) {\r\n  let history = useHistory();\r\n  const [load, setLoad] = useState(true);\r\n  const classes = useStyles();\r\n  const payPeriodEmpId = useRecoilValue(payPeriodEmpIdState);\r\n  const payPeriod = useRecoilValue(payPeriodState);\r\n  const {\r\n    payslipearnings,\r\n    payslip_earning_amount,\r\n    setPayslipEarningAmount,\r\n    addPayslipEarning,\r\n    payslipearnings_loading,\r\n    updatePayslipEarning,\r\n    deletePayslipEarning,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipEarnings,\r\n  } = usePayslipsContext();\r\n\r\n  const { description, amount } = payslipearnings;\r\n  const { allowances } = useTablesContext();\r\n  console.log(\"recoil\", payPeriod, payPeriodEmpId);\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"description\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n];\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipEarnings(payPeriodEmpId, payPeriod);\r\n  }, []);\r\n\r\n  const calc_Earning = (data) => {\r\n    const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n    console.log(\"Earning\", data);\r\n    setPayslipEarningAmount(sum);\r\n  };\r\n\r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_earnings, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_earnings: payslip_earning_amount,\r\n      ...paydata,\r\n    });\r\n    setCalc(true);\r\n  };\r\n\r\n  if (payslipearnings_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Incomes.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipearnings}\r\n          title=\"Income\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\Example5.js",["1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport MaterialTable from \"material-table\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  atom,\r\n  selector,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useSetRecoilState,\r\n  useRecoilValueLoadable,\r\n  useRecoilStateLoadable,\r\n} from \"recoil\";\r\n// import { useRecoilValue, useSetRecoilState, useRecoilState } from \"recoil\";\r\n// import { departmentsSelector } from \"../helpers/Recoilhelpers\";\r\nimport { onleaves_url } from \"../utils/constants\";\r\nimport { fetchDepartmentsSelector } from \"./data/selectordata\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Data\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Data\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n];\r\n\r\nexport const onleavesdatastate = atom({\r\n  key: \"onleavesdatastate\",\r\n  default: [],\r\n});\r\n\r\nconst fetchOnLeavesDetails = selector({\r\n  key: \"onLeaveDetailsSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const { data } = await axios.get(onleaves_url);\r\n      const onleavesdata = data;\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n\r\nconst Example = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [userdata, setUserdata] = useState([]);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  const onLeavesDetails = useRecoilValueLoadable(fetchOnLeavesDetails);\r\n  const { state, contents } = onLeavesDetails;\r\n  \r\n  console.log(onLeavesDetails);\r\n  if (onLeavesDetails.state === \"hasError\") {\r\n    return <div> There is some problem! </div>;\r\n  }\r\n\r\n  if (state === \"loading\") {\r\n    return <div>Its loading</div>;\r\n  }\r\n\r\n  if (state === \"hasValue\") {\r\n    const editable = contents.map((r) => {\r\n      return { ...r };\r\n    });\r\n    return (\r\n      <paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={editable}\r\n          title=\"Staffs On Leave within 30 Days\"\r\n          options={{\r\n            search: false,\r\n            toolbar: false,\r\n          }}\r\n        />\r\n      </paper>\r\n    );\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n}));\r\n\r\nexport default Example;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\helpers\\CardLayout3.js",["1158","1159","1160","1161","1162","1163","1164","1165"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\nconst CardLayout3 = ({ title, children, handleClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        action={\r\n          <div>\r\n            {/* <IconButton aria-label=\"settings\">\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n            <IconButton aria-label=\"settings\" onClick={handleClick}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </div>\r\n        }\r\n        title={title}\r\n      />\r\n      <CardContent>{children}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"500\",\r\n  },\r\n  card: {\r\n    margin: \"15px 10px\",\r\n    padding: 0,\r\n    border: \"solid 1px black\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"dark\",\r\n  },\r\n  small: {\r\n    gridRowEnd: \"span 26\",\r\n  },\r\n  medium: {\r\n    gridRowEnd: \"span 33\",\r\n  },\r\n  large: {\r\n    gridRowEnd: \"span 45\",\r\n  },\r\n}));\r\n\r\nexport default CardLayout3;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\pages\\HomePage2.js",[],"D:\\react-myprojects\\hrms-airtable\\src\\pages\\HomePage.js",["1166","1167","1168","1169","1170","1171","1172","1173"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport CardLayout3 from \"../helpers/CardLayout3\";\r\nimport Copyright from \"../components/Copyright\";\r\nimport HomeAdmin from \"../components/HomeAdmin\";\r\nconst drawerWidth = 240;\r\n\r\nconst HomePage = () => {\r\n  // const classes = useStyles();\r\n  // const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  return (\r\n    <div>\r\n      <HomeAdmin />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default HomePage;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableView.js",["1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187","1188","1189","1190","1191","1192","1193","1194","1195"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Pending\"\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Days\", field: \"no_of_days\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function LeaveTableView() {\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    leaves,\r\n    editLeaveID,\r\n    leaves_loading,\r\n    deleteLeave,\r\n    loadPendingLeaves,\r\n    getSingleLeave,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n    resetSingleLeave,\r\n  } = useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    loadPendingLeaves(FILTERSTRING);\r\n  }, []);\r\n \r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeave(id);\r\n    loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  if (leaves_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Leaves</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leaves}\r\n          title=\"Leave Application\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\HomeAdmin.js",["1196","1197","1198","1199","1200","1201"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { TextField, Grid, Paper, Container, Box } from \"@material-ui/core\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport CardLayout2 from \"../helpers/CardLayout2\";\r\nimport CardLayout3 from \"../helpers/CardLayout3\";\r\nimport Copyright from \"../components/Copyright\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\n\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\nimport LeaveTableView from \"./LeaveTableView\";\r\nimport LeaveTableAdmin from \"./LeaveTableAdmin\";\r\nimport ExpenseTableView from \"./ExpenseTableView\";\r\nimport ExpenseTableAdmin from \"./ExpenseTableAdmin\";\r\nimport PayslipTableView from \"./PayslipTableView\";\r\nimport PayslipTableAdmin from \"./PayslipTableAdmin\";\r\nimport DailyAllowancesTableView from \"./DailyAllowancesTableView\";\r\nimport DailyAllowancesTableAdmin from \"./DailyAllowancesTableAdmin\";\r\nimport OnLeavesView from \"./OnLeavesView\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst EmployeeView = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  const [leavesdata, setLeavesdata] = useState([]);\r\n  const [isLeaveDialogOpen, setIsLeaveDialogOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [isExpenseDialogOpen, setIsExpenseDialogOpen] = useState(false);\r\n  const [payslipsdata, setPayslipsdata] = useState([]);\r\n  const [isPayslipDialogOpen, setIsPayslipDialogOpen] = useState(false);\r\n  const [dailyallowancesdata, setDailyAllowancesdata] = useState([]);\r\n  const [isDailyAllowancesDialogOpen, setIsDailyAllowancesDialogOpen] =\r\n    useState(false);\r\n\r\n  const { leaves, loadPendingLeaves } = useLeavesContext();\r\n\r\n  const { expenses, loadPendingExpenses } = useExpensesContext();\r\n\r\n  const { payslips, loadPendingPayslips } = usePayslipsContext();\r\n\r\n  const { dailyallowances, loadPendingDailyAllowances } =\r\n    useDailyAllowancesContext();\r\n\r\n  const handleLeaveDialogOpen = () => {\r\n    setLeavesdata([]);\r\n    setLeavesdata([...leaves]);\r\n    setIsLeaveDialogOpen(true);\r\n  };\r\n\r\n  const handleLeaveDialogClose = () => {\r\n    setIsLeaveDialogOpen(false);\r\n    loadPendingLeaves(FILTERSTRING);\r\n  };\r\n\r\n  const handleExpenseDialogOpen = () => {\r\n    setExpensesdata([]);\r\n    setExpensesdata([...expenses]);\r\n    setIsExpenseDialogOpen(true);\r\n  };\r\n\r\n  const handleExpenseDialogClose = () => {\r\n    setIsExpenseDialogOpen(false);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handlePayslipDialogOpen = () => {\r\n    setPayslipsdata([]);\r\n    setPayslipsdata([...payslips]);\r\n    setIsPayslipDialogOpen(true);\r\n  };\r\n\r\n  const handlePayslipDialogClose = () => {\r\n    setIsPayslipDialogOpen(false);\r\n    loadPendingPayslips(FILTERSTRING);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogOpen = () => {\r\n    setDailyAllowancesdata([]);\r\n    setDailyAllowancesdata([...dailyallowances]);\r\n    setIsDailyAllowancesDialogOpen(true);\r\n  };\r\n\r\n  const handleDailyAllowancesDialogClose = () => {\r\n    setIsDailyAllowancesDialogOpen(false);\r\n    loadPendingDailyAllowances(FILTERSTRING);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n      <div style={{ paddingLeft: 50 }}>\r\n        <h2>Welcome Admin!</h2>\r\n        <h3>Dashboard</h3>\r\n      </div>\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          {/* Chart */}\r\n          <Grid item xs={12} md={8} lg={12}>\r\n            {/* <Paper className={fixedHeightPaper}>\r\n              <div>Chart</div>\r\n            </Paper> */}\r\n            {/* <CardLayout3 title=\"\">\r\n             <h2>Chart</h2>\r\n            </CardLayout3> */}\r\n          </Grid>\r\n          {/* Recent Deposits */}\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <CardLayout3 title=\"Staffs Onleave within 30 Days\">\r\n              <OnLeavesView />\r\n            </CardLayout3>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <CardLayout3\r\n              title=\"Payroll pending for approval\"\r\n              handleClick={handlePayslipDialogOpen}\r\n            >\r\n              <PayslipTableView />\r\n            </CardLayout3>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <CardLayout3\r\n              title=\"Site Allowances pending for approval\"\r\n              handleClick={handleDailyAllowancesDialogOpen}\r\n            >\r\n              <DailyAllowancesTableView />\r\n            </CardLayout3>\r\n          </Grid>\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <CardLayout3\r\n              title=\"Leaves pending for approval\"\r\n              handleClick={handleLeaveDialogOpen}\r\n            >\r\n              <LeaveTableView />\r\n            </CardLayout3>\r\n          </Grid>\r\n          {/* Recent Orders */}\r\n          <Grid item xs={6} md={8} lg={6}>\r\n            <CardLayout3\r\n              title=\"Expenses pending for approval\"\r\n              handleClick={handleExpenseDialogOpen}\r\n            >\r\n              <ExpenseTableView />\r\n            </CardLayout3>\r\n          </Grid>\r\n        </Grid>\r\n        <Box pt={4}>\r\n          <Copyright />\r\n        </Box>\r\n        <CustomDialog\r\n          isOpen={isLeaveDialogOpen}\r\n          handleClose={handleLeaveDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <LeaveTableAdmin\r\n            setLeavesdata={setLeavesdata}\r\n            leavesdata={leavesdata}\r\n            handleDialogClose={handleLeaveDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isExpenseDialogOpen}\r\n          handleClose={handleExpenseDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseTableAdmin\r\n            setExpensesdata={setExpensesdata}\r\n            expensesdata={expensesdata}\r\n            handleDialogClose={handleExpenseDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isPayslipDialogOpen}\r\n          handleClose={handlePayslipDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <PayslipTableAdmin\r\n            setPayslipsdata={setPayslipsdata}\r\n            payslipsdata={payslipsdata}\r\n            handleDialogClose={handlePayslipDialogClose}\r\n          />\r\n        </CustomDialog>\r\n        <CustomDialog\r\n          isOpen={isDailyAllowancesDialogOpen}\r\n          handleClose={handleDailyAllowancesDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscreen={true}\r\n          isFullwidth={false}\r\n        >\r\n          <DailyAllowancesTableAdmin\r\n            setDailyAllowancesdata={setDailyAllowancesdata}\r\n            dailyallowancesdata={dailyallowancesdata}\r\n            handleDialogClose={handleDailyAllowancesDialogClose}\r\n          />\r\n        </CustomDialog>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\",\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default EmployeeView;\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\LeaveTableAdmin.js",["1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1212"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar} from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"No of Days\",\r\n    field: \"no_of_days\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 10,\r\n      maxWidth: 10,\r\n    },\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    field: \"reason\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 10,\r\n      maxWidth: 10,\r\n    },\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    cellStyle: {\r\n      width: 50,\r\n      maxWidth: 50,\r\n    },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function LeaveTable({\r\n  leavesdata,\r\n  setLeavesdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    leaves,\r\n    editLeaveID,\r\n    leaves_loading,\r\n    updateLeave,\r\n    deleteLeave,\r\n    loadLeaves,\r\n    getSingleLeave,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n    resetSingleLeave,\r\n  } = useLeavesContext();\r\n\r\n  // useEffect(() => {\r\n  //   loadLeaves();\r\n  // }, []);\r\n\r\n  \r\n\r\n  const handleLeaveFormDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleLeaveFormDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadLeaves();\r\n  };\r\n\r\n  const handleLeaveFormAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleLeaveFormAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleLeaveFormOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeave(id);\r\n    loadLeaves();\r\n  };\r\n\r\n  const Save_LeaveData = () => {\r\n    leavesdata.forEach((data) => {\r\n      const { id } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateLeave({ id, ...fields });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  // if (expenses_loading) {\r\n  //   return (\r\n\r\n  // if (leaves_loading) {\r\n  //   return (\r\n  //     <div>\r\n  //       <h2>Loading...Leaves</h2>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leavesdata}\r\n          title=\"Leave Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...leavesdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setLeavesdata([...dataUpdate]);\r\n                  //approve_Expense(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_LeaveData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleLeaveFormDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <LeaveForm handleDialogClose={handleLeaveFormDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleLeaveFormAlertClose}\r\n          onConfirm={handleLeaveFormOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTableAdmin.js",["1213","1214","1215","1216","1217","1218","1219","1220","1221","1222","1223","1224","1225","1226"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { TextField, MenuItem, Button, Icon } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  { title: \"Name\", field: \"name\", editable: \"never\" },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Description\",\r\n    field: \"description\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function ExpenseTable({\r\n  expensesdata,\r\n  setExpensesdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    expenses,\r\n    editExpenseID,\r\n    updateExpense,\r\n    expenses_loading,\r\n    deleteExpense,\r\n    loadPendingExpenses,\r\n    getSingleExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n    resetSingleExpense,\r\n  } = useExpensesContext();\r\n\r\n  // useEffect(() => {\r\n  //   setExpensesdata(expenses);\r\n  //   console.log(expensesdata)\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (expenses) {\r\n  //     setExpensesdata(expenses);\r\n  //     console.log(\"expenses\", expenses, expensesdata)\r\n  //   } else {\r\n  //     setIsLoad(!isLoad);\r\n  //   }\r\n  // }, [isLoad]);\r\n\r\n   const handleExpenseFormDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleExpenseFormDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n     loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handleExpenseFormAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleExpenseFormAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleExpenseFormOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpense(id);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const Save_ExpenseData = () => {\r\n    expensesdata.forEach((data) => {\r\n      const { id } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateExpense({ id, ...fields });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  //     <div>\r\n  //       <h2>Loading...Expenses</h2>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n  if (!expensesdata) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Expenses</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expensesdata}\r\n          title=\"Expenses Claims Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...expensesdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setExpensesdata([...dataUpdate]);\r\n                  //approve_Expense(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_ExpenseData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleExpenseFormDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <ExpenseForm handleDialogClose={handleExpenseFormDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleExpenseFormAlertClose}\r\n          onConfirm={handleExpenseFormOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\ExpenseTableView.js",["1227","1228","1229","1230","1231","1232","1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248","1249","1250","1251","1252"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n\r\n  { title: \"Description\", field: \"description\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function ExpenseTableView() {\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    expenses,\r\n    addExpense,\r\n    expenses_loading,\r\n    updateExpense,\r\n    deleteExpense,\r\n    loadPendingExpenses,\r\n    getSingleExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n    resetSingleExpense,\r\n  } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    loadPendingExpenses(FILTERSTRING);\r\n  }, []);\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadPendingExpenses(FILTERSTRING);\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  if (expenses_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Expenses</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expenses}\r\n          title=\"Leave Application\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTableView.js",["1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1270","1271","1272","1273","1274","1275","1276"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n\r\n  { title: \"Nett Pay\", field: \"nett_pay\", type: \"currency\", editable: \"never\" },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  { title: \"Status\", field: \"status\", editable: \"never\" },\r\n];\r\n\r\nexport default function PayslipTableVIew() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const {\r\n    payslips,\r\n    addPayslip,\r\n    payslips_loading,\r\n    updatePayslip,\r\n    deletePayslip,\r\n    loadPendingPayslips,\r\n    getSinglePayslip,\r\n    getSingleBatchPayslip,\r\n    setEditPayslipID,\r\n    setIsPayslipEditingOn,\r\n    setIsPayslipEditingOff,\r\n    resetSinglePayslip,\r\n    payslip_period,\r\n    payslip_endmonthdate,\r\n    singlebatchpayslip,\r\n    singlebatch_payslip_loading,\r\n    singlebatch_payslip_error,\r\n  } = usePayslipsContext();\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n\r\n  useEffect(() => {\r\n    loadPendingPayslips(FILTERSTRING);\r\n  }, []);\r\n    \r\n\r\n  if (payslips_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.....Payslips</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslips}\r\n          title=\"Payslips\"\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\PayslipTableAdmin.js",["1277","1278","1279","1280","1281","1282","1283","1284","1285"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Button, MenuItem, Icon } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\r\nimport {\r\n  payPeriodState,\r\n  payPeriodEndMonthState,\r\n  payPeriodEmpIdState,\r\n} from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Basic Pay\",\r\n    field: \"basic_pay\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"TAP Amount\",\r\n    field: \"tap_amount\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"SCP Amount\",\r\n    field: \"scp_amount\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Earnings\",\r\n    field: \"total_earnings\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Deductions\",\r\n    field: \"total_deductions\",\r\n    type: \"currency\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Nett Pay\", field: \"nett_pay\", type: \"currency\", editable: \"never\" },\r\n  // { title: \"Bank Name\", field: \"bank_name\" },\r\n  // { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    cellStyle: {\r\n      width: 50,\r\n      maxWidth: 50,\r\n    },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function PayslipTableAdmin({\r\n  payslipsdata,\r\n  setPayslipsdata,\r\n  handleDialogClose,\r\n}) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const setPayPeriodEmpId = useSetRecoilState(payPeriodEmpIdState);\r\n  const { updatePayslip } = usePayslipsContext();\r\n\r\n  const Save_PayslipData = () => {\r\n    payslipsdata.forEach((data) => {\r\n      const { id } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updatePayslip({ id, ...fields });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipsdata}\r\n          title=\"Payslips\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n          }}\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...payslipsdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setPayslipsdata([...dataUpdate]);\r\n                  //approve_Expense(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_PayslipData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTableAdmin.js",["1286","1287","1288","1289","1290","1291","1292","1293","1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Icon, Button, MenuItem} from \"@material-ui/core\"\r\nimport {\r\n  useSetRecoilState,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useRecoilValueLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  empidState,\r\n} from \"./data/atomdata\";\r\nimport { fetchDailyAllowancesSelector } from \"./data/selectordata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Period\", field: \"period\", editable: \"never\" },\r\n  { title: \"Location\", field: \"location\", editable: \"never\" },\r\n  { title: \"Manager Name\", field: \"manager_name\", editable: \"never\" },\r\n  {\r\n    title: \"No Of Days\",\r\n    field: \"no_of_days\",\r\n    type: \"numeric\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function DailyAllowancesTable({\r\n  dailyallowancesdata,\r\n  setDailyAllowancesdata,\r\n  handleDialogClose,\r\n}) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  const allows_empid = useRecoilValue(empidState);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  const setEmpID = useSetRecoilState(empidState);\r\n  const title = `Site Allowances (${allows_period})`;\r\n  const {\r\n    dailyallowances_loading,\r\n    singlebatch_dailyallowance,\r\n    singlebatch_dailyallowance_loading,\r\n    deleteDailyAllowance,\r\n    updateDailyAllowance,\r\n    setEditDailyAllowanceID,\r\n    setIsDailyAllowanceEditingOn,\r\n    setIsDailyAllowanceEditingOff,\r\n    resetSingleDailyAllowance,\r\n    dailyallowance_period,\r\n    getSingleBatchDailyAllowance,\r\n  } = useDailyAllowancesContext();\r\n\r\n  // useEffect(() => {\r\n  //   getSingleBatchDailyAllowance(allows_period);\r\n  // }, []);\r\n\r\n  \r\n \r\n  \r\n\r\nconst Save_DailyAllowancesData = () => {\r\n  dailyallowancesdata.forEach((data) => {\r\n    const { id } = data;\r\n    if (id) {\r\n      const { id, rec_id, tableData, ...fields } = data;\r\n      updateDailyAllowance({ id, ...fields });\r\n    }\r\n  });\r\n\r\n  handleDialogClose();\r\n};\r\n\r\n\r\n\r\n  if (dailyallowances_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... daily allowances</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={dailyallowancesdata}\r\n          title={title}\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...dailyallowancesdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setDailyAllowancesdata([...dataUpdate]);\r\n                  //approve_Expense(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_DailyAllowancesData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <div className={classes.dialog}>\r\n          <CustomDialog\r\n            isOpen={isDialogOpen}\r\n            handleClose={handleDialogClose}\r\n            title=\"\"\r\n            showButton={true}\r\n            isFullscreen={true}\r\n            isFullwidth={true}\r\n          >\r\n            <DailyAllowsDetlsTable\r\n              setAllowsdata={setAllowsdata}\r\n              allowsdata={allowsdata}\r\n              handleDialogClose={handleDialogClose}\r\n            />\r\n          </CustomDialog>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\DailyAllowancesTableView.js",["1307","1308","1309","1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320","1321","1322","1323","1324","1325","1326","1327","1328","1329","1330","1331","1332","1333","1334","1335","1336","1337"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  useSetRecoilState,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useRecoilValueLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  empidState,\r\n} from \"./data/atomdata\";\r\nimport { fetchDailyAllowancesSelector } from \"./data/selectordata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\nimport DailyAllowsDetlsTable from \"./DailyAllowsDetlsTable\";\r\n\r\nconst FILTERSTRING = \"Pending\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"Period\", field: \"period\" },\r\n  { title: \"Location\", field: \"location\" },\r\n  { title: \"Manager\", field: \"manager_name\" },\r\n  { title: \"Days\", field: \"no_of_days\", type: \"numeric\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function DailyAllowancesTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [tmpallowsdata, setTmpallowsdata] = useState([]);\r\n  const allows_period = useRecoilValue(allowsPeriodState);\r\n  const allows_empid = useRecoilValue(empidState);\r\n  const [allowsdata, setAllowsdata] = useRecoilState(allowsDataState);\r\n  const setEmpID = useSetRecoilState(empidState);\r\n  const title = `Site Allowances (${allows_period})`;\r\n  const {\r\n    dailyallowances,\r\n    loadPendingDailyAllowances,\r\n    singlebatch_dailyallowance,\r\n    singlebatch_dailyallowance_loading,\r\n    deleteDailyAllowance,\r\n    setEditDailyAllowanceID,\r\n    setIsDailyAllowanceEditingOn,\r\n    setIsDailyAllowanceEditingOff,\r\n    resetSingleDailyAllowance,\r\n    dailyallowance_period,\r\n    getSingleBatchDailyAllowance,\r\n  } = useDailyAllowancesContext();\r\n\r\n  useEffect(() => {\r\n    loadPendingDailyAllowances(FILTERSTRING);\r\n  }, []);\r\n\r\n  const handleDialogOpen = () => {\r\n    //console.log(\"allowsdetls\", allowsdata, allowsdataRef, singlebatch_dailyallowsdetl);\r\n    //setAllowsdata({ singlebatch_dailyallowsdetl });\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    //getSingleBatchDailyAllowance(dailyallowance_period);\r\n  };\r\n\r\n  if (singlebatch_dailyallowance_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... daily allowances</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={dailyallowances}\r\n          title={title}\r\n          options={{\r\n            filtering: false,\r\n            search: false,\r\n            toolbar: false,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  dialog: {\r\n    width: 1000,\r\n  },\r\n}));\r\n","D:\\react-myprojects\\hrms-airtable\\src\\components\\OnLeavesView.js",["1338","1339","1340","1341","1342","1343","1344","1345","1346","1347","1348","1349","1350"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport MaterialTable from \"material-table\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  atom,\r\n  selector,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useSetRecoilState,\r\n  useRecoilValueLoadable,\r\n  useRecoilStateLoadable,\r\n} from \"recoil\";\r\n// import { useRecoilValue, useSetRecoilState, useRecoilState } from \"recoil\";\r\n// import { departmentsSelector } from \"../helpers/Recoilhelpers\";\r\nimport { onleaves_url } from \"../utils/constants\";\r\nimport { fetchDepartmentsSelector } from \"./data/selectordata\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Data\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Data\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n];\r\n\r\nexport const onleavesdatastate = atom({\r\n  key: \"onleavesdatastate\",\r\n  default: [],\r\n});\r\n\r\nconst fetchOnLeavesDetails = selector({\r\n  key: \"onLeaveDetailsSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const { data } = await axios.get(onleaves_url);\r\n      const onleavesdata = data;\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n\r\nconst OnLeavesView = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [userdata, setUserdata] = useState([]);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  const onLeavesDetails = useRecoilValueLoadable(fetchOnLeavesDetails);\r\n  const { state, contents } = onLeavesDetails;\r\n\r\n  console.log(onLeavesDetails);\r\n  if (onLeavesDetails.state === \"hasError\") {\r\n    return <div> There is Internet connection problem! </div>;\r\n  }\r\n\r\n  if (state === \"loading\") {\r\n      return <div>\r\n          <h2>Loading....On Leaves</h2>\r\n          </div>;\r\n  }\r\n\r\n  if (state === \"hasValue\") {\r\n    const editable = contents.map((r) => {\r\n      return { ...r };\r\n    });\r\n    return (\r\n      <div className={classes.root}>\r\n        <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n          <MaterialTable\r\n            columns={columns}\r\n            data={editable}\r\n            title=\"Staffs On Leave within 30 Days\"\r\n            options={{\r\n              search: false,\r\n              toolbar: false,\r\n            }}\r\n            options={{\r\n              filtering: false,\r\n              search: false,\r\n              toolbar: false,\r\n              headerStyle: {\r\n                backgroundColor: \"orange\",\r\n                color: \"primary\",\r\n              },\r\n              showTitle: false,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default OnLeavesView;\r\n",{"ruleId":"1351","replacedBy":"1352"},{"ruleId":"1353","replacedBy":"1354"},{"ruleId":"1355","severity":1,"message":"1356","line":11,"column":8,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":16},{"ruleId":"1351","replacedBy":"1359"},{"ruleId":"1353","replacedBy":"1360"},{"ruleId":"1355","severity":1,"message":"1361","line":2,"column":8,"nodeType":"1357","messageId":"1358","endLine":2,"endColumn":12},{"ruleId":"1355","severity":1,"message":"1362","line":3,"column":8,"nodeType":"1357","messageId":"1358","endLine":3,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1363","line":5,"column":10,"nodeType":"1357","messageId":"1358","endLine":5,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1364","line":7,"column":8,"nodeType":"1357","messageId":"1358","endLine":7,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1365","line":16,"column":8,"nodeType":"1357","messageId":"1358","endLine":16,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1366","line":18,"column":8,"nodeType":"1357","messageId":"1358","endLine":18,"endColumn":22},{"ruleId":"1355","severity":1,"message":"1367","line":19,"column":8,"nodeType":"1357","messageId":"1358","endLine":19,"endColumn":22},{"ruleId":"1355","severity":1,"message":"1368","line":20,"column":8,"nodeType":"1357","messageId":"1358","endLine":20,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1369","line":21,"column":8,"nodeType":"1357","messageId":"1358","endLine":21,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1370","line":22,"column":8,"nodeType":"1357","messageId":"1358","endLine":22,"endColumn":28},{"ruleId":"1355","severity":1,"message":"1371","line":23,"column":8,"nodeType":"1357","messageId":"1358","endLine":23,"endColumn":34},{"ruleId":"1355","severity":1,"message":"1372","line":24,"column":8,"nodeType":"1357","messageId":"1358","endLine":24,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1373","line":25,"column":8,"nodeType":"1357","messageId":"1358","endLine":25,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1374","line":26,"column":8,"nodeType":"1357","messageId":"1358","endLine":26,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1375","line":5,"column":8,"nodeType":"1357","messageId":"1358","endLine":5,"endColumn":12},{"ruleId":"1355","severity":1,"message":"1364","line":8,"column":8,"nodeType":"1357","messageId":"1358","endLine":8,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1376","line":4,"column":8,"nodeType":"1357","messageId":"1358","endLine":4,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1377","line":6,"column":8,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":11},{"ruleId":"1355","severity":1,"message":"1378","line":7,"column":8,"nodeType":"1357","messageId":"1358","endLine":7,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1379","line":8,"column":8,"nodeType":"1357","messageId":"1358","endLine":8,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1380","line":10,"column":8,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1381","line":13,"column":8,"nodeType":"1357","messageId":"1358","endLine":13,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1382","line":14,"column":8,"nodeType":"1357","messageId":"1358","endLine":14,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1383","line":15,"column":8,"nodeType":"1357","messageId":"1358","endLine":15,"endColumn":12},{"ruleId":"1355","severity":1,"message":"1384","line":16,"column":8,"nodeType":"1357","messageId":"1358","endLine":16,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1385","line":17,"column":8,"nodeType":"1357","messageId":"1358","endLine":17,"endColumn":12},{"ruleId":"1355","severity":1,"message":"1386","line":18,"column":8,"nodeType":"1357","messageId":"1358","endLine":18,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1387","line":20,"column":8,"nodeType":"1357","messageId":"1358","endLine":20,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1376","line":4,"column":8,"nodeType":"1357","messageId":"1358","endLine":4,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1388","line":5,"column":8,"nodeType":"1357","messageId":"1358","endLine":5,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1378","line":7,"column":8,"nodeType":"1357","messageId":"1358","endLine":7,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1379","line":8,"column":8,"nodeType":"1357","messageId":"1358","endLine":8,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1375","line":9,"column":8,"nodeType":"1357","messageId":"1358","endLine":9,"endColumn":12},{"ruleId":"1355","severity":1,"message":"1380","line":10,"column":8,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1364","line":11,"column":8,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1389","line":12,"column":8,"nodeType":"1357","messageId":"1358","endLine":12,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1381","line":13,"column":8,"nodeType":"1357","messageId":"1358","endLine":13,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1385","line":17,"column":8,"nodeType":"1357","messageId":"1358","endLine":17,"endColumn":12},{"ruleId":"1355","severity":1,"message":"1386","line":18,"column":8,"nodeType":"1357","messageId":"1358","endLine":18,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1390","line":19,"column":8,"nodeType":"1357","messageId":"1358","endLine":19,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1387","line":20,"column":8,"nodeType":"1357","messageId":"1358","endLine":20,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1391","line":2,"column":10,"nodeType":"1357","messageId":"1358","endLine":2,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1392","line":2,"column":17,"nodeType":"1357","messageId":"1358","endLine":2,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1385","line":5,"column":50,"nodeType":"1357","messageId":"1358","endLine":5,"endColumn":54},{"ruleId":"1355","severity":1,"message":"1393","line":16,"column":3,"nodeType":"1357","messageId":"1358","endLine":16,"endColumn":12},{"ruleId":"1355","severity":1,"message":"1394","line":27,"column":3,"nodeType":"1357","messageId":"1358","endLine":27,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1395","line":121,"column":9,"nodeType":"1357","messageId":"1358","endLine":121,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1396","line":16,"column":8,"nodeType":"1357","messageId":"1358","endLine":16,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1397","line":21,"column":8,"nodeType":"1357","messageId":"1358","endLine":21,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1398","line":57,"column":5,"nodeType":"1357","messageId":"1358","endLine":57,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1399","line":60,"column":5,"nodeType":"1357","messageId":"1358","endLine":60,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1400","line":61,"column":5,"nodeType":"1357","messageId":"1358","endLine":61,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1401","line":303,"column":9,"nodeType":"1357","messageId":"1358","endLine":303,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1389","line":10,"column":8,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1402","line":11,"column":8,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1403","line":121,"column":7,"nodeType":"1357","messageId":"1358","endLine":121,"endColumn":20},{"ruleId":"1351","replacedBy":"1404"},{"ruleId":"1353","replacedBy":"1405"},{"ruleId":"1355","severity":1,"message":"1376","line":4,"column":8,"nodeType":"1357","messageId":"1358","endLine":4,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1377","line":6,"column":8,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":11},{"ruleId":"1355","severity":1,"message":"1406","line":13,"column":8,"nodeType":"1357","messageId":"1358","endLine":13,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1403","line":16,"column":7,"nodeType":"1357","messageId":"1358","endLine":16,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1407","line":24,"column":9,"nodeType":"1357","messageId":"1358","endLine":24,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1408","line":28,"column":9,"nodeType":"1357","messageId":"1358","endLine":28,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1409","line":10,"column":10,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":33},{"ruleId":"1410","severity":1,"message":"1411","line":22,"column":6,"nodeType":"1412","endLine":22,"endColumn":8,"suggestions":"1413"},{"ruleId":"1355","severity":1,"message":"1414","line":9,"column":8,"nodeType":"1357","messageId":"1358","endLine":9,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1391","line":2,"column":10,"nodeType":"1357","messageId":"1358","endLine":2,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1392","line":2,"column":17,"nodeType":"1357","messageId":"1358","endLine":2,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1415","line":10,"column":10,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":31},{"ruleId":"1355","severity":1,"message":"1416","line":11,"column":8,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":20},{"ruleId":"1410","severity":1,"message":"1417","line":51,"column":6,"nodeType":"1412","endLine":51,"endColumn":8,"suggestions":"1418"},{"ruleId":"1355","severity":1,"message":"1419","line":1,"column":29,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":38},{"ruleId":"1355","severity":1,"message":"1420","line":10,"column":3,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1421","line":118,"column":13,"nodeType":"1357","messageId":"1358","endLine":118,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1422","line":118,"column":17,"nodeType":"1357","messageId":"1358","endLine":118,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1423","line":118,"column":23,"nodeType":"1357","messageId":"1358","endLine":118,"endColumn":28},{"ruleId":"1355","severity":1,"message":"1424","line":118,"column":30,"nodeType":"1357","messageId":"1358","endLine":118,"endColumn":35},{"ruleId":"1355","severity":1,"message":"1425","line":118,"column":37,"nodeType":"1357","messageId":"1358","endLine":118,"endColumn":40},{"ruleId":"1355","severity":1,"message":"1426","line":118,"column":42,"nodeType":"1357","messageId":"1358","endLine":118,"endColumn":48},{"ruleId":"1355","severity":1,"message":"1427","line":1,"column":27,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":37},{"ruleId":"1355","severity":1,"message":"1419","line":1,"column":39,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":48},{"ruleId":"1355","severity":1,"message":"1428","line":6,"column":10,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1429","line":18,"column":11,"nodeType":"1357","messageId":"1358","endLine":18,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1422","line":19,"column":11,"nodeType":"1357","messageId":"1358","endLine":19,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1426","line":19,"column":17,"nodeType":"1357","messageId":"1358","endLine":19,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1423","line":19,"column":25,"nodeType":"1357","messageId":"1358","endLine":19,"endColumn":30},{"ruleId":"1355","severity":1,"message":"1424","line":19,"column":32,"nodeType":"1357","messageId":"1358","endLine":19,"endColumn":37},{"ruleId":"1355","severity":1,"message":"1425","line":19,"column":39,"nodeType":"1357","messageId":"1358","endLine":19,"endColumn":42},{"ruleId":"1351","replacedBy":"1430"},{"ruleId":"1353","replacedBy":"1431"},{"ruleId":"1410","severity":1,"message":"1432","line":83,"column":6,"nodeType":"1412","endLine":83,"endColumn":8,"suggestions":"1433"},{"ruleId":"1410","severity":1,"message":"1434","line":87,"column":6,"nodeType":"1412","endLine":87,"endColumn":8,"suggestions":"1435"},{"ruleId":"1355","severity":1,"message":"1419","line":1,"column":29,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":38},{"ruleId":"1355","severity":1,"message":"1436","line":10,"column":3,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1437","line":30,"column":3,"nodeType":"1357","messageId":"1358","endLine":30,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1421","line":140,"column":13,"nodeType":"1357","messageId":"1358","endLine":140,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1422","line":140,"column":17,"nodeType":"1357","messageId":"1358","endLine":140,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1438","line":140,"column":23,"nodeType":"1357","messageId":"1358","endLine":140,"endColumn":32},{"ruleId":"1355","severity":1,"message":"1439","line":140,"column":34,"nodeType":"1357","messageId":"1358","endLine":140,"endColumn":41},{"ruleId":"1355","severity":1,"message":"1440","line":140,"column":43,"nodeType":"1357","messageId":"1358","endLine":140,"endColumn":49},{"ruleId":"1355","severity":1,"message":"1441","line":140,"column":51,"nodeType":"1357","messageId":"1358","endLine":140,"endColumn":61},{"ruleId":"1355","severity":1,"message":"1442","line":140,"column":63,"nodeType":"1357","messageId":"1358","endLine":140,"endColumn":69},{"ruleId":"1355","severity":1,"message":"1389","line":10,"column":8,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1402","line":11,"column":8,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1403","line":18,"column":7,"nodeType":"1357","messageId":"1358","endLine":18,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1443","line":56,"column":9,"nodeType":"1357","messageId":"1358","endLine":56,"endColumn":27},{"ruleId":"1355","severity":1,"message":"1436","line":5,"column":3,"nodeType":"1357","messageId":"1358","endLine":5,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1419","line":1,"column":29,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":38},{"ruleId":"1355","severity":1,"message":"1444","line":10,"column":3,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1421","line":117,"column":13,"nodeType":"1357","messageId":"1358","endLine":117,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1422","line":117,"column":17,"nodeType":"1357","messageId":"1358","endLine":117,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1445","line":117,"column":23,"nodeType":"1357","messageId":"1358","endLine":117,"endColumn":27},{"ruleId":"1355","severity":1,"message":"1446","line":117,"column":29,"nodeType":"1357","messageId":"1358","endLine":117,"endColumn":43},{"ruleId":"1355","severity":1,"message":"1447","line":117,"column":45,"nodeType":"1357","messageId":"1358","endLine":117,"endColumn":51},{"ruleId":"1355","severity":1,"message":"1448","line":117,"column":53,"nodeType":"1357","messageId":"1358","endLine":117,"endColumn":59},{"ruleId":"1355","severity":1,"message":"1442","line":117,"column":61,"nodeType":"1357","messageId":"1358","endLine":117,"endColumn":67},{"ruleId":"1355","severity":1,"message":"1389","line":10,"column":8,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1402","line":11,"column":8,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1403","line":18,"column":7,"nodeType":"1357","messageId":"1358","endLine":18,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1449","line":6,"column":8,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1450","line":61,"column":10,"nodeType":"1357","messageId":"1358","endLine":61,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1451","line":61,"column":18,"nodeType":"1357","messageId":"1358","endLine":61,"endColumn":27},{"ruleId":"1355","severity":1,"message":"1452","line":65,"column":11,"nodeType":"1357","messageId":"1358","endLine":65,"endColumn":24},{"ruleId":"1355","severity":1,"message":"1453","line":70,"column":5,"nodeType":"1357","messageId":"1358","endLine":70,"endColumn":21},{"ruleId":"1410","severity":1,"message":"1454","line":83,"column":6,"nodeType":"1412","endLine":83,"endColumn":8,"suggestions":"1455"},{"ruleId":"1355","severity":1,"message":"1456","line":107,"column":9,"nodeType":"1357","messageId":"1358","endLine":107,"endColumn":24},{"ruleId":"1355","severity":1,"message":"1444","line":5,"column":3,"nodeType":"1357","messageId":"1358","endLine":5,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1389","line":10,"column":8,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1402","line":11,"column":8,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1403","line":18,"column":7,"nodeType":"1357","messageId":"1358","endLine":18,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1457","line":9,"column":3,"nodeType":"1357","messageId":"1358","endLine":9,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1458","line":16,"column":10,"nodeType":"1357","messageId":"1358","endLine":16,"endColumn":38},{"ruleId":"1355","severity":1,"message":"1459","line":46,"column":10,"nodeType":"1357","messageId":"1358","endLine":46,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1460","line":46,"column":25,"nodeType":"1357","messageId":"1358","endLine":46,"endColumn":41},{"ruleId":"1355","severity":1,"message":"1461","line":48,"column":9,"nodeType":"1357","messageId":"1358","endLine":48,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1462","line":60,"column":5,"nodeType":"1357","messageId":"1358","endLine":60,"endColumn":26},{"ruleId":"1410","severity":1,"message":"1463","line":66,"column":5,"nodeType":"1412","endLine":66,"endColumn":7,"suggestions":"1464"},{"ruleId":"1355","severity":1,"message":"1419","line":1,"column":29,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":38},{"ruleId":"1355","severity":1,"message":"1465","line":11,"column":3,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":27},{"ruleId":"1355","severity":1,"message":"1466","line":12,"column":3,"nodeType":"1357","messageId":"1358","endLine":12,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1467","line":32,"column":3,"nodeType":"1357","messageId":"1358","endLine":32,"endColumn":24},{"ruleId":"1355","severity":1,"message":"1421","line":192,"column":7,"nodeType":"1357","messageId":"1358","endLine":192,"endColumn":9},{"ruleId":"1355","severity":1,"message":"1422","line":193,"column":7,"nodeType":"1357","messageId":"1358","endLine":193,"endColumn":11},{"ruleId":"1355","severity":1,"message":"1468","line":194,"column":7,"nodeType":"1357","messageId":"1358","endLine":194,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1469","line":195,"column":7,"nodeType":"1357","messageId":"1358","endLine":195,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1470","line":196,"column":7,"nodeType":"1357","messageId":"1358","endLine":196,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1441","line":197,"column":7,"nodeType":"1357","messageId":"1358","endLine":197,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1448","line":198,"column":7,"nodeType":"1357","messageId":"1358","endLine":198,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1442","line":199,"column":7,"nodeType":"1357","messageId":"1358","endLine":199,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1421","line":302,"column":7,"nodeType":"1357","messageId":"1358","endLine":302,"endColumn":9},{"ruleId":"1355","severity":1,"message":"1422","line":303,"column":7,"nodeType":"1357","messageId":"1358","endLine":303,"endColumn":11},{"ruleId":"1355","severity":1,"message":"1468","line":304,"column":7,"nodeType":"1357","messageId":"1358","endLine":304,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1469","line":305,"column":7,"nodeType":"1357","messageId":"1358","endLine":305,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1470","line":306,"column":7,"nodeType":"1357","messageId":"1358","endLine":306,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1441","line":307,"column":7,"nodeType":"1357","messageId":"1358","endLine":307,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1448","line":308,"column":7,"nodeType":"1357","messageId":"1358","endLine":308,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1442","line":309,"column":7,"nodeType":"1357","messageId":"1358","endLine":309,"endColumn":13},{"ruleId":"1471","severity":1,"message":"1472","line":377,"column":9,"nodeType":"1473","messageId":"1474","endLine":377,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1465","line":6,"column":3,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":27},{"ruleId":"1355","severity":1,"message":"1467","line":27,"column":3,"nodeType":"1357","messageId":"1358","endLine":27,"endColumn":24},{"ruleId":"1410","severity":1,"message":"1434","line":46,"column":6,"nodeType":"1412","endLine":46,"endColumn":8,"suggestions":"1475"},{"ruleId":"1355","severity":1,"message":"1389","line":10,"column":8,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1402","line":11,"column":8,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1403","line":19,"column":7,"nodeType":"1357","messageId":"1358","endLine":19,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1476","line":12,"column":29,"nodeType":"1357","messageId":"1358","endLine":12,"endColumn":43},{"ruleId":"1355","severity":1,"message":"1477","line":14,"column":3,"nodeType":"1357","messageId":"1358","endLine":14,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1478","line":15,"column":3,"nodeType":"1357","messageId":"1358","endLine":15,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1479","line":49,"column":5,"nodeType":"1357","messageId":"1358","endLine":49,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1480","line":51,"column":5,"nodeType":"1357","messageId":"1358","endLine":51,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1481","line":52,"column":5,"nodeType":"1357","messageId":"1358","endLine":52,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1482","line":65,"column":5,"nodeType":"1357","messageId":"1358","endLine":65,"endColumn":30},{"ruleId":"1355","severity":1,"message":"1452","line":67,"column":11,"nodeType":"1357","messageId":"1358","endLine":67,"endColumn":24},{"ruleId":"1410","severity":1,"message":"1483","line":71,"column":6,"nodeType":"1412","endLine":71,"endColumn":8,"suggestions":"1484"},{"ruleId":"1355","severity":1,"message":"1421","line":83,"column":13,"nodeType":"1357","messageId":"1358","endLine":83,"endColumn":15},{"ruleId":"1485","severity":1,"message":"1486","line":106,"column":5,"nodeType":"1487","messageId":"1488","endLine":145,"endColumn":6},{"ruleId":"1489","severity":1,"message":"1490","line":107,"column":27,"nodeType":"1491","messageId":"1492","endLine":107,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1493","line":15,"column":8,"nodeType":"1357","messageId":"1358","endLine":15,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1494","line":23,"column":26,"nodeType":"1357","messageId":"1358","endLine":23,"endColumn":35},{"ruleId":"1355","severity":1,"message":"1495","line":24,"column":27,"nodeType":"1357","messageId":"1358","endLine":24,"endColumn":37},{"ruleId":"1355","severity":1,"message":"1496","line":24,"column":55,"nodeType":"1357","messageId":"1358","endLine":24,"endColumn":65},{"ruleId":"1410","severity":1,"message":"1497","line":39,"column":6,"nodeType":"1412","endLine":39,"endColumn":8,"suggestions":"1498"},{"ruleId":"1355","severity":1,"message":"1419","line":1,"column":29,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":38},{"ruleId":"1355","severity":1,"message":"1499","line":14,"column":3,"nodeType":"1357","messageId":"1358","endLine":14,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1500","line":39,"column":3,"nodeType":"1357","messageId":"1358","endLine":39,"endColumn":34},{"ruleId":"1355","severity":1,"message":"1501","line":40,"column":3,"nodeType":"1357","messageId":"1358","endLine":40,"endColumn":36},{"ruleId":"1355","severity":1,"message":"1502","line":41,"column":3,"nodeType":"1357","messageId":"1358","endLine":41,"endColumn":34},{"ruleId":"1355","severity":1,"message":"1503","line":54,"column":3,"nodeType":"1357","messageId":"1358","endLine":54,"endColumn":36},{"ruleId":"1355","severity":1,"message":"1504","line":55,"column":3,"nodeType":"1357","messageId":"1358","endLine":55,"endColumn":38},{"ruleId":"1355","severity":1,"message":"1505","line":56,"column":3,"nodeType":"1357","messageId":"1358","endLine":56,"endColumn":36},{"ruleId":"1355","severity":1,"message":"1421","line":235,"column":13,"nodeType":"1357","messageId":"1358","endLine":235,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1422","line":235,"column":17,"nodeType":"1357","messageId":"1358","endLine":235,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1438","line":235,"column":23,"nodeType":"1357","messageId":"1358","endLine":235,"endColumn":32},{"ruleId":"1355","severity":1,"message":"1439","line":235,"column":34,"nodeType":"1357","messageId":"1358","endLine":235,"endColumn":41},{"ruleId":"1355","severity":1,"message":"1440","line":235,"column":43,"nodeType":"1357","messageId":"1358","endLine":235,"endColumn":49},{"ruleId":"1355","severity":1,"message":"1441","line":235,"column":51,"nodeType":"1357","messageId":"1358","endLine":235,"endColumn":61},{"ruleId":"1355","severity":1,"message":"1442","line":235,"column":63,"nodeType":"1357","messageId":"1358","endLine":235,"endColumn":69},{"ruleId":"1355","severity":1,"message":"1421","line":313,"column":13,"nodeType":"1357","messageId":"1358","endLine":313,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1422","line":313,"column":17,"nodeType":"1357","messageId":"1358","endLine":313,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1468","line":313,"column":23,"nodeType":"1357","messageId":"1358","endLine":313,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1506","line":313,"column":31,"nodeType":"1357","messageId":"1358","endLine":313,"endColumn":42},{"ruleId":"1355","severity":1,"message":"1448","line":313,"column":44,"nodeType":"1357","messageId":"1358","endLine":313,"endColumn":50},{"ruleId":"1355","severity":1,"message":"1421","line":395,"column":13,"nodeType":"1357","messageId":"1358","endLine":395,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1422","line":395,"column":17,"nodeType":"1357","messageId":"1358","endLine":395,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1468","line":395,"column":23,"nodeType":"1357","messageId":"1358","endLine":395,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1506","line":395,"column":31,"nodeType":"1357","messageId":"1358","endLine":395,"endColumn":42},{"ruleId":"1355","severity":1,"message":"1448","line":395,"column":44,"nodeType":"1357","messageId":"1358","endLine":395,"endColumn":50},{"ruleId":"1355","severity":1,"message":"1499","line":9,"column":3,"nodeType":"1357","messageId":"1358","endLine":9,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1362","line":2,"column":8,"nodeType":"1357","messageId":"1358","endLine":2,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1361","line":3,"column":8,"nodeType":"1357","messageId":"1358","endLine":3,"endColumn":12},{"ruleId":"1355","severity":1,"message":"1396","line":16,"column":8,"nodeType":"1357","messageId":"1358","endLine":16,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1507","line":24,"column":8,"nodeType":"1357","messageId":"1358","endLine":24,"endColumn":22},{"ruleId":"1355","severity":1,"message":"1398","line":58,"column":5,"nodeType":"1357","messageId":"1358","endLine":58,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1399","line":61,"column":5,"nodeType":"1357","messageId":"1358","endLine":61,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1400","line":62,"column":5,"nodeType":"1357","messageId":"1358","endLine":62,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1508","line":110,"column":7,"nodeType":"1357","messageId":"1358","endLine":110,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1509","line":142,"column":5,"nodeType":"1357","messageId":"1358","endLine":142,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1510","line":144,"column":5,"nodeType":"1357","messageId":"1358","endLine":144,"endColumn":18},{"ruleId":"1410","severity":1,"message":"1411","line":156,"column":6,"nodeType":"1412","endLine":156,"endColumn":8,"suggestions":"1511"},{"ruleId":"1355","severity":1,"message":"1512","line":265,"column":27,"nodeType":"1357","messageId":"1358","endLine":265,"endColumn":34},{"ruleId":"1355","severity":1,"message":"1513","line":1,"column":17,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1514","line":1,"column":38,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":44},{"ruleId":"1355","severity":1,"message":"1385","line":7,"column":22,"nodeType":"1357","messageId":"1358","endLine":7,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1515","line":8,"column":10,"nodeType":"1357","messageId":"1358","endLine":8,"endColumn":27},{"ruleId":"1355","severity":1,"message":"1478","line":11,"column":3,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1508","line":25,"column":7,"nodeType":"1357","messageId":"1358","endLine":25,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1516","line":29,"column":9,"nodeType":"1357","messageId":"1358","endLine":29,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1422","line":45,"column":11,"nodeType":"1357","messageId":"1358","endLine":45,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1448","line":45,"column":17,"nodeType":"1357","messageId":"1358","endLine":45,"endColumn":23},{"ruleId":"1410","severity":1,"message":"1517","line":71,"column":6,"nodeType":"1412","endLine":71,"endColumn":8,"suggestions":"1518"},{"ruleId":"1355","severity":1,"message":"1519","line":73,"column":9,"nodeType":"1357","messageId":"1358","endLine":73,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1520","line":89,"column":9,"nodeType":"1357","messageId":"1358","endLine":89,"endColumn":30},{"ruleId":"1355","severity":1,"message":"1521","line":98,"column":9,"nodeType":"1357","messageId":"1358","endLine":98,"endColumn":27},{"ruleId":"1355","severity":1,"message":"1522","line":112,"column":9,"nodeType":"1357","messageId":"1358","endLine":112,"endColumn":30},{"ruleId":"1355","severity":1,"message":"1513","line":1,"column":17,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1515","line":6,"column":10,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":27},{"ruleId":"1355","severity":1,"message":"1478","line":9,"column":3,"nodeType":"1357","messageId":"1358","endLine":9,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1516","line":26,"column":9,"nodeType":"1357","messageId":"1358","endLine":26,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1523","line":31,"column":5,"nodeType":"1357","messageId":"1358","endLine":31,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1422","line":42,"column":11,"nodeType":"1357","messageId":"1358","endLine":42,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1448","line":42,"column":17,"nodeType":"1357","messageId":"1358","endLine":42,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1524","line":45,"column":9,"nodeType":"1357","messageId":"1358","endLine":45,"endColumn":23},{"ruleId":"1410","severity":1,"message":"1525","line":73,"column":6,"nodeType":"1412","endLine":73,"endColumn":8,"suggestions":"1526"},{"ruleId":"1355","severity":1,"message":"1527","line":84,"column":9,"nodeType":"1357","messageId":"1358","endLine":84,"endColumn":32},{"ruleId":"1355","severity":1,"message":"1528","line":91,"column":9,"nodeType":"1357","messageId":"1358","endLine":91,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1529","line":103,"column":9,"nodeType":"1357","messageId":"1358","endLine":103,"endColumn":32},{"ruleId":"1355","severity":1,"message":"1530","line":3,"column":3,"nodeType":"1357","messageId":"1358","endLine":3,"endColumn":9},{"ruleId":"1355","severity":1,"message":"1531","line":4,"column":3,"nodeType":"1357","messageId":"1358","endLine":4,"endColumn":7},{"ruleId":"1355","severity":1,"message":"1532","line":5,"column":3,"nodeType":"1357","messageId":"1358","endLine":5,"endColumn":12},{"ruleId":"1355","severity":1,"message":"1384","line":6,"column":3,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":8},{"ruleId":"1355","severity":1,"message":"1380","line":7,"column":3,"nodeType":"1357","messageId":"1358","endLine":7,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1533","line":8,"column":3,"nodeType":"1357","messageId":"1358","endLine":8,"endColumn":9},{"ruleId":"1355","severity":1,"message":"1379","line":11,"column":3,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":10},{"ruleId":"1355","severity":1,"message":"1377","line":12,"column":3,"nodeType":"1357","messageId":"1358","endLine":12,"endColumn":6},{"ruleId":"1355","severity":1,"message":"1385","line":15,"column":22,"nodeType":"1357","messageId":"1358","endLine":15,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1508","line":24,"column":7,"nodeType":"1357","messageId":"1358","endLine":24,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1495","line":26,"column":11,"nodeType":"1357","messageId":"1358","endLine":26,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1534","line":26,"column":23,"nodeType":"1357","messageId":"1358","endLine":26,"endColumn":38},{"ruleId":"1355","severity":1,"message":"1419","line":1,"column":29,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":38},{"ruleId":"1355","severity":1,"message":"1535","line":2,"column":8,"nodeType":"1357","messageId":"1358","endLine":2,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1421","line":169,"column":13,"nodeType":"1357","messageId":"1358","endLine":169,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1422","line":169,"column":17,"nodeType":"1357","messageId":"1358","endLine":169,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1421","line":230,"column":13,"nodeType":"1357","messageId":"1358","endLine":230,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1422","line":230,"column":17,"nodeType":"1357","messageId":"1358","endLine":230,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1421","line":291,"column":13,"nodeType":"1357","messageId":"1358","endLine":291,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1422","line":291,"column":17,"nodeType":"1357","messageId":"1358","endLine":291,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1421","line":352,"column":13,"nodeType":"1357","messageId":"1358","endLine":352,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1422","line":352,"column":17,"nodeType":"1357","messageId":"1358","endLine":352,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1421","line":424,"column":13,"nodeType":"1357","messageId":"1358","endLine":424,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1422","line":424,"column":17,"nodeType":"1357","messageId":"1358","endLine":424,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1421","line":496,"column":13,"nodeType":"1357","messageId":"1358","endLine":496,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1422","line":496,"column":17,"nodeType":"1357","messageId":"1358","endLine":496,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1421","line":567,"column":13,"nodeType":"1357","messageId":"1358","endLine":567,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1422","line":567,"column":17,"nodeType":"1357","messageId":"1358","endLine":567,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1427","line":1,"column":27,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":37},{"ruleId":"1355","severity":1,"message":"1533","line":8,"column":3,"nodeType":"1357","messageId":"1358","endLine":8,"endColumn":9},{"ruleId":"1355","severity":1,"message":"1379","line":11,"column":3,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":10},{"ruleId":"1355","severity":1,"message":"1377","line":12,"column":3,"nodeType":"1357","messageId":"1358","endLine":12,"endColumn":6},{"ruleId":"1355","severity":1,"message":"1508","line":40,"column":7,"nodeType":"1357","messageId":"1358","endLine":40,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1536","line":43,"column":5,"nodeType":"1357","messageId":"1358","endLine":43,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1537","line":46,"column":5,"nodeType":"1357","messageId":"1358","endLine":46,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1538","line":48,"column":5,"nodeType":"1357","messageId":"1358","endLine":48,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1539","line":51,"column":5,"nodeType":"1357","messageId":"1358","endLine":51,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1452","line":54,"column":11,"nodeType":"1357","messageId":"1358","endLine":54,"endColumn":24},{"ruleId":"1355","severity":1,"message":"1540","line":55,"column":10,"nodeType":"1357","messageId":"1358","endLine":55,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1541","line":55,"column":17,"nodeType":"1357","messageId":"1358","endLine":55,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1442","line":63,"column":5,"nodeType":"1357","messageId":"1358","endLine":63,"endColumn":11},{"ruleId":"1410","severity":1,"message":"1542","line":74,"column":6,"nodeType":"1412","endLine":74,"endColumn":8,"suggestions":"1543"},{"ruleId":"1544","severity":2,"message":"1545","line":77,"column":27,"nodeType":"1357","messageId":"1546","endLine":77,"endColumn":41},{"ruleId":"1544","severity":2,"message":"1547","line":81,"column":29,"nodeType":"1357","messageId":"1546","endLine":81,"endColumn":46},{"ruleId":"1544","severity":2,"message":"1548","line":85,"column":5,"nodeType":"1357","messageId":"1546","endLine":85,"endColumn":28},{"ruleId":"1544","severity":2,"message":"1549","line":86,"column":5,"nodeType":"1357","messageId":"1546","endLine":86,"endColumn":30},{"ruleId":"1544","severity":2,"message":"1550","line":87,"column":26,"nodeType":"1357","messageId":"1546","endLine":87,"endColumn":39},{"ruleId":"1544","severity":2,"message":"1551","line":87,"column":41,"nodeType":"1357","messageId":"1546","endLine":87,"endColumn":56},{"ruleId":"1552","severity":1,"message":"1553","line":487,"column":17,"nodeType":"1554","endLine":487,"endColumn":37},{"ruleId":"1552","severity":1,"message":"1555","line":492,"column":17,"nodeType":"1554","endLine":492,"endColumn":39},{"ruleId":"1351","replacedBy":"1556"},{"ruleId":"1353","replacedBy":"1557"},{"ruleId":"1355","severity":1,"message":"1558","line":6,"column":3,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1559","line":8,"column":3,"nodeType":"1357","messageId":"1358","endLine":8,"endColumn":12},{"ruleId":"1355","severity":1,"message":"1560","line":22,"column":10,"nodeType":"1357","messageId":"1358","endLine":22,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1561","line":23,"column":10,"nodeType":"1357","messageId":"1358","endLine":23,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1562","line":25,"column":9,"nodeType":"1357","messageId":"1358","endLine":25,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1563","line":29,"column":9,"nodeType":"1357","messageId":"1358","endLine":29,"endColumn":26},{"ruleId":"1564","severity":1,"message":"1565","line":41,"column":9,"nodeType":"1554","endLine":41,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1427","line":1,"column":27,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":37},{"ruleId":"1355","severity":1,"message":"1514","line":1,"column":50,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":56},{"ruleId":"1355","severity":1,"message":"1533","line":8,"column":3,"nodeType":"1357","messageId":"1358","endLine":8,"endColumn":9},{"ruleId":"1355","severity":1,"message":"1379","line":11,"column":3,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":10},{"ruleId":"1355","severity":1,"message":"1377","line":12,"column":3,"nodeType":"1357","messageId":"1358","endLine":12,"endColumn":6},{"ruleId":"1355","severity":1,"message":"1566","line":18,"column":8,"nodeType":"1357","messageId":"1358","endLine":18,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1478","line":24,"column":3,"nodeType":"1357","messageId":"1358","endLine":24,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1567","line":38,"column":7,"nodeType":"1357","messageId":"1358","endLine":38,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1568","line":55,"column":10,"nodeType":"1357","messageId":"1358","endLine":55,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1569","line":55,"column":16,"nodeType":"1357","messageId":"1358","endLine":55,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1536","line":58,"column":5,"nodeType":"1357","messageId":"1358","endLine":58,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1537","line":61,"column":5,"nodeType":"1357","messageId":"1358","endLine":61,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1538","line":63,"column":5,"nodeType":"1357","messageId":"1358","endLine":63,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1539","line":67,"column":5,"nodeType":"1357","messageId":"1358","endLine":67,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1570","line":68,"column":5,"nodeType":"1357","messageId":"1358","endLine":68,"endColumn":27},{"ruleId":"1355","severity":1,"message":"1571","line":69,"column":5,"nodeType":"1357","messageId":"1358","endLine":69,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1452","line":77,"column":11,"nodeType":"1357","messageId":"1358","endLine":77,"endColumn":24},{"ruleId":"1355","severity":1,"message":"1494","line":77,"column":26,"nodeType":"1357","messageId":"1358","endLine":77,"endColumn":35},{"ruleId":"1355","severity":1,"message":"1572","line":78,"column":11,"nodeType":"1357","messageId":"1358","endLine":78,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1573","line":78,"column":27,"nodeType":"1357","messageId":"1358","endLine":78,"endColumn":41},{"ruleId":"1355","severity":1,"message":"1495","line":78,"column":43,"nodeType":"1357","messageId":"1358","endLine":78,"endColumn":53},{"ruleId":"1355","severity":1,"message":"1496","line":78,"column":55,"nodeType":"1357","messageId":"1358","endLine":78,"endColumn":65},{"ruleId":"1355","severity":1,"message":"1574","line":82,"column":9,"nodeType":"1357","messageId":"1358","endLine":82,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1575","line":83,"column":9,"nodeType":"1357","messageId":"1358","endLine":83,"endColumn":28},{"ruleId":"1355","severity":1,"message":"1442","line":99,"column":5,"nodeType":"1357","messageId":"1358","endLine":99,"endColumn":11},{"ruleId":"1410","severity":1,"message":"1576","line":108,"column":13,"nodeType":"1491","endLine":110,"endColumn":4},{"ruleId":"1410","severity":1,"message":"1542","line":110,"column":6,"nodeType":"1412","endLine":110,"endColumn":8,"suggestions":"1577"},{"ruleId":"1552","severity":1,"message":"1578","line":564,"column":19,"nodeType":"1554","endLine":564,"endColumn":43},{"ruleId":"1552","severity":1,"message":"1579","line":574,"column":19,"nodeType":"1554","endLine":574,"endColumn":45},{"ruleId":"1552","severity":1,"message":"1553","line":589,"column":11,"nodeType":"1554","endLine":594,"endColumn":13},{"ruleId":"1552","severity":1,"message":"1555","line":604,"column":11,"nodeType":"1554","endLine":609,"endColumn":13},{"ruleId":"1351","replacedBy":"1580"},{"ruleId":"1353","replacedBy":"1581"},{"ruleId":"1355","severity":1,"message":"1403","line":16,"column":7,"nodeType":"1357","messageId":"1358","endLine":16,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1513","line":1,"column":17,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1385","line":2,"column":22,"nodeType":"1357","messageId":"1358","endLine":2,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1582","line":7,"column":3,"nodeType":"1357","messageId":"1358","endLine":7,"endColumn":11},{"ruleId":"1355","severity":1,"message":"1583","line":9,"column":3,"nodeType":"1357","messageId":"1358","endLine":9,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1457","line":10,"column":3,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1584","line":11,"column":3,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1585","line":15,"column":3,"nodeType":"1357","messageId":"1358","endLine":15,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1586","line":18,"column":10,"nodeType":"1357","messageId":"1358","endLine":18,"endColumn":39},{"ruleId":"1355","severity":1,"message":"1508","line":74,"column":7,"nodeType":"1357","messageId":"1358","endLine":74,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1461","line":81,"column":9,"nodeType":"1357","messageId":"1358","endLine":81,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1587","line":83,"column":5,"nodeType":"1357","messageId":"1358","endLine":83,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1588","line":90,"column":5,"nodeType":"1357","messageId":"1358","endLine":90,"endColumn":40},{"ruleId":"1355","severity":1,"message":"1589","line":92,"column":5,"nodeType":"1357","messageId":"1358","endLine":92,"endColumn":26},{"ruleId":"1410","severity":1,"message":"1590","line":98,"column":6,"nodeType":"1412","endLine":98,"endColumn":8,"suggestions":"1591"},{"ruleId":"1355","severity":1,"message":"1422","line":125,"column":27,"nodeType":"1357","messageId":"1358","endLine":125,"endColumn":31},{"ruleId":"1485","severity":1,"message":"1486","line":133,"column":5,"nodeType":"1487","messageId":"1488","endLine":166,"endColumn":6},{"ruleId":"1355","severity":1,"message":"1592","line":208,"column":27,"nodeType":"1357","messageId":"1358","endLine":208,"endColumn":32},{"ruleId":"1355","severity":1,"message":"1362","line":2,"column":8,"nodeType":"1357","messageId":"1358","endLine":2,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1361","line":3,"column":8,"nodeType":"1357","messageId":"1358","endLine":3,"endColumn":12},{"ruleId":"1355","severity":1,"message":"1396","line":16,"column":8,"nodeType":"1357","messageId":"1358","endLine":16,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1507","line":25,"column":8,"nodeType":"1357","messageId":"1358","endLine":25,"endColumn":22},{"ruleId":"1355","severity":1,"message":"1398","line":60,"column":5,"nodeType":"1357","messageId":"1358","endLine":60,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1399","line":63,"column":5,"nodeType":"1357","messageId":"1358","endLine":63,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1400","line":64,"column":5,"nodeType":"1357","messageId":"1358","endLine":64,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1508","line":118,"column":7,"nodeType":"1357","messageId":"1358","endLine":118,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1593","line":162,"column":5,"nodeType":"1357","messageId":"1358","endLine":162,"endColumn":25},{"ruleId":"1410","severity":1,"message":"1594","line":176,"column":6,"nodeType":"1412","endLine":176,"endColumn":8,"suggestions":"1595"},{"ruleId":"1355","severity":1,"message":"1596","line":184,"column":9,"nodeType":"1357","messageId":"1358","endLine":184,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1401","line":193,"column":9,"nodeType":"1357","messageId":"1358","endLine":193,"endColumn":20},{"ruleId":"1485","severity":1,"message":"1486","line":258,"column":5,"nodeType":"1487","messageId":"1488","endLine":276,"endColumn":6},{"ruleId":"1489","severity":1,"message":"1490","line":259,"column":27,"nodeType":"1491","messageId":"1492","endLine":259,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1512","line":318,"column":27,"nodeType":"1357","messageId":"1358","endLine":318,"endColumn":34},{"ruleId":"1351","replacedBy":"1597"},{"ruleId":"1353","replacedBy":"1598"},{"ruleId":"1410","severity":1,"message":"1599","line":27,"column":6,"nodeType":"1412","endLine":27,"endColumn":8,"suggestions":"1600"},{"ruleId":"1410","severity":1,"message":"1601","line":28,"column":6,"nodeType":"1412","endLine":28,"endColumn":8,"suggestions":"1602"},{"ruleId":"1355","severity":1,"message":"1603","line":18,"column":10,"nodeType":"1357","messageId":"1358","endLine":18,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1604","line":18,"column":20,"nodeType":"1357","messageId":"1358","endLine":18,"endColumn":31},{"ruleId":"1355","severity":1,"message":"1540","line":20,"column":11,"nodeType":"1357","messageId":"1358","endLine":20,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1605","line":20,"column":18,"nodeType":"1357","messageId":"1358","endLine":20,"endColumn":26},{"ruleId":"1410","severity":1,"message":"1606","line":32,"column":6,"nodeType":"1412","endLine":32,"endColumn":8,"suggestions":"1607"},{"ruleId":"1410","severity":1,"message":"1608","line":28,"column":6,"nodeType":"1412","endLine":28,"endColumn":8,"suggestions":"1609"},{"ruleId":"1355","severity":1,"message":"1610","line":5,"column":8,"nodeType":"1357","messageId":"1358","endLine":5,"endColumn":22},{"ruleId":"1355","severity":1,"message":"1611","line":6,"column":8,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1559","line":8,"column":8,"nodeType":"1357","messageId":"1358","endLine":8,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1530","line":9,"column":8,"nodeType":"1357","messageId":"1358","endLine":9,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1380","line":10,"column":8,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1612","line":11,"column":8,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1387","line":14,"column":8,"nodeType":"1357","messageId":"1358","endLine":14,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1559","line":6,"column":8,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1613","line":9,"column":10,"nodeType":"1357","messageId":"1358","endLine":9,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1383","line":9,"column":20,"nodeType":"1357","messageId":"1358","endLine":9,"endColumn":24},{"ruleId":"1355","severity":1,"message":"1614","line":11,"column":8,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1380","line":15,"column":8,"nodeType":"1357","messageId":"1358","endLine":15,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1615","line":17,"column":8,"nodeType":"1357","messageId":"1358","endLine":17,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1616","line":18,"column":8,"nodeType":"1357","messageId":"1358","endLine":18,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1617","line":19,"column":8,"nodeType":"1357","messageId":"1358","endLine":19,"endColumn":22},{"ruleId":"1355","severity":1,"message":"1618","line":22,"column":8,"nodeType":"1357","messageId":"1358","endLine":22,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1619","line":23,"column":8,"nodeType":"1357","messageId":"1358","endLine":23,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1620","line":24,"column":8,"nodeType":"1357","messageId":"1358","endLine":24,"endColumn":12},{"ruleId":"1355","severity":1,"message":"1621","line":25,"column":8,"nodeType":"1357","messageId":"1358","endLine":25,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1622","line":27,"column":8,"nodeType":"1357","messageId":"1358","endLine":27,"endColumn":11},{"ruleId":"1355","severity":1,"message":"1623","line":29,"column":7,"nodeType":"1357","messageId":"1358","endLine":29,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1624","line":38,"column":9,"nodeType":"1357","messageId":"1358","endLine":38,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1623","line":6,"column":7,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":18},{"ruleId":"1625","severity":1,"message":"1626","line":24,"column":15,"nodeType":"1554","endLine":24,"endColumn":49},{"ruleId":"1625","severity":1,"message":"1626","line":27,"column":15,"nodeType":"1554","endLine":27,"endColumn":49},{"ruleId":"1410","severity":1,"message":"1627","line":73,"column":6,"nodeType":"1412","endLine":73,"endColumn":8,"suggestions":"1628"},{"ruleId":"1355","severity":1,"message":"1419","line":1,"column":29,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":38},{"ruleId":"1355","severity":1,"message":"1629","line":10,"column":3,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1437","line":30,"column":3,"nodeType":"1357","messageId":"1358","endLine":30,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1421","line":125,"column":13,"nodeType":"1357","messageId":"1358","endLine":125,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1422","line":125,"column":17,"nodeType":"1357","messageId":"1358","endLine":125,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1438","line":125,"column":23,"nodeType":"1357","messageId":"1358","endLine":125,"endColumn":32},{"ruleId":"1355","severity":1,"message":"1439","line":125,"column":34,"nodeType":"1357","messageId":"1358","endLine":125,"endColumn":41},{"ruleId":"1355","severity":1,"message":"1440","line":125,"column":43,"nodeType":"1357","messageId":"1358","endLine":125,"endColumn":49},{"ruleId":"1355","severity":1,"message":"1441","line":125,"column":51,"nodeType":"1357","messageId":"1358","endLine":125,"endColumn":61},{"ruleId":"1355","severity":1,"message":"1442","line":125,"column":63,"nodeType":"1357","messageId":"1358","endLine":125,"endColumn":69},{"ruleId":"1355","severity":1,"message":"1629","line":5,"column":3,"nodeType":"1357","messageId":"1358","endLine":5,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1437","line":25,"column":3,"nodeType":"1357","messageId":"1358","endLine":25,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1610","line":5,"column":8,"nodeType":"1357","messageId":"1358","endLine":5,"endColumn":22},{"ruleId":"1355","severity":1,"message":"1611","line":6,"column":8,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1559","line":8,"column":8,"nodeType":"1357","messageId":"1358","endLine":8,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1530","line":9,"column":8,"nodeType":"1357","messageId":"1358","endLine":9,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1380","line":10,"column":8,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1612","line":11,"column":8,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1449","line":12,"column":8,"nodeType":"1357","messageId":"1358","endLine":12,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1389","line":13,"column":8,"nodeType":"1357","messageId":"1358","endLine":13,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1419","line":1,"column":17,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1513","line":1,"column":17,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1513","line":1,"column":17,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":25},{"ruleId":"1410","severity":1,"message":"1630","line":50,"column":6,"nodeType":"1412","endLine":50,"endColumn":8,"suggestions":"1631"},{"ruleId":"1410","severity":1,"message":"1632","line":46,"column":6,"nodeType":"1412","endLine":46,"endColumn":8,"suggestions":"1633"},{"ruleId":"1410","severity":1,"message":"1634","line":41,"column":6,"nodeType":"1412","endLine":41,"endColumn":8,"suggestions":"1635"},{"ruleId":"1410","severity":1,"message":"1636","line":50,"column":6,"nodeType":"1412","endLine":50,"endColumn":8,"suggestions":"1637"},{"ruleId":"1410","severity":1,"message":"1638","line":41,"column":6,"nodeType":"1412","endLine":41,"endColumn":8,"suggestions":"1639"},{"ruleId":"1355","severity":1,"message":"1419","line":1,"column":17,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1476","line":10,"column":3,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1515","line":12,"column":3,"nodeType":"1357","messageId":"1358","endLine":12,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1457","line":13,"column":3,"nodeType":"1357","messageId":"1358","endLine":13,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1584","line":14,"column":3,"nodeType":"1357","messageId":"1358","endLine":14,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1640","line":19,"column":10,"nodeType":"1357","messageId":"1358","endLine":19,"endColumn":34},{"ruleId":"1355","severity":1,"message":"1641","line":21,"column":7,"nodeType":"1357","messageId":"1358","endLine":21,"endColumn":10},{"ruleId":"1355","severity":1,"message":"1623","line":23,"column":7,"nodeType":"1357","messageId":"1358","endLine":23,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1642","line":49,"column":7,"nodeType":"1357","messageId":"1358","endLine":49,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1643","line":77,"column":20,"nodeType":"1357","messageId":"1358","endLine":77,"endColumn":31},{"ruleId":"1351","replacedBy":"1644"},{"ruleId":"1353","replacedBy":"1645"},{"ruleId":"1351","replacedBy":"1646"},{"ruleId":"1353","replacedBy":"1647"},{"ruleId":"1355","severity":1,"message":"1476","line":2,"column":20,"nodeType":"1357","messageId":"1358","endLine":2,"endColumn":34},{"ruleId":"1355","severity":1,"message":"1515","line":2,"column":36,"nodeType":"1357","messageId":"1358","endLine":2,"endColumn":53},{"ruleId":"1355","severity":1,"message":"1648","line":6,"column":3,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1513","line":1,"column":17,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1515","line":5,"column":10,"nodeType":"1357","messageId":"1358","endLine":5,"endColumn":27},{"ruleId":"1355","severity":1,"message":"1478","line":8,"column":3,"nodeType":"1357","messageId":"1358","endLine":8,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1523","line":23,"column":5,"nodeType":"1357","messageId":"1358","endLine":23,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1422","line":34,"column":11,"nodeType":"1357","messageId":"1358","endLine":34,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1448","line":34,"column":17,"nodeType":"1357","messageId":"1358","endLine":34,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1496","line":35,"column":11,"nodeType":"1357","messageId":"1358","endLine":35,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1524","line":37,"column":9,"nodeType":"1357","messageId":"1358","endLine":37,"endColumn":23},{"ruleId":"1410","severity":1,"message":"1649","line":52,"column":6,"nodeType":"1412","endLine":52,"endColumn":8,"suggestions":"1650"},{"ruleId":"1355","severity":1,"message":"1527","line":64,"column":9,"nodeType":"1357","messageId":"1358","endLine":64,"endColumn":32},{"ruleId":"1355","severity":1,"message":"1528","line":71,"column":9,"nodeType":"1357","messageId":"1358","endLine":71,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1529","line":83,"column":9,"nodeType":"1357","messageId":"1358","endLine":83,"endColumn":32},{"ruleId":"1355","severity":1,"message":"1514","line":1,"column":38,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":44},{"ruleId":"1355","severity":1,"message":"1385","line":5,"column":22,"nodeType":"1357","messageId":"1358","endLine":5,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1515","line":6,"column":10,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":27},{"ruleId":"1355","severity":1,"message":"1478","line":9,"column":3,"nodeType":"1357","messageId":"1358","endLine":9,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1508","line":18,"column":7,"nodeType":"1357","messageId":"1358","endLine":18,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1651","line":19,"column":10,"nodeType":"1357","messageId":"1358","endLine":19,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1652","line":19,"column":16,"nodeType":"1357","messageId":"1358","endLine":19,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1653","line":27,"column":5,"nodeType":"1357","messageId":"1358","endLine":27,"endColumn":22},{"ruleId":"1355","severity":1,"message":"1654","line":29,"column":5,"nodeType":"1357","messageId":"1358","endLine":29,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1655","line":30,"column":5,"nodeType":"1357","messageId":"1358","endLine":30,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1539","line":34,"column":5,"nodeType":"1357","messageId":"1358","endLine":34,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1506","line":38,"column":11,"nodeType":"1357","messageId":"1358","endLine":38,"endColumn":22},{"ruleId":"1355","severity":1,"message":"1448","line":38,"column":24,"nodeType":"1357","messageId":"1358","endLine":38,"endColumn":30},{"ruleId":"1355","severity":1,"message":"1495","line":39,"column":11,"nodeType":"1357","messageId":"1358","endLine":39,"endColumn":21},{"ruleId":"1410","severity":1,"message":"1656","line":52,"column":6,"nodeType":"1412","endLine":52,"endColumn":8,"suggestions":"1657"},{"ruleId":"1355","severity":1,"message":"1519","line":54,"column":9,"nodeType":"1357","messageId":"1358","endLine":54,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1658","line":60,"column":9,"nodeType":"1357","messageId":"1358","endLine":60,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1419","line":1,"column":27,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":36},{"ruleId":"1355","severity":1,"message":"1384","line":6,"column":8,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1476","line":10,"column":3,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1583","line":11,"column":3,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1515","line":12,"column":3,"nodeType":"1357","messageId":"1358","endLine":12,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1584","line":14,"column":3,"nodeType":"1357","messageId":"1358","endLine":14,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1640","line":19,"column":10,"nodeType":"1357","messageId":"1358","endLine":19,"endColumn":34},{"ruleId":"1355","severity":1,"message":"1623","line":21,"column":7,"nodeType":"1357","messageId":"1358","endLine":21,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1659","line":55,"column":13,"nodeType":"1357","messageId":"1358","endLine":55,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1660","line":67,"column":10,"nodeType":"1357","messageId":"1358","endLine":67,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1643","line":67,"column":20,"nodeType":"1357","messageId":"1358","endLine":67,"endColumn":31},{"ruleId":"1355","severity":1,"message":"1610","line":5,"column":8,"nodeType":"1357","messageId":"1358","endLine":5,"endColumn":22},{"ruleId":"1355","severity":1,"message":"1611","line":6,"column":8,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1559","line":8,"column":8,"nodeType":"1357","messageId":"1358","endLine":8,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1530","line":9,"column":8,"nodeType":"1357","messageId":"1358","endLine":9,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1380","line":10,"column":8,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1612","line":11,"column":8,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1387","line":14,"column":8,"nodeType":"1357","messageId":"1358","endLine":14,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1381","line":15,"column":8,"nodeType":"1357","messageId":"1358","endLine":15,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1361","line":2,"column":8,"nodeType":"1357","messageId":"1358","endLine":2,"endColumn":12},{"ruleId":"1355","severity":1,"message":"1377","line":4,"column":8,"nodeType":"1357","messageId":"1358","endLine":4,"endColumn":11},{"ruleId":"1355","severity":1,"message":"1382","line":5,"column":8,"nodeType":"1357","messageId":"1358","endLine":5,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1383","line":6,"column":8,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":12},{"ruleId":"1355","severity":1,"message":"1384","line":7,"column":8,"nodeType":"1357","messageId":"1358","endLine":7,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1661","line":9,"column":8,"nodeType":"1357","messageId":"1358","endLine":9,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1662","line":10,"column":8,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1663","line":24,"column":7,"nodeType":"1357","messageId":"1358","endLine":24,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1664","line":5,"column":8,"nodeType":"1357","messageId":"1358","endLine":5,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1449","line":6,"column":8,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1665","line":7,"column":8,"nodeType":"1357","messageId":"1358","endLine":7,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1666","line":8,"column":8,"nodeType":"1357","messageId":"1358","endLine":8,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1667","line":9,"column":8,"nodeType":"1357","messageId":"1358","endLine":9,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1668","line":10,"column":8,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1669","line":11,"column":10,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":22},{"ruleId":"1355","severity":1,"message":"1670","line":12,"column":10,"nodeType":"1357","messageId":"1358","endLine":12,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1671","line":61,"column":10,"nodeType":"1357","messageId":"1358","endLine":61,"endColumn":22},{"ruleId":"1355","severity":1,"message":"1672","line":62,"column":10,"nodeType":"1357","messageId":"1358","endLine":62,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1452","line":63,"column":11,"nodeType":"1357","messageId":"1358","endLine":63,"endColumn":24},{"ruleId":"1355","severity":1,"message":"1673","line":70,"column":5,"nodeType":"1357","messageId":"1358","endLine":70,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1674","line":71,"column":5,"nodeType":"1357","messageId":"1358","endLine":71,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1675","line":72,"column":5,"nodeType":"1357","messageId":"1358","endLine":72,"endColumn":24},{"ruleId":"1355","severity":1,"message":"1676","line":73,"column":5,"nodeType":"1357","messageId":"1358","endLine":73,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1677","line":74,"column":5,"nodeType":"1357","messageId":"1358","endLine":74,"endColumn":21},{"ruleId":"1410","severity":1,"message":"1678","line":79,"column":6,"nodeType":"1412","endLine":79,"endColumn":8,"suggestions":"1679"},{"ruleId":"1355","severity":1,"message":"1680","line":81,"column":9,"nodeType":"1357","messageId":"1358","endLine":81,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1681","line":85,"column":9,"nodeType":"1357","messageId":"1358","endLine":85,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1682","line":90,"column":9,"nodeType":"1357","messageId":"1358","endLine":90,"endColumn":24},{"ruleId":"1355","severity":1,"message":"1683","line":94,"column":9,"nodeType":"1357","messageId":"1358","endLine":94,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1684","line":98,"column":9,"nodeType":"1357","messageId":"1358","endLine":98,"endColumn":30},{"ruleId":"1355","severity":1,"message":"1419","line":1,"column":27,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":36},{"ruleId":"1355","severity":1,"message":"1532","line":4,"column":10,"nodeType":"1357","messageId":"1358","endLine":4,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1384","line":4,"column":27,"nodeType":"1357","messageId":"1358","endLine":4,"endColumn":32},{"ruleId":"1355","severity":1,"message":"1685","line":5,"column":8,"nodeType":"1357","messageId":"1358","endLine":5,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1686","line":6,"column":8,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1395","line":31,"column":9,"nodeType":"1357","messageId":"1358","endLine":31,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1419","line":1,"column":27,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":36},{"ruleId":"1355","severity":1,"message":"1452","line":86,"column":11,"nodeType":"1357","messageId":"1358","endLine":86,"endColumn":24},{"ruleId":"1355","severity":1,"message":"1687","line":88,"column":5,"nodeType":"1357","messageId":"1358","endLine":88,"endColumn":11},{"ruleId":"1355","severity":1,"message":"1688","line":90,"column":5,"nodeType":"1357","messageId":"1358","endLine":90,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1673","line":94,"column":5,"nodeType":"1357","messageId":"1358","endLine":94,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1674","line":95,"column":5,"nodeType":"1357","messageId":"1358","endLine":95,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1675","line":96,"column":5,"nodeType":"1357","messageId":"1358","endLine":96,"endColumn":24},{"ruleId":"1355","severity":1,"message":"1676","line":97,"column":5,"nodeType":"1357","messageId":"1358","endLine":97,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1677","line":98,"column":5,"nodeType":"1357","messageId":"1358","endLine":98,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1689","line":107,"column":9,"nodeType":"1357","messageId":"1358","endLine":107,"endColumn":34},{"ruleId":"1355","severity":1,"message":"1690","line":116,"column":9,"nodeType":"1357","messageId":"1358","endLine":116,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1419","line":1,"column":27,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":36},{"ruleId":"1355","severity":1,"message":"1449","line":6,"column":8,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1450","line":67,"column":10,"nodeType":"1357","messageId":"1358","endLine":67,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1451","line":67,"column":18,"nodeType":"1357","messageId":"1358","endLine":67,"endColumn":27},{"ruleId":"1355","severity":1,"message":"1452","line":70,"column":11,"nodeType":"1357","messageId":"1358","endLine":70,"endColumn":24},{"ruleId":"1355","severity":1,"message":"1691","line":72,"column":5,"nodeType":"1357","messageId":"1358","endLine":72,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1453","line":75,"column":5,"nodeType":"1357","messageId":"1358","endLine":75,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1692","line":78,"column":5,"nodeType":"1357","messageId":"1358","endLine":78,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1693","line":79,"column":5,"nodeType":"1357","messageId":"1358","endLine":79,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1694","line":80,"column":5,"nodeType":"1357","messageId":"1358","endLine":80,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1695","line":81,"column":5,"nodeType":"1357","messageId":"1358","endLine":81,"endColumn":27},{"ruleId":"1355","severity":1,"message":"1696","line":82,"column":5,"nodeType":"1357","messageId":"1358","endLine":82,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1697","line":103,"column":10,"nodeType":"1357","messageId":"1358","endLine":103,"endColumn":37},{"ruleId":"1355","severity":1,"message":"1698","line":112,"column":9,"nodeType":"1357","messageId":"1358","endLine":112,"endColumn":35},{"ruleId":"1355","severity":1,"message":"1532","line":3,"column":10,"nodeType":"1357","messageId":"1358","endLine":3,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1566","line":3,"column":21,"nodeType":"1357","messageId":"1358","endLine":3,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1664","line":5,"column":8,"nodeType":"1357","messageId":"1358","endLine":5,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1449","line":6,"column":8,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1665","line":7,"column":8,"nodeType":"1357","messageId":"1358","endLine":7,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1666","line":8,"column":8,"nodeType":"1357","messageId":"1358","endLine":8,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1667","line":9,"column":8,"nodeType":"1357","messageId":"1358","endLine":9,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1668","line":10,"column":8,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1669","line":11,"column":10,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":22},{"ruleId":"1355","severity":1,"message":"1670","line":12,"column":10,"nodeType":"1357","messageId":"1358","endLine":12,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1671","line":37,"column":10,"nodeType":"1357","messageId":"1358","endLine":37,"endColumn":22},{"ruleId":"1355","severity":1,"message":"1672","line":38,"column":10,"nodeType":"1357","messageId":"1358","endLine":38,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1452","line":39,"column":11,"nodeType":"1357","messageId":"1358","endLine":39,"endColumn":24},{"ruleId":"1355","severity":1,"message":"1509","line":42,"column":5,"nodeType":"1357","messageId":"1358","endLine":42,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1510","line":44,"column":5,"nodeType":"1357","messageId":"1358","endLine":44,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1699","line":45,"column":5,"nodeType":"1357","messageId":"1358","endLine":45,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1692","line":47,"column":5,"nodeType":"1357","messageId":"1358","endLine":47,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1693","line":48,"column":5,"nodeType":"1357","messageId":"1358","endLine":48,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1694","line":49,"column":5,"nodeType":"1357","messageId":"1358","endLine":49,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1695","line":50,"column":5,"nodeType":"1357","messageId":"1358","endLine":50,"endColumn":27},{"ruleId":"1355","severity":1,"message":"1696","line":51,"column":5,"nodeType":"1357","messageId":"1358","endLine":51,"endColumn":23},{"ruleId":"1410","severity":1,"message":"1700","line":56,"column":6,"nodeType":"1412","endLine":56,"endColumn":8,"suggestions":"1701"},{"ruleId":"1355","severity":1,"message":"1680","line":58,"column":9,"nodeType":"1357","messageId":"1358","endLine":58,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1681","line":62,"column":9,"nodeType":"1357","messageId":"1358","endLine":62,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1682","line":67,"column":9,"nodeType":"1357","messageId":"1358","endLine":67,"endColumn":24},{"ruleId":"1355","severity":1,"message":"1683","line":71,"column":9,"nodeType":"1357","messageId":"1358","endLine":71,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1702","line":2,"column":25,"nodeType":"1357","messageId":"1358","endLine":2,"endColumn":38},{"ruleId":"1355","severity":1,"message":"1385","line":4,"column":22,"nodeType":"1357","messageId":"1358","endLine":4,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1476","line":5,"column":29,"nodeType":"1357","messageId":"1358","endLine":5,"endColumn":43},{"ruleId":"1355","severity":1,"message":"1477","line":7,"column":3,"nodeType":"1357","messageId":"1358","endLine":7,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1478","line":8,"column":3,"nodeType":"1357","messageId":"1358","endLine":8,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1508","line":38,"column":7,"nodeType":"1357","messageId":"1358","endLine":38,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1703","line":40,"column":9,"nodeType":"1357","messageId":"1358","endLine":40,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1537","line":43,"column":5,"nodeType":"1357","messageId":"1358","endLine":43,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1481","line":45,"column":5,"nodeType":"1357","messageId":"1358","endLine":45,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1704","line":46,"column":5,"nodeType":"1357","messageId":"1358","endLine":46,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1705","line":48,"column":5,"nodeType":"1357","messageId":"1358","endLine":48,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1706","line":49,"column":5,"nodeType":"1357","messageId":"1358","endLine":49,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1707","line":50,"column":5,"nodeType":"1357","messageId":"1358","endLine":50,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1708","line":51,"column":5,"nodeType":"1357","messageId":"1358","endLine":51,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1709","line":52,"column":5,"nodeType":"1357","messageId":"1358","endLine":52,"endColumn":27},{"ruleId":"1355","severity":1,"message":"1710","line":53,"column":5,"nodeType":"1357","messageId":"1358","endLine":53,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1539","line":54,"column":5,"nodeType":"1357","messageId":"1358","endLine":54,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1711","line":55,"column":5,"nodeType":"1357","messageId":"1358","endLine":55,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1712","line":56,"column":5,"nodeType":"1357","messageId":"1358","endLine":56,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1713","line":57,"column":5,"nodeType":"1357","messageId":"1358","endLine":57,"endColumn":32},{"ruleId":"1355","severity":1,"message":"1482","line":58,"column":5,"nodeType":"1357","messageId":"1358","endLine":58,"endColumn":30},{"ruleId":"1355","severity":1,"message":"1452","line":60,"column":11,"nodeType":"1357","messageId":"1358","endLine":60,"endColumn":24},{"ruleId":"1355","severity":1,"message":"1494","line":60,"column":26,"nodeType":"1357","messageId":"1358","endLine":60,"endColumn":35},{"ruleId":"1410","severity":1,"message":"1714","line":64,"column":6,"nodeType":"1412","endLine":64,"endColumn":8,"suggestions":"1715"},{"ruleId":"1355","severity":1,"message":"1419","line":1,"column":17,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1716","line":10,"column":8,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1385","line":12,"column":22,"nodeType":"1357","messageId":"1358","endLine":12,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1476","line":13,"column":29,"nodeType":"1357","messageId":"1358","endLine":13,"endColumn":43},{"ruleId":"1355","severity":1,"message":"1477","line":15,"column":3,"nodeType":"1357","messageId":"1358","endLine":15,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1478","line":16,"column":3,"nodeType":"1357","messageId":"1358","endLine":16,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1717","line":20,"column":10,"nodeType":"1357","messageId":"1358","endLine":20,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1508","line":98,"column":7,"nodeType":"1357","messageId":"1358","endLine":98,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1703","line":100,"column":9,"nodeType":"1357","messageId":"1358","endLine":100,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1419","line":1,"column":27,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":36},{"ruleId":"1355","severity":1,"message":"1385","line":2,"column":22,"nodeType":"1357","messageId":"1358","endLine":2,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1457","line":10,"column":3,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1458","line":17,"column":10,"nodeType":"1357","messageId":"1358","endLine":17,"endColumn":38},{"ruleId":"1355","severity":1,"message":"1716","line":23,"column":8,"nodeType":"1357","messageId":"1358","endLine":23,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1718","line":29,"column":7,"nodeType":"1357","messageId":"1358","endLine":29,"endColumn":19},{"ruleId":"1355","severity":1,"message":"1508","line":72,"column":7,"nodeType":"1357","messageId":"1358","endLine":72,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1719","line":74,"column":24,"nodeType":"1357","messageId":"1358","endLine":74,"endColumn":39},{"ruleId":"1355","severity":1,"message":"1459","line":75,"column":10,"nodeType":"1357","messageId":"1358","endLine":75,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1460","line":75,"column":25,"nodeType":"1357","messageId":"1358","endLine":75,"endColumn":41},{"ruleId":"1355","severity":1,"message":"1461","line":77,"column":9,"nodeType":"1357","messageId":"1358","endLine":77,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1720","line":79,"column":9,"nodeType":"1357","messageId":"1358","endLine":79,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1721","line":83,"column":5,"nodeType":"1357","messageId":"1358","endLine":83,"endColumn":31},{"ruleId":"1355","severity":1,"message":"1722","line":84,"column":5,"nodeType":"1357","messageId":"1358","endLine":84,"endColumn":39},{"ruleId":"1355","severity":1,"message":"1723","line":85,"column":5,"nodeType":"1357","messageId":"1358","endLine":85,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1724","line":87,"column":5,"nodeType":"1357","messageId":"1358","endLine":87,"endColumn":28},{"ruleId":"1355","severity":1,"message":"1725","line":88,"column":5,"nodeType":"1357","messageId":"1358","endLine":88,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1726","line":89,"column":5,"nodeType":"1357","messageId":"1358","endLine":89,"endColumn":34},{"ruleId":"1355","severity":1,"message":"1727","line":90,"column":5,"nodeType":"1357","messageId":"1358","endLine":90,"endColumn":30},{"ruleId":"1355","severity":1,"message":"1462","line":91,"column":5,"nodeType":"1357","messageId":"1358","endLine":91,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1728","line":92,"column":5,"nodeType":"1357","messageId":"1358","endLine":92,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1385","line":2,"column":22,"nodeType":"1357","messageId":"1358","endLine":2,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1702","line":3,"column":25,"nodeType":"1357","messageId":"1358","endLine":3,"endColumn":38},{"ruleId":"1355","severity":1,"message":"1457","line":9,"column":3,"nodeType":"1357","messageId":"1358","endLine":9,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1458","line":16,"column":10,"nodeType":"1357","messageId":"1358","endLine":16,"endColumn":38},{"ruleId":"1355","severity":1,"message":"1664","line":17,"column":8,"nodeType":"1357","messageId":"1358","endLine":17,"endColumn":15},{"ruleId":"1355","severity":1,"message":"1449","line":18,"column":8,"nodeType":"1357","messageId":"1358","endLine":18,"endColumn":16},{"ruleId":"1355","severity":1,"message":"1665","line":19,"column":8,"nodeType":"1357","messageId":"1358","endLine":19,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1666","line":20,"column":8,"nodeType":"1357","messageId":"1358","endLine":20,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1667","line":21,"column":8,"nodeType":"1357","messageId":"1358","endLine":21,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1716","line":22,"column":8,"nodeType":"1357","messageId":"1358","endLine":22,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1669","line":23,"column":10,"nodeType":"1357","messageId":"1358","endLine":23,"endColumn":22},{"ruleId":"1355","severity":1,"message":"1729","line":26,"column":8,"nodeType":"1357","messageId":"1358","endLine":26,"endColumn":29},{"ruleId":"1355","severity":1,"message":"1508","line":44,"column":7,"nodeType":"1357","messageId":"1358","endLine":44,"endColumn":14},{"ruleId":"1355","severity":1,"message":"1671","line":46,"column":10,"nodeType":"1357","messageId":"1358","endLine":46,"endColumn":22},{"ruleId":"1355","severity":1,"message":"1459","line":47,"column":10,"nodeType":"1357","messageId":"1358","endLine":47,"endColumn":23},{"ruleId":"1355","severity":1,"message":"1460","line":47,"column":25,"nodeType":"1357","messageId":"1358","endLine":47,"endColumn":41},{"ruleId":"1355","severity":1,"message":"1461","line":49,"column":9,"nodeType":"1357","messageId":"1358","endLine":49,"endColumn":21},{"ruleId":"1355","severity":1,"message":"1730","line":50,"column":10,"nodeType":"1357","messageId":"1358","endLine":50,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1731","line":50,"column":22,"nodeType":"1357","messageId":"1358","endLine":50,"endColumn":35},{"ruleId":"1355","severity":1,"message":"1720","line":51,"column":9,"nodeType":"1357","messageId":"1358","endLine":51,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1721","line":56,"column":5,"nodeType":"1357","messageId":"1358","endLine":56,"endColumn":31},{"ruleId":"1355","severity":1,"message":"1723","line":58,"column":5,"nodeType":"1357","messageId":"1358","endLine":58,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1724","line":59,"column":5,"nodeType":"1357","messageId":"1358","endLine":59,"endColumn":28},{"ruleId":"1355","severity":1,"message":"1725","line":60,"column":5,"nodeType":"1357","messageId":"1358","endLine":60,"endColumn":33},{"ruleId":"1355","severity":1,"message":"1726","line":61,"column":5,"nodeType":"1357","messageId":"1358","endLine":61,"endColumn":34},{"ruleId":"1355","severity":1,"message":"1727","line":62,"column":5,"nodeType":"1357","messageId":"1358","endLine":62,"endColumn":30},{"ruleId":"1355","severity":1,"message":"1462","line":63,"column":5,"nodeType":"1357","messageId":"1358","endLine":63,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1728","line":64,"column":5,"nodeType":"1357","messageId":"1358","endLine":64,"endColumn":33},{"ruleId":"1410","severity":1,"message":"1732","line":69,"column":6,"nodeType":"1412","endLine":69,"endColumn":8,"suggestions":"1733"},{"ruleId":"1355","severity":1,"message":"1680","line":71,"column":9,"nodeType":"1357","messageId":"1358","endLine":71,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1681","line":77,"column":9,"nodeType":"1357","messageId":"1358","endLine":77,"endColumn":26},{"ruleId":"1355","severity":1,"message":"1419","line":1,"column":27,"nodeType":"1357","messageId":"1358","endLine":1,"endColumn":36},{"ruleId":"1355","severity":1,"message":"1384","line":6,"column":8,"nodeType":"1357","messageId":"1358","endLine":6,"endColumn":13},{"ruleId":"1355","severity":1,"message":"1476","line":10,"column":3,"nodeType":"1357","messageId":"1358","endLine":10,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1583","line":11,"column":3,"nodeType":"1357","messageId":"1358","endLine":11,"endColumn":17},{"ruleId":"1355","severity":1,"message":"1515","line":12,"column":3,"nodeType":"1357","messageId":"1358","endLine":12,"endColumn":20},{"ruleId":"1355","severity":1,"message":"1584","line":14,"column":3,"nodeType":"1357","messageId":"1358","endLine":14,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1640","line":19,"column":10,"nodeType":"1357","messageId":"1358","endLine":19,"endColumn":34},{"ruleId":"1355","severity":1,"message":"1623","line":21,"column":7,"nodeType":"1357","messageId":"1358","endLine":21,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1659","line":55,"column":13,"nodeType":"1357","messageId":"1358","endLine":55,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1395","line":66,"column":9,"nodeType":"1357","messageId":"1358","endLine":66,"endColumn":25},{"ruleId":"1355","severity":1,"message":"1660","line":67,"column":10,"nodeType":"1357","messageId":"1358","endLine":67,"endColumn":18},{"ruleId":"1355","severity":1,"message":"1643","line":67,"column":20,"nodeType":"1357","messageId":"1358","endLine":67,"endColumn":31},{"ruleId":"1734","severity":1,"message":"1735","line":98,"column":13,"nodeType":"1736","endLine":107,"endColumn":15},"no-native-reassign",["1737"],"no-negated-in-lhs",["1738"],"no-unused-vars","'HomeIcon' is defined but never used.","Identifier","unusedVar",["1737"],["1738"],"'clsx' is defined but never used.","'PropTypes' is defined but never used.","'withStyles' is defined but never used.","'Divider' is defined but never used.","'BarChartIcon' is defined but never used.","'AssignmentIcon' is defined but never used.","'DnsRoundedIcon' is defined but never used.","'PermMediaOutlinedIcon' is defined but never used.","'PublicIcon' is defined but never used.","'SettingsEthernetIcon' is defined but never used.","'SettingsInputComponentIcon' is defined but never used.","'TimerIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'PhonelinkSetupIcon' is defined but never used.","'List' is defined but never used.","'CssBaseline' is defined but never used.","'Box' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Badge' is defined but never used.","'Container' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'Link' is defined but never used.","'MenuIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'Drawer' is defined but never used.","'IconButton' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'Dashboard' is defined but never used.","'PrivateRoute' is defined but never used.","'fixedHeightPaper' is assigned a value but never used.","'Checkbox' is defined but never used.","'Modal' is defined but never used.","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'Tooltip' is defined but never used.","'ToolbarHeader' is assigned a value but never used.",["1737"],["1738"],"'headerlogo' is defined but never used.","'handleClickPay' is assigned a value but never used.","'handleClickTable' is assigned a value but never used.","'headEmployeesTableCells' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadExpenses'. Either include it or remove the dependency array.","ArrayExpression",["1739"],"'PayslipsPeriods' is defined but never used.","'headExpenseTableCells' is defined but never used.","'ExpenseTable' is defined but never used.","React Hook useEffect has missing dependencies: 'loadEmployees' and 'resetEmployees'. Either include them or remove the dependency array.",["1740"],"'useEffect' is defined but never used.","'SET_SINGLEEMPLOYEE' is defined but never used.","'id' is assigned a value but never used.","'name' is assigned a value but never used.","'ic_no' is assigned a value but never used.","'email' is assigned a value but never used.","'age' is assigned a value but never used.","'gender' is assigned a value but never used.","'useReducer' is defined but never used.","'useForm' is defined but never used.","'isEditing' is assigned a value but never used.",["1737"],["1738"],"React Hook useEffect has a missing dependency: 'loadLeaves'. Either include it or remove the dependency array.",["1741"],"React Hook useEffect has a missing dependency: 'loadEmployees'. Either include it or remove the dependency array.",["1742"],"'SET_SINGLELEAVE' is defined but never used.","'RESET_TABLES' is defined but never used.","'from_date' is assigned a value but never used.","'to_date' is assigned a value but never used.","'reason' is assigned a value but never used.","'no_of_days' is assigned a value but never used.","'status' is assigned a value but never used.","'handleOnChangeName' is assigned a value but never used.","'SET_SINGLEEXPENSE' is defined but never used.","'date' is assigned a value but never used.","'purchased_date' is assigned a value but never used.","'remark' is assigned a value but never used.","'amount' is assigned a value but never used.","'EditIcon' is defined but never used.","'isLoad' is assigned a value but never used.","'setIsLoad' is assigned a value but never used.","'loadEmployees' is assigned a value but never used.","'expenses_loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'expenses' and 'expensesdata'. Either include them or remove the dependency array.",["1743"],"'approve_Expense' is assigned a value but never used.","'useRecoilValueLoadable' is defined but never used.","'fetchDailyAllowancesSelector' is defined but never used.","'tmpallowsdata' is assigned a value but never used.","'setTmpallowsdata' is assigned a value but never used.","'allows_empid' is assigned a value but never used.","'dailyallowance_period' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allows_period' and 'getSingleBatchDailyAllowance'. Either include them or remove the dependency array.",["1744"],"'SET_SINGLEDAILYALLOWANCE' is defined but never used.","'LOAD_DAILYALLOWANCES' is defined but never used.","'LOAD_DAILYALLOWSDETLS' is defined but never used.","'period' is assigned a value but never used.","'location' is assigned a value but never used.","'manager_name' is assigned a value but never used.","no-dupe-keys","Duplicate key 'setDailyAllowsDetlPeriod'.","ObjectExpression","unexpected",["1745"],"'useRecoilValue' is defined but never used.","'payPeriodState' is defined but never used.","'payPeriodEndMonthState' is defined but never used.","'payslips' is assigned a value but never used.","'payslips_loading' is assigned a value but never used.","'updatePayslip' is assigned a value but never used.","'singlebatch_payslip_error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getSingleBatchPayslip' and 'payslip_period'. Either include them or remove the dependency array.",["1746"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'BatchPayslips' is defined but never used.","'employees' is assigned a value but never used.","'allowances' is assigned a value but never used.","'deductions' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadAllowances', 'loadDeductions', and 'loadEmployees'. Either include them or remove the dependency array.",["1747"],"'SET_SINGLEPAYSLIP' is defined but never used.","'GET_SINGLE_PAYSLIPEARNING_BEGIN' is defined but never used.","'GET_SINGLE_PAYSLIPEARNING_SUCCESS' is defined but never used.","'GET_SINGLE_PAYSLIPEARNING_ERROR' is defined but never used.","'GET_SINGLE_PAYSLIPDEDUCTION_BEGIN' is defined but never used.","'GET_SINGLE_PAYSLIPDEDUCTION_SUCCESS' is defined but never used.","'GET_SINGLE_PAYSLIPDEDUCTION_ERROR' is defined but never used.","'description' is assigned a value but never used.","'FilterListIcon' is defined but never used.","'history' is assigned a value but never used.","'addExpense' is assigned a value but never used.","'updateExpense' is assigned a value but never used.",["1748"],"'labelId' is assigned a value but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'useSetRecoilState' is defined but never used.","'payEarningData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getSingleBatchPayslipEarnings', 'payslip_period', and 'single_payslip.empid'. Either include them or remove the dependency array.",["1749"],"'calc_Earning' is assigned a value but never used.","'update_PayslipEarning' is assigned a value but never used.","'add_PayslipEarning' is assigned a value but never used.","'delete_PayslipEarning' is assigned a value but never used.","'loadPayslipDeductions' is assigned a value but never used.","'calc_Deduction' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getSingleBatchPayslipDeductions', 'payslip_period', and 'single_payslip.empid'. Either include them or remove the dependency array.",["1750"],"'update_PayslipDeduction' is assigned a value but never used.","'add_PayslipDeduction' is assigned a value but never used.","'delete_PayslipDeduction' is assigned a value but never used.","'Button' is defined but never used.","'Icon' is defined but never used.","'TextField' is defined but never used.","'Select' is defined but never used.","'load_allowances' is assigned a value but never used.","'axios' is defined but never used.","'isPayslipEditing' is assigned a value but never used.","'addPayslip' is assigned a value but never used.","'loadPayslips' is assigned a value but never used.","'payslip_period' is assigned a value but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'editPayslipID' and 'getSinglePayslip'. Either include them or remove the dependency array.",["1751"],"no-undef","'payslipearings' is not defined.","undef","'payslipdeductions' is not defined.","'setPayslipEarningAmount' is not defined.","'setPayslipDeductionAmount' is not defined.","'totalearnings' is not defined.","'totaldeductions' is not defined.","react/jsx-pascal-case","Imported JSX component Payslip_Earnings must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Payslip_Deductions must be in PascalCase or SCREAMING_SNAKE_CASE",["1737"],["1738"],"'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'openDialog' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'handleOpenDialog' is assigned a value but never used.","'handleCloseDialog' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'MenuItem' is defined but never used.","'initial_values' is assigned a value but never used.","'calc' is assigned a value but never used.","'setCalc' is assigned a value but never used.","'payslip_earning_amount' is assigned a value but never used.","'payslip_deduction_amount' is assigned a value but never used.","'loadAllowances' is assigned a value but never used.","'loadDeductions' is assigned a value but never used.","'setPayEarningData' is assigned a value but never used.","'setPayDeductionData' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching",["1752"],"Imported JSX component Payslip_ViewEarnings must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Payslip_ViewDeductions must be in PascalCase or SCREAMING_SNAKE_CASE",["1737"],["1738"],"'selector' is defined but never used.","'useRecoilState' is defined but never used.","'useRecoilStateLoadable' is defined but never used.","'allowsDataState' is defined but never used.","'fetchDailyAllowsDetlsSelector' is defined but never used.","'dailyallowsdetls' is assigned a value but never used.","'singlebatch_dailyallowsdetl_loading' is assigned a value but never used.","'single_dailyallowance' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allows_period', 'editDailyAllowanceID', and 'getSingleBatchDailyAllowsDetl'. Either include them or remove the dependency array.",["1753"],"'index' is assigned a value but never used.","'updateDailyAllowance' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadDailyAllowances'. Either include it or remove the dependency array.",["1754"],"'handleSelectAllClick' is assigned a value but never used.",["1737"],["1738"],"React Hook useEffect has a missing dependency: 'loadAllowances'. Either include it or remove the dependency array.",["1755"],"React Hook useEffect has a missing dependency: 'loadDeductions'. Either include it or remove the dependency array.",["1756"],"'deptdata' is assigned a value but never used.","'setDeptdata' is assigned a value but never used.","'contents' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadDepartments'. Either include it or remove the dependency array.",["1757"],"React Hook useEffect has a missing dependency: 'loadDesignations'. Either include it or remove the dependency array.",["1758"],"'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'MoreVertIcon' is defined but never used.","'Collapse' is defined but never used.","'Avatar' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MenuList' is defined but never used.","'ClickAwayListener' is defined but never used.","'Grow' is defined but never used.","'Popper' is defined but never used.","'img' is defined but never used.","'drawerWidth' is assigned a value but never used.","'handleExpandClick' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'editEmployeeID', 'getSingleEmployee', 'loadDepartments', and 'loadDesignations'. Either include them or remove the dependency array.",["1759"],"'SET_SINGLETRAINING' is defined but never used.","React Hook useEffect has missing dependencies: 'editEmployeeID' and 'getSingleBatchTraining'. Either include them or remove the dependency array.",["1760"],"React Hook useEffect has missing dependencies: 'editEmployeeID' and 'getSingleBatchLeave'. Either include them or remove the dependency array.",["1761"],"React Hook useEffect has missing dependencies: 'editEmployeeID' and 'loadSingleBatchFamily'. Either include them or remove the dependency array.",["1762"],"React Hook useEffect has missing dependencies: 'editEmployeeID' and 'loadSingleBatchExperience'. Either include them or remove the dependency array.",["1763"],"React Hook useEffect has missing dependencies: 'editEmployeeID' and 'loadSingleBatchEducation'. Either include them or remove the dependency array.",["1764"],"'fetchDepartmentsSelector' is defined but never used.","'url' is assigned a value but never used.","'fetchUserDetails' is assigned a value but never used.","'setUserdata' is assigned a value but never used.",["1737"],["1738"],["1737"],["1738"],"'allowsDataDetlsState' is defined but never used.","React Hook useEffect has missing dependencies: 'getSingleBatchPayslipDeductions', 'payPeriod', and 'payPeriodEmpId'. Either include them or remove the dependency array.",["1765"],"'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","'addPayslipEarning' is assigned a value but never used.","'updatePayslipEarning' is assigned a value but never used.","'deletePayslipEarning' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getSingleBatchPayslipEarnings', 'payPeriod', and 'payPeriodEmpId'. Either include them or remove the dependency array.",["1766"],"'update_Payslip' is assigned a value but never used.","'onleavesdata' is assigned a value but never used.","'userdata' is assigned a value but never used.","'CardLayout3' is defined but never used.","'Copyright' is defined but never used.","'useStyles' is assigned a value but never used.","'AddIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'CheckIcon' is defined but never used.","'SearchIcon' is defined but never used.","'LeaveForm' is defined but never used.","'CustomDialog' is defined but never used.","'AlertDialog' is defined but never used.","'isDialogOpen' is assigned a value but never used.","'isAlertOpen' is assigned a value but never used.","'getSingleLeave' is assigned a value but never used.","'setEditLeaveID' is assigned a value but never used.","'setIsLeaveEditingOn' is assigned a value but never used.","'setIsLeaveEditingOff' is assigned a value but never used.","'resetSingleLeave' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadPendingLeaves'. Either include it or remove the dependency array.",["1767"],"'handleDialogOpen' is assigned a value but never used.","'handleDialogClose' is assigned a value but never used.","'handleAlertOpen' is assigned a value but never used.","'handleAlertClose' is assigned a value but never used.","'handleOnDeleteConfirm' is assigned a value but never used.","'CardLayout' is defined but never used.","'CardLayout2' is defined but never used.","'leaves' is assigned a value but never used.","'leaves_loading' is assigned a value but never used.","'handleLeaveFormDialogOpen' is assigned a value but never used.","'handleLeaveFormAlertOpen' is assigned a value but never used.","'expenses' is assigned a value but never used.","'getSingleExpense' is assigned a value but never used.","'setEditExpenseID' is assigned a value but never used.","'setIsExpenseEditingOn' is assigned a value but never used.","'setIsExpenseEditingOff' is assigned a value but never used.","'resetSingleExpense' is assigned a value but never used.","'handleExpenseFormDialogOpen' is assigned a value but never used.","'handleExpenseFormAlertOpen' is assigned a value but never used.","'deleteExpense' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadPendingExpenses'. Either include it or remove the dependency array.",["1768"],"'MTableToolbar' is defined but never used.","'setPayPeriodEmpId' is assigned a value but never used.","'deletePayslip' is assigned a value but never used.","'getSinglePayslip' is assigned a value but never used.","'getSingleBatchPayslip' is assigned a value but never used.","'setEditPayslipID' is assigned a value but never used.","'setIsPayslipEditingOn' is assigned a value but never used.","'setIsPayslipEditingOff' is assigned a value but never used.","'resetSinglePayslip' is assigned a value but never used.","'payslip_endmonthdate' is assigned a value but never used.","'singlebatchpayslip' is assigned a value but never used.","'singlebatch_payslip_loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadPendingPayslips'. Either include it or remove the dependency array.",["1769"],"'ArrowBackIcon' is defined but never used.","'useEmployeesContext' is defined but never used.","'FILTERSTRING' is assigned a value but never used.","'setIsDialogOpen' is assigned a value but never used.","'setEmpID' is assigned a value but never used.","'singlebatch_dailyallowance' is assigned a value but never used.","'singlebatch_dailyallowance_loading' is assigned a value but never used.","'deleteDailyAllowance' is assigned a value but never used.","'setEditDailyAllowanceID' is assigned a value but never used.","'setIsDailyAllowanceEditingOn' is assigned a value but never used.","'setIsDailyAllowanceEditingOff' is assigned a value but never used.","'resetSingleDailyAllowance' is assigned a value but never used.","'getSingleBatchDailyAllowance' is assigned a value but never used.","'DailyAllowsDetlsTable' is defined but never used.","'allowsdata' is assigned a value but never used.","'setAllowsdata' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadPendingDailyAllowances'. Either include it or remove the dependency array.",["1770"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"1771","fix":"1772"},{"desc":"1773","fix":"1774"},{"desc":"1775","fix":"1776"},{"desc":"1777","fix":"1778"},{"desc":"1779","fix":"1780"},{"desc":"1781","fix":"1782"},{"desc":"1777","fix":"1783"},{"desc":"1784","fix":"1785"},{"desc":"1786","fix":"1787"},{"desc":"1771","fix":"1788"},{"desc":"1789","fix":"1790"},{"desc":"1791","fix":"1792"},{"desc":"1793","fix":"1794"},{"desc":"1793","fix":"1795"},{"desc":"1796","fix":"1797"},{"desc":"1798","fix":"1799"},{"desc":"1800","fix":"1801"},{"desc":"1802","fix":"1803"},{"desc":"1804","fix":"1805"},{"desc":"1806","fix":"1807"},{"desc":"1808","fix":"1809"},{"desc":"1810","fix":"1811"},{"desc":"1812","fix":"1813"},{"desc":"1814","fix":"1815"},{"desc":"1816","fix":"1817"},{"desc":"1818","fix":"1819"},{"desc":"1820","fix":"1821"},{"desc":"1822","fix":"1823"},{"desc":"1824","fix":"1825"},{"desc":"1826","fix":"1827"},{"desc":"1828","fix":"1829"},{"desc":"1830","fix":"1831"},"Update the dependencies array to be: [loadExpenses]",{"range":"1832","text":"1833"},"Update the dependencies array to be: [loadEmployees, resetEmployees]",{"range":"1834","text":"1835"},"Update the dependencies array to be: [loadLeaves]",{"range":"1836","text":"1837"},"Update the dependencies array to be: [loadEmployees]",{"range":"1838","text":"1839"},"Update the dependencies array to be: [expenses, expensesdata]",{"range":"1840","text":"1841"},"Update the dependencies array to be: [allows_period, getSingleBatchDailyAllowance]",{"range":"1842","text":"1843"},{"range":"1844","text":"1839"},"Update the dependencies array to be: [getSingleBatchPayslip, payslip_period]",{"range":"1845","text":"1846"},"Update the dependencies array to be: [loadAllowances, loadDeductions, loadEmployees]",{"range":"1847","text":"1848"},{"range":"1849","text":"1833"},"Update the dependencies array to be: [getSingleBatchPayslipEarnings, payslip_period, single_payslip.empid]",{"range":"1850","text":"1851"},"Update the dependencies array to be: [getSingleBatchPayslipDeductions, payslip_period, single_payslip.empid]",{"range":"1852","text":"1853"},"Update the dependencies array to be: [editPayslipID, getSinglePayslip]",{"range":"1854","text":"1855"},{"range":"1856","text":"1855"},"Update the dependencies array to be: [allows_period, editDailyAllowanceID, getSingleBatchDailyAllowsDetl]",{"range":"1857","text":"1858"},"Update the dependencies array to be: [loadDailyAllowances]",{"range":"1859","text":"1860"},"Update the dependencies array to be: [loadAllowances]",{"range":"1861","text":"1862"},"Update the dependencies array to be: [loadDeductions]",{"range":"1863","text":"1864"},"Update the dependencies array to be: [loadDepartments]",{"range":"1865","text":"1866"},"Update the dependencies array to be: [loadDesignations]",{"range":"1867","text":"1868"},"Update the dependencies array to be: [editEmployeeID, getSingleEmployee, loadDepartments, loadDesignations]",{"range":"1869","text":"1870"},"Update the dependencies array to be: [editEmployeeID, getSingleBatchTraining]",{"range":"1871","text":"1872"},"Update the dependencies array to be: [editEmployeeID, getSingleBatchLeave]",{"range":"1873","text":"1874"},"Update the dependencies array to be: [editEmployeeID, loadSingleBatchFamily]",{"range":"1875","text":"1876"},"Update the dependencies array to be: [editEmployeeID, loadSingleBatchExperience]",{"range":"1877","text":"1878"},"Update the dependencies array to be: [editEmployeeID, loadSingleBatchEducation]",{"range":"1879","text":"1880"},"Update the dependencies array to be: [getSingleBatchPayslipDeductions, payPeriod, payPeriodEmpId]",{"range":"1881","text":"1882"},"Update the dependencies array to be: [getSingleBatchPayslipEarnings, payPeriod, payPeriodEmpId]",{"range":"1883","text":"1884"},"Update the dependencies array to be: [loadPendingLeaves]",{"range":"1885","text":"1886"},"Update the dependencies array to be: [loadPendingExpenses]",{"range":"1887","text":"1888"},"Update the dependencies array to be: [loadPendingPayslips]",{"range":"1889","text":"1890"},"Update the dependencies array to be: [loadPendingDailyAllowances]",{"range":"1891","text":"1892"},[794,796],"[loadExpenses]",[1531,1533],"[loadEmployees, resetEmployees]",[2446,2448],"[loadLeaves]",[2502,2504],"[loadEmployees]",[2641,2643],"[expenses, expensesdata]",[2414,2416],"[allows_period, getSingleBatchDailyAllowance]",[1318,1320],[2433,2435],"[getSingleBatchPayslip, payslip_period]",[1600,1602],"[loadAllowances, loadDeductions, loadEmployees]",[4970,4972],[2130,2132],"[getSingleBatchPayslipEarnings, payslip_period, single_payslip.empid]",[2234,2236],"[getSingleBatchPayslipDeductions, payslip_period, single_payslip.empid]",[1721,1723],"[editPayslipID, getSinglePayslip]",[3351,3353],[2741,2743],"[allows_period, editDailyAllowanceID, getSingleBatchDailyAllowsDetl]",[5725,5727],"[loadDailyAllowances]",[581,583],"[loadAllowances]",[582,584],"[loadDeductions]",[950,952],"[loadDepartments]",[599,601],"[loadDesignations]",[2678,2680],"[editEmployeeID, getSingleEmployee, loadDepartments, loadDesignations]",[1185,1187],"[editEmployeeID, getSingleBatchTraining]",[1106,1108],"[editEmployeeID, getSingleBatchLeave]",[967,969],"[editEmployeeID, loadSingleBatchFamily]",[1148,1150],"[editEmployeeID, loadSingleBatchExperience]",[956,958],"[editEmployeeID, loadSingleBatchEducation]",[1539,1541],"[getSingleBatchPayslipDeductions, payPeriod, payPeriodEmpId]",[1538,1540],"[getSingleBatchPayslipEarnings, payPeriod, payPeriodEmpId]",[2315,2317],"[loadPendingLeaves]",[1731,1733],"[loadPendingExpenses]",[1862,1864],"[loadPendingPayslips]",[2491,2493],"[loadPendingDailyAllowances]"]