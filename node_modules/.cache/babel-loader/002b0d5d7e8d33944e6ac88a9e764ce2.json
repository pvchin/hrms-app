{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Payrunbatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MaterialTable from \"material-table\";\nimport clsx from \"clsx\";\nimport axios from \"axios\";\nimport { useAsync } from \"react-async\";\nimport { Paper, Grid, Divider, TextField } from \"@material-ui/core\";\nimport { employees_url } from \"../utils/constants\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst url = \"https://course-api.com/react-tabs-project\"; // const loadEmp = async () =>\n//   await fetch(employees_url)\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\n//     .then((res) => res.json());\n// const loadEmp = async () => {\n//   const { data } = await axios.get(employees_url);\n//   return data;\n// };\n\nconst paydata_initial = {\n  name: \"\",\n  wages: 0,\n  allowances: 0,\n  deductions: 0,\n  netpay: 0\n};\nconst payitemsdata_initial = [{\n  id: 1,\n  item: \"\"\n}, {\n  id: 2,\n  item: \"\"\n}, {\n  id: 3,\n  item: \"\"\n}, {\n  id: 4,\n  item: \"\"\n}, {\n  id: 5,\n  item: \"\"\n}, {\n  id: 6,\n  item: \"\"\n}, {\n  id: 7,\n  item: \"\"\n}, {\n  id: 8,\n  item: \"\"\n}, {\n  id: 9,\n  item: \"\"\n}, {\n  id: 10,\n  item: \"\"\n}];\nconst columns = [{\n  title: \"No\",\n  field: \"id\",\n  editable: \"never\",\n  cellStyle: {\n    width: 100,\n    maxWidth: 100\n  }\n}, {\n  title: \"Pay Items\",\n  field: \"item\",\n  cellStyle: {\n    width: 280,\n    maxWidth: 280\n  }\n}];\n\nconst Payrunbatch = () => {\n  _s();\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const {\n    loadEmployees,\n    employees,\n    employees_loading\n  } = useEmployeesContext();\n  const [paydata, setPaydata] = useState(paydata_initial);\n  const [payitemsdata, setPayitemsdata] = useState(payitemsdata_initial);\n  const [loading, setLoading] = useState(true);\n  const [jobs, setJobs] = useState([]);\n  const [value, setValue] = useState(0);\n\n  const handleClick = () => {};\n\n  const handleButtonClick = index => {\n    console.log();\n  };\n\n  useEffect(() => {\n    loadEmployees();\n  }, []);\n\n  if (employees_loading) {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: fixedHeightPaper,\n    style: {\n      backgroundColor: \"black\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.section,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        direction: \"row\",\n        container: true,\n        spacing: 1,\n        style: {\n          border: \"1px solid white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          sm: 2,\n          direction: \"column\",\n          align: \"left\",\n          children: employees.map((item, index) => {\n            console.log(\"item\", item, index);\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                setValue(index);\n                handleButtonClick(index);\n              },\n              className: `classes.jobbtn` // ${index === value && \"activebtn\"} `}\n              ,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          flexItem: true,\n          style: {\n            background: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          sm: 8,\n          children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n            columns: [{\n              title: \"No\",\n              field: \"id\"\n            }, {\n              title: \"Pay Items\",\n              field: \"item\"\n            }],\n            data: payitemsdata,\n            title: \"Payrun History\",\n            options: {\n              filtering: false,\n              search: false,\n              toolbar: false,\n              headerStyle: {\n                backgroundColor: \"orange\",\n                color: \"primary\"\n              },\n              showTitle: false\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payrunbatch, \"UmAelMKcZDMKMdcCaoB3opLFjEI=\", false, function () {\n  return [useStyles, useEmployeesContext];\n});\n\n_c = Payrunbatch;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    padding: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"black\"\n  },\n  card: {\n    backgroundColor: \"black\"\n  },\n  section: {\n    width: \"70vw\",\n    margin: \"5rem auto\",\n    maxWidth: \"var(--max-width)\"\n  },\n  underline: {\n    width: \"5rem\",\n    height: \"0.25rem\",\n    marginBottom: \"1.25rem\",\n    background: \"var(--clr-primary-5)\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  title: {\n    marginbottom: \"4rem\",\n    textAlign: \"center\"\n  },\n  jobscenter: {\n    width: \"80vw\",\n    margin: \"0 auto\",\n    maxWidth: \"var(--max-width)\",\n    flexDirection: \"row\"\n  },\n  btncontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: \"4rem\",\n    flexWrap: \"wrap\"\n  },\n  jobbtn: {\n    background: \"transparent\",\n    borderColor: \"transparent\",\n    textTransform: \"capitalize\",\n    fontSize: \"1.25rem\",\n    letterSpacing: \"var(--spacing)\",\n    margin: \"0 0.5rem\",\n    transition: \"var(--transition)\",\n    cursor: \"pointer\",\n    padding: \"0.25rem 0\",\n    lineHeight: \"1\",\n    outlineColor: \"var(--clr-primary-10)\",\n    \"&:hover\": {\n      color: \"var(--clr-primary-5)\",\n      boxShadow: \"0 2px var(--clr-primary-5)\"\n    }\n  },\n  activebtn: {\n    color: \"var(--clr-primary-5)\",\n    boxShadow: \"0 2px var(--clr-primary-5)\"\n  },\n  jobinfo: {\n    fontWeight: \"400\"\n  }\n}));\nexport default Payrunbatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payrunbatch\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Payrunbatch.js"],"names":["React","useState","useEffect","makeStyles","MaterialTable","clsx","axios","useAsync","Paper","Grid","Divider","TextField","employees_url","useEmployeesContext","drawerWidth","url","paydata_initial","name","wages","allowances","deductions","netpay","payitemsdata_initial","id","item","columns","title","field","editable","cellStyle","width","maxWidth","Payrunbatch","classes","useStyles","fixedHeightPaper","paper","fixedHeight","loadEmployees","employees","employees_loading","paydata","setPaydata","payitemsdata","setPayitemsdata","loading","setLoading","jobs","setJobs","value","setValue","handleClick","handleButtonClick","index","console","log","backgroundColor","section","border","map","e","background","filtering","search","toolbar","headerStyle","color","showTitle","theme","root","flexGrow","container","margin","padding","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","height","spacing","overflow","flexDirection","bcakgroundColor","card","underline","marginBottom","marginLeft","marginRight","marginbottom","textAlign","jobscenter","btncontainer","flexWrap","jobbtn","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","jobinfo","fontWeight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,OAAtB,EAA+BC,SAA/B,QAAgD,mBAAhD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,mBAAT,QAAoC,8BAApC;;AAEA,MAAMC,WAAW,GAAG,GAApB;AACA,MAAMC,GAAG,GAAG,2CAAZ,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,IAAI,EAAE,EADgB;AAEtBC,EAAAA,KAAK,EAAE,CAFe;AAGtBC,EAAAA,UAAU,EAAE,CAHU;AAItBC,EAAAA,UAAU,EAAE,CAJU;AAKtBC,EAAAA,MAAM,EAAE;AALc,CAAxB;AAQA,MAAMC,oBAAoB,GAAG,CAC3B;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE;AAAf,CAD2B,EAE3B;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE;AAAf,CAF2B,EAG3B;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE;AAAf,CAH2B,EAI3B;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE;AAAf,CAJ2B,EAK3B;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE;AAAf,CAL2B,EAM3B;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE;AAAf,CAN2B,EAO3B;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE;AAAf,CAP2B,EAQ3B;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE;AAAf,CAR2B,EAS3B;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE;AAAf,CAT2B,EAU3B;AAAED,EAAAA,EAAE,EAAE,EAAN;AAAUC,EAAAA,IAAI,EAAE;AAAhB,CAV2B,CAA7B;AAaA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,KAAK,EAAE,IAFT;AAGEC,EAAAA,QAAQ,EAAE,OAHZ;AAIEC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,GADE;AAETC,IAAAA,QAAQ,EAAE;AAFD;AAJb,CADc,EAUd;AACEL,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEE,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,GADE;AAETC,IAAAA,QAAQ,EAAE;AAFD;AAHb,CAVc,CAAhB;;AAoBA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAMC,gBAAgB,GAAG9B,IAAI,CAAC4B,OAAO,CAACG,KAAT,EAAgBH,OAAO,CAACI,WAAxB,CAA7B;AACA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA;AAA5B,MAAkD3B,mBAAmB,EAA3E;AACA,QAAM,CAAC4B,OAAD,EAAUC,UAAV,IAAwBzC,QAAQ,CAACe,eAAD,CAAtC;AACA,QAAM,CAAC2B,YAAD,EAAeC,eAAf,IAAkC3C,QAAQ,CAACqB,oBAAD,CAAhD;AACA,QAAM,CAACuB,OAAD,EAAUC,UAAV,IAAwB7C,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAC8C,IAAD,EAAOC,OAAP,IAAkB/C,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgD,KAAD,EAAQC,QAAR,IAAoBjD,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMkD,WAAW,GAAG,MAAM,CAAE,CAA5B;;AAEA,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnCC,IAAAA,OAAO,CAACC,GAAR;AACD,GAFD;;AAIArD,EAAAA,SAAS,CAAC,MAAM;AACdoC,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIE,iBAAJ,EAAuB;AACrB;AAAA;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAGD;;AAED,sBACE,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEL,gBAAlB;AAAoC,IAAA,KAAK,EAAE;AAAEqB,MAAAA,eAAe,EAAE;AAAnB,KAA3C;AAAA,2BACE;AAAS,MAAA,SAAS,EAAEvB,OAAO,CAACwB,OAA5B;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,OAAO,EAAE,CAHX;AAIE,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAJT;AAAA,gCAME,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAA4B,UAAA,SAAS,EAAC,QAAtC;AAA+C,UAAA,KAAK,EAAC,MAArD;AAAA,oBACGnB,SAAS,CAACoB,GAAV,CAAc,CAACnC,IAAD,EAAO6B,KAAP,KAAiB;AAC9BC,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB/B,IAApB,EAA0B6B,KAA1B;AACA,gCACE;AAEE,cAAA,OAAO,EAAGO,CAAD,IAAO;AACdV,gBAAAA,QAAQ,CAACG,KAAD,CAAR;AACAD,gBAAAA,iBAAiB,CAACC,KAAD,CAAjB;AACD,eALH;AAME,cAAA,SAAS,EAAG,gBANd,CAOE;AAPF;AAAA,qCASE;AAAA,0BAAK7B,IAAI,CAACP;AAAV;AAAA;AAAA;AAAA;AAAA;AATF,eACOoC,KADP;AAAA;AAAA;AAAA;AAAA,oBADF;AAaD,WAfA;AADH;AAAA;AAAA;AAAA;AAAA,gBANF,eAwBE,QAAC,OAAD;AACE,UAAA,WAAW,EAAC,UADd;AAEE,UAAA,QAAQ,MAFV;AAGE,UAAA,KAAK,EAAE;AAAEQ,YAAAA,UAAU,EAAE;AAAd;AAHT;AAAA;AAAA;AAAA;AAAA,gBAxBF,eA6BE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAAA,iCACE,QAAC,aAAD;AACE,YAAA,OAAO,EAAE,CACP;AACEnC,cAAAA,KAAK,EAAE,IADT;AAEEC,cAAAA,KAAK,EAAE;AAFT,aADO,EAKP;AACED,cAAAA,KAAK,EAAE,WADT;AAEEC,cAAAA,KAAK,EAAE;AAFT,aALO,CADX;AAWE,YAAA,IAAI,EAAEgB,YAXR;AAYE,YAAA,KAAK,EAAC,gBAZR;AAaE,YAAA,OAAO,EAAE;AACPmB,cAAAA,SAAS,EAAE,KADJ;AAEPC,cAAAA,MAAM,EAAE,KAFD;AAGPC,cAAAA,OAAO,EAAE,KAHF;AAIPC,cAAAA,WAAW,EAAE;AACXT,gBAAAA,eAAe,EAAE,QADN;AAEXU,gBAAAA,KAAK,EAAE;AAFI,eAJN;AAQPC,cAAAA,SAAS,EAAE;AARJ;AAbX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8DD,CAxFD;;GAAMnC,W;UACYE,S,EAEwCrB,mB;;;KAHpDmB,W;AA0FN,MAAME,SAAS,GAAG/B,UAAU,CAAEiE,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADiC;AAIvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,CADC;AAETC,IAAAA,OAAO,EAAE,CAFA;AAGT3C,IAAAA,KAAK,EAAE,MAHE;AAIT4C,IAAAA,OAAO,EAAE,MAJA;AAKTC,IAAAA,mBAAmB,EAAE,yBALZ;AAMTC,IAAAA,YAAY,EAAE,MANL;AAOTC,IAAAA,QAAQ,EAAE,UAPD;AAQTC,IAAAA,IAAI,EAAE,KARG;AASTC,IAAAA,SAAS,EAAE,kBATF;AAUTC,IAAAA,cAAc,EAAE,QAVP;AAWTxB,IAAAA,eAAe,EAAE;AAXR,GAJ4B;AAiBvCnB,EAAAA,WAAW,EAAE;AACX4C,IAAAA,MAAM,EAAE;AADG,GAjB0B;AAoBvC7C,EAAAA,KAAK,EAAE;AACLqC,IAAAA,OAAO,EAAEL,KAAK,CAACc,OAAN,CAAc,EAAd,CADJ;AAEL;AACAR,IAAAA,OAAO,EAAE,MAHJ;AAILS,IAAAA,QAAQ,EAAE,MAJL;AAKLC,IAAAA,aAAa,EAAE,QALV;AAML1B,IAAAA,MAAM,EAAE,WANH;AAOL5B,IAAAA,KAAK,EAAE,MAPF;AAQLoC,IAAAA,KAAK,EAAE,SARF;AASLmB,IAAAA,eAAe,EAAE;AATZ,GApBgC;AA+BvCC,EAAAA,IAAI,EAAE;AACJ9B,IAAAA,eAAe,EAAE;AADb,GA/BiC;AAkCvCC,EAAAA,OAAO,EAAE;AACP3B,IAAAA,KAAK,EAAE,MADA;AAEP0C,IAAAA,MAAM,EAAE,WAFD;AAGPzC,IAAAA,QAAQ,EAAE;AAHH,GAlC8B;AAuCvCwD,EAAAA,SAAS,EAAE;AACTzD,IAAAA,KAAK,EAAE,MADE;AAETmD,IAAAA,MAAM,EAAE,SAFC;AAGTO,IAAAA,YAAY,EAAE,SAHL;AAIT3B,IAAAA,UAAU,EAAE,sBAJH;AAKT4B,IAAAA,UAAU,EAAE,MALH;AAMTC,IAAAA,WAAW,EAAE;AANJ,GAvC4B;AA+CvChE,EAAAA,KAAK,EAAE;AACLiE,IAAAA,YAAY,EAAE,MADT;AAELC,IAAAA,SAAS,EAAE;AAFN,GA/CgC;AAmDvCC,EAAAA,UAAU,EAAE;AACV/D,IAAAA,KAAK,EAAE,MADG;AAEV0C,IAAAA,MAAM,EAAE,QAFE;AAGVzC,IAAAA,QAAQ,EAAE,kBAHA;AAIVqD,IAAAA,aAAa,EAAE;AAJL,GAnD2B;AAyDvCU,EAAAA,YAAY,EAAE;AACZpB,IAAAA,OAAO,EAAE,MADG;AAEZU,IAAAA,aAAa,EAAE,KAFH;AAGZJ,IAAAA,cAAc,EAAE,QAHJ;AAIZQ,IAAAA,YAAY,EAAE,MAJF;AAKZO,IAAAA,QAAQ,EAAE;AALE,GAzDyB;AAgEvCC,EAAAA,MAAM,EAAE;AACNnC,IAAAA,UAAU,EAAE,aADN;AAENoC,IAAAA,WAAW,EAAE,aAFP;AAGNC,IAAAA,aAAa,EAAE,YAHT;AAINC,IAAAA,QAAQ,EAAE,SAJJ;AAKNC,IAAAA,aAAa,EAAE,gBALT;AAMN5B,IAAAA,MAAM,EAAE,UANF;AAON6B,IAAAA,UAAU,EAAE,mBAPN;AAQNC,IAAAA,MAAM,EAAE,SARF;AASN7B,IAAAA,OAAO,EAAE,WATH;AAUN8B,IAAAA,UAAU,EAAE,GAVN;AAWNC,IAAAA,YAAY,EAAE,uBAXR;AAYN,eAAW;AACTtC,MAAAA,KAAK,EAAE,sBADE;AAETuC,MAAAA,SAAS,EAAE;AAFF;AAZL,GAhE+B;AAiFvCC,EAAAA,SAAS,EAAE;AACTxC,IAAAA,KAAK,EAAE,sBADE;AAETuC,IAAAA,SAAS,EAAE;AAFF,GAjF4B;AAqFvCE,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE;AADL;AArF8B,CAAZ,CAAD,CAA5B;AA0FA,eAAe5E,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport { useAsync } from \"react-async\";\r\nimport { Paper, Grid, Divider, TextField } from \"@material-ui/core\";\r\nimport { employees_url } from \"../utils/constants\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst drawerWidth = 240;\r\nconst url = \"https://course-api.com/react-tabs-project\";\r\n\r\n// const loadEmp = async () =>\r\n//   await fetch(employees_url)\r\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\r\n//     .then((res) => res.json());\r\n\r\n// const loadEmp = async () => {\r\n//   const { data } = await axios.get(employees_url);\r\n//   return data;\r\n// };\r\n\r\nconst paydata_initial = {\r\n  name: \"\",\r\n  wages: 0,\r\n  allowances: 0,\r\n  deductions: 0,\r\n  netpay: 0,\r\n};\r\n\r\nconst payitemsdata_initial = [\r\n  { id: 1, item: \"\" },\r\n  { id: 2, item: \"\" },\r\n  { id: 3, item: \"\" },\r\n  { id: 4, item: \"\" },\r\n  { id: 5, item: \"\" },\r\n  { id: 6, item: \"\" },\r\n  { id: 7, item: \"\" },\r\n  { id: 8, item: \"\" },\r\n  { id: 9, item: \"\" },\r\n  { id: 10, item: \"\" },\r\n];\r\n\r\nconst columns = [\r\n  {\r\n    title: \"No\",\r\n    field: \"id\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 100,\r\n      maxWidth: 100,\r\n    },\r\n  },\r\n  {\r\n    title: \"Pay Items\",\r\n    field: \"item\",\r\n    cellStyle: {\r\n      width: 280,\r\n      maxWidth: 280,\r\n    },\r\n  },\r\n];\r\n\r\nconst Payrunbatch = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { loadEmployees, employees, employees_loading } = useEmployeesContext();\r\n  const [paydata, setPaydata] = useState(paydata_initial);\r\n  const [payitemsdata, setPayitemsdata] = useState(payitemsdata_initial);\r\n  const [loading, setLoading] = useState(true);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleClick = () => {};\r\n\r\n  const handleButtonClick = (index) => {\r\n    console.log();\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployees();\r\n  }, []);\r\n\r\n  if (employees_loading) {\r\n    <div>\r\n      <h2>Loading...employees</h2>\r\n    </div>;\r\n  }\r\n\r\n  return (\r\n    <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n      <section className={classes.section}>\r\n        <Grid\r\n          direction=\"row\"\r\n          container\r\n          spacing={1}\r\n          style={{ border: \"1px solid white\" }}\r\n        >\r\n          <Grid container item sm={2} direction=\"column\" align=\"left\">\r\n            {employees.map((item, index) => {\r\n              console.log(\"item\", item, index);\r\n              return (\r\n                <button\r\n                  key={index}\r\n                  onClick={(e) => {\r\n                    setValue(index);\r\n                    handleButtonClick(index);\r\n                  }}\r\n                  className={`classes.jobbtn`}\r\n                  // ${index === value && \"activebtn\"} `}\r\n                >\r\n                  <h3>{item.name}</h3>\r\n                </button>\r\n              );\r\n            })}\r\n          </Grid>\r\n          <Divider\r\n            orientation=\"vertical\"\r\n            flexItem\r\n            style={{ background: \"white\" }}\r\n          />\r\n          <Grid container item sm={8}>\r\n            <MaterialTable\r\n              columns={[\r\n                {\r\n                  title: \"No\",\r\n                  field: \"id\",\r\n                },\r\n                {\r\n                  title: \"Pay Items\",\r\n                  field: \"item\",\r\n                },\r\n              ]}\r\n              data={payitemsdata}\r\n              title=\"Payrun History\"\r\n              options={{\r\n                filtering: false,\r\n                search: false,\r\n                toolbar: false,\r\n                headerStyle: {\r\n                  backgroundColor: \"orange\",\r\n                  color: \"primary\",\r\n                },\r\n                showTitle: false,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"70vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n}));\r\n\r\nexport default Payrunbatch;\r\n"]},"metadata":{},"sourceType":"module"}