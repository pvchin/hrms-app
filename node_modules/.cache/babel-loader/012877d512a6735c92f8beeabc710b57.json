{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\DailyAllowsDetlsTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField } from \"@material-ui/core\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Date\",\n  field: \"date\",\n  type: \"date\"\n}, {\n  title: \"District\",\n  field: \"district\"\n}, {\n  title: \"Operation Type\",\n  field: \"typeoperation\"\n}, {\n  title: \"Client\",\n  field: \"client\"\n}, {\n  title: \"Location/Rig\",\n  field: \"location\"\n}, {\n  title: \"Ticket No/Job No\",\n  field: \"jobno\"\n}, {\n  title: \"Crew Operation\",\n  field: \"crewoperation\"\n}, {\n  title: \"Currency\",\n  field: \"currency\"\n}, {\n  title: \"Job Bonus\",\n  field: \"jobbonus\",\n  type: \"numeric\"\n}, {\n  title: \"Per Diem\",\n  field: \"perdiem\",\n  type: \"numeric\"\n}];\nexport default function DailyAllowsDetlsTable() {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const {\n    dailyallowsdetls,\n    addDailyAllowsDetl,\n    dailyallowsdetls_loading,\n    updateDailyAllowsDetl,\n    deleteDailyAllowsDetl,\n    loadDailyAllowsDetls,\n    getSingleDailyAllowsDetl,\n    getSingleBatchDailyAllowsDetl,\n    resetSingleDailyAllowsDetl,\n    dailyallowsdetl_period,\n    singlebatch_dailyallowsdetl,\n    singlebatch_dailyallowsdetl_loading,\n    dailyallowance_period,\n    single_dailyallowance\n  } = useDailyAllowancesContext(); //const { loadEmployees, employees } = useEmployeesContext();\n\n  useEffect(() => {\n    console.log(\"allowsdetls\", single_dailyallowance.empid, dailyallowance_period);\n    getSingleBatchDailyAllowsDetl(single_dailyallowance.empid, dailyallowance_period);\n  }, []);\n\n  const update_DailyAllowsDetl = async data => {\n    const {\n      id,\n      rec_id,\n      empid,\n      ...fields\n    } = data;\n    console.log(\"update\", data);\n    updateDailyAllowsDetl({\n      id: data.id,\n      empid: empid,\n      ...fields\n    }); //update_Daily Allowances Details;\n    // getSingleBatchDailyAllowsDetls(\n    //   single_dailyallowance.empid,\n    //   dailyallowance_period\n    // );\n  };\n\n  const add_DailyAllowsDetl = async data => {\n    console.log(\"add\", data);\n    const {\n      description,\n      amount\n    } = data;\n    addDailyAllowsDetl({\n      description: description,\n      amount: amount,\n      name: single_dailyallowance.name,\n      empid: single_dailyallowance.empid,\n      period: dailyallowance_period\n    });\n  };\n\n  const delete_DailyAllowance = data => {\n    const {\n      id\n    } = data;\n    deleteDailyAllowsDetl(id); //update_Daily Allowances Details;\n\n    getSingleBatchDailyAllowsDetl(single_dailyallowance.empid, dailyallowance_period);\n  };\n\n  if (singlebatch_dailyallowsdetl_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: [{\n          title: \"Date\",\n          field: \"date\",\n          type: \"date\",\n          dateSetting: {\n            locale: \"en-GB\"\n          },\n          editComponent: props => /*#__PURE__*/_jsxDEV(TextField, {\n            defaultValue: props.value || null,\n            onChange: e => props.onChange(e.target.value),\n            type: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)\n        }, {\n          title: \"District\",\n          field: \"district\"\n        }, {\n          title: \"Operation Type\",\n          field: \"typeoperation\"\n        }, {\n          title: \"Client\",\n          field: \"client\"\n        }, {\n          title: \"Location/Rig\",\n          field: \"location\"\n        }, {\n          title: \"Ticket No/Job No\",\n          field: \"jobno\"\n        }, {\n          title: \"Crew Operation\",\n          field: \"crewoperation\"\n        }, {\n          title: \"Job Bonus\",\n          field: \"jobbonus\",\n          type: \"numeric\",\n          cellStyle: {\n            width: 10,\n            maxWidth: 20\n          },\n          headerStyle: {\n            width: 10,\n            maxWidth: 20\n          }\n        }, {\n          title: \"Per Diem\",\n          field: \"perdiem\",\n          type: \"numeric\",\n          cellStyle: {\n            width: 20,\n            maxWidth: 20\n          },\n          headerStyle: {\n            width: 20,\n            maxWidth: 20\n          }\n        }] //data={singlebatch_dailyallowsdetl}\n        ,\n        title: \"Daily Allowances Details\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              // setData([...data, newData]);\n              add_DailyAllowsDetl(newData); //calc_Earning([...payslipearnings, newData]);\n\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...singlebatch_dailyallowsdetl];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData; //setData([...dataUpdate]);\n\n              update_DailyAllowsDetl(newData); //calc_Earning(dataUpdate);\n\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...singlebatch_dailyallowsdetl];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1); // setData([...dataDelete]);\n\n              delete_DailyAllowance(oldData); //calc_Earning(dataDelete);\n\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"primary\"\n          },\n          showTitle: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DailyAllowsDetlsTable, \"++e3MkJbVy0v/uWVHc2X9pgdO/A=\", false, function () {\n  return [useHistory, useStyles, useDailyAllowancesContext];\n});\n\n_c = DailyAllowsDetlsTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0,\n    width: 1500\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyAllowsDetlsTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/DailyAllowsDetlsTable.js"],"names":["React","useState","useEffect","MaterialTable","MTableToolbar","makeStyles","TextField","useHistory","Link","useDailyAllowancesContext","columns","title","field","type","DailyAllowsDetlsTable","history","classes","useStyles","dailyallowsdetls","addDailyAllowsDetl","dailyallowsdetls_loading","updateDailyAllowsDetl","deleteDailyAllowsDetl","loadDailyAllowsDetls","getSingleDailyAllowsDetl","getSingleBatchDailyAllowsDetl","resetSingleDailyAllowsDetl","dailyallowsdetl_period","singlebatch_dailyallowsdetl","singlebatch_dailyallowsdetl_loading","dailyallowance_period","single_dailyallowance","console","log","empid","update_DailyAllowsDetl","data","id","rec_id","fields","add_DailyAllowsDetl","description","amount","name","period","delete_DailyAllowance","root","maxWidth","paddingTop","dateSetting","locale","editComponent","props","value","e","onChange","target","cellStyle","width","headerStyle","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","onRowDelete","dataDelete","splice","filtering","backgroundColor","color","showTitle","theme","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,aAAP,IAAwBC,aAAxB,QAA6C,gBAA7C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AAEA,SAASC,yBAAT,QAA0C,oCAA1C;;AAEA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE,MAAxB;AAAgCC,EAAAA,IAAI,EAAE;AAAtC,CADc,EAEd;AAAEF,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CAFc,EAGd;AAAED,EAAAA,KAAK,EAAE,gBAAT;AAA2BC,EAAAA,KAAK,EAAE;AAAlC,CAHc,EAId;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAJc,EAKd;AAAED,EAAAA,KAAK,EAAE,cAAT;AAAyBC,EAAAA,KAAK,EAAE;AAAhC,CALc,EAMd;AAAED,EAAAA,KAAK,EAAE,kBAAT;AAA6BC,EAAAA,KAAK,EAAE;AAApC,CANc,EAOd;AAAED,EAAAA,KAAK,EAAE,gBAAT;AAA2BC,EAAAA,KAAK,EAAE;AAAlC,CAPc,EAQd;AAAED,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CARc,EASd;AAAED,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,KAAK,EAAE,UAA7B;AAAyCC,EAAAA,IAAI,EAAE;AAA/C,CATc,EAUd;AAAEF,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,KAAK,EAAE,SAA5B;AAAuCC,EAAAA,IAAI,EAAE;AAA7C,CAVc,CAAhB;AAaA,eAAe,SAASC,qBAAT,GAAiC;AAAA;;AAC9C,MAAIC,OAAO,GAAGR,UAAU,EAAxB;AACA,QAAMS,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAM;AACJC,IAAAA,gBADI;AAEJC,IAAAA,kBAFI;AAGJC,IAAAA,wBAHI;AAIJC,IAAAA,qBAJI;AAKJC,IAAAA,qBALI;AAMJC,IAAAA,oBANI;AAOJC,IAAAA,wBAPI;AAQJC,IAAAA,6BARI;AASJC,IAAAA,0BATI;AAUJC,IAAAA,sBAVI;AAWJC,IAAAA,2BAXI;AAYJC,IAAAA,mCAZI;AAaJC,IAAAA,qBAbI;AAcJC,IAAAA;AAdI,MAeFtB,yBAAyB,EAf7B,CAH8C,CAmB9C;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,OAAO,CAACC,GAAR,CACE,aADF,EAEEF,qBAAqB,CAACG,KAFxB,EAGEJ,qBAHF;AAKAL,IAAAA,6BAA6B,CAC3BM,qBAAqB,CAACG,KADK,EAE3BJ,qBAF2B,CAA7B;AAID,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMK,sBAAsB,GAAG,MAAOC,IAAP,IAAgB;AAC7C,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,MAAN;AAAcJ,MAAAA,KAAd;AAAqB,SAAGK;AAAxB,QAAmCH,IAAzC;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBG,IAAtB;AACAf,IAAAA,qBAAqB,CAAC;AAAEgB,MAAAA,EAAE,EAAED,IAAI,CAACC,EAAX;AAAeH,MAAAA,KAAK,EAAEA,KAAtB;AAA6B,SAAGK;AAAhC,KAAD,CAArB,CAH6C,CAK7C;AACA;AACA;AACA;AACA;AACD,GAVD;;AAYA,QAAMC,mBAAmB,GAAG,MAAOJ,IAAP,IAAgB;AAC1CJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBG,IAAnB;AACA,UAAM;AAAEK,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAA0BN,IAAhC;AACAjB,IAAAA,kBAAkB,CAAC;AACjBsB,MAAAA,WAAW,EAAEA,WADI;AAEjBC,MAAAA,MAAM,EAAEA,MAFS;AAGjBC,MAAAA,IAAI,EAAEZ,qBAAqB,CAACY,IAHX;AAIjBT,MAAAA,KAAK,EAAEH,qBAAqB,CAACG,KAJZ;AAKjBU,MAAAA,MAAM,EAAEd;AALS,KAAD,CAAlB;AAOD,GAVD;;AAYA,QAAMe,qBAAqB,GAAIT,IAAD,IAAU;AACtC,UAAM;AAAEC,MAAAA;AAAF,QAASD,IAAf;AACAd,IAAAA,qBAAqB,CAACe,EAAD,CAArB,CAFsC,CAGtC;;AACAZ,IAAAA,6BAA6B,CAC3BM,qBAAqB,CAACG,KADK,EAE3BJ,qBAF2B,CAA7B;AAID,GARD;;AAUA,MAAID,mCAAJ,EAAyC;AACvC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAEb,OAAO,CAAC8B,IAAxB;AAAA,2BAGE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAZ;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,OAAO,EAAE,CACP;AACErC,UAAAA,KAAK,EAAE,MADT;AAEEC,UAAAA,KAAK,EAAE,MAFT;AAGEC,UAAAA,IAAI,EAAE,MAHR;AAIEoC,UAAAA,WAAW,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAJf;AAKEC,UAAAA,aAAa,EAAGC,KAAD,iBACb,QAAC,SAAD;AACE,YAAA,YAAY,EAAEA,KAAK,CAACC,KAAN,IAAe,IAD/B;AAEE,YAAA,QAAQ,EAAGC,CAAD,IAAOF,KAAK,CAACG,QAAN,CAAeD,CAAC,CAACE,MAAF,CAASH,KAAxB,CAFnB;AAGE,YAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AANJ,SADO,EAcP;AAAE1C,UAAAA,KAAK,EAAE,UAAT;AAAqBC,UAAAA,KAAK,EAAE;AAA5B,SAdO,EAeP;AAAED,UAAAA,KAAK,EAAE,gBAAT;AAA2BC,UAAAA,KAAK,EAAE;AAAlC,SAfO,EAgBP;AAAED,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,KAAK,EAAE;AAA1B,SAhBO,EAiBP;AAAED,UAAAA,KAAK,EAAE,cAAT;AAAyBC,UAAAA,KAAK,EAAE;AAAhC,SAjBO,EAkBP;AAAED,UAAAA,KAAK,EAAE,kBAAT;AAA6BC,UAAAA,KAAK,EAAE;AAApC,SAlBO,EAmBP;AAAED,UAAAA,KAAK,EAAE,gBAAT;AAA2BC,UAAAA,KAAK,EAAE;AAAlC,SAnBO,EAoBP;AACED,UAAAA,KAAK,EAAE,WADT;AAEEC,UAAAA,KAAK,EAAE,UAFT;AAGEC,UAAAA,IAAI,EAAE,SAHR;AAIE4C,UAAAA,SAAS,EAAE;AACTC,YAAAA,KAAK,EAAE,EADE;AAETX,YAAAA,QAAQ,EAAE;AAFD,WAJb;AAQEY,UAAAA,WAAW,EAAE;AACXD,YAAAA,KAAK,EAAE,EADI;AAEXX,YAAAA,QAAQ,EAAE;AAFC;AARf,SApBO,EAiCP;AACEpC,UAAAA,KAAK,EAAE,UADT;AAEEC,UAAAA,KAAK,EAAE,SAFT;AAGEC,UAAAA,IAAI,EAAE,SAHR;AAIE4C,UAAAA,SAAS,EAAE;AACTC,YAAAA,KAAK,EAAE,EADE;AAETX,YAAAA,QAAQ,EAAE;AAFD,WAJb;AAQEY,UAAAA,WAAW,EAAE;AACXD,YAAAA,KAAK,EAAE,EADI;AAEXX,YAAAA,QAAQ,EAAE;AAFC;AARf,SAjCO,CADX,CAgDE;AAhDF;AAiDE,QAAA,KAAK,EAAC,0BAjDR;AAkDE,QAAA,QAAQ,EAAE;AACRa,UAAAA,QAAQ,EAAGC,OAAD,IACR,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,YAAAA,UAAU,CAAC,MAAM;AACf;AACAzB,cAAAA,mBAAmB,CAACqB,OAAD,CAAnB,CAFe,CAGf;;AACAE,cAAAA,OAAO;AACR,aALS,EAKP,IALO,CAAV;AAMD,WAPD,CAFM;AAURG,UAAAA,WAAW,EAAE,CAACL,OAAD,EAAUM,OAAV,KACX,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,YAAAA,UAAU,CAAC,MAAM;AACf,oBAAMG,UAAU,GAAG,CAAC,GAAGxC,2BAAJ,CAAnB;AACA,oBAAMyC,KAAK,GAAGF,OAAO,CAACG,SAAR,CAAkBjC,EAAhC;AACA+B,cAAAA,UAAU,CAACC,KAAD,CAAV,GAAoBR,OAApB,CAHe,CAIf;;AACA1B,cAAAA,sBAAsB,CAAC0B,OAAD,CAAtB,CALe,CAMf;;AAEAE,cAAAA,OAAO;AACR,aATS,EASP,IATO,CAAV;AAUD,WAXD,CAXM;AAuBRQ,UAAAA,WAAW,EAAGJ,OAAD,IACX,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,YAAAA,UAAU,CAAC,MAAM;AACf,oBAAMO,UAAU,GAAG,CAAC,GAAG5C,2BAAJ,CAAnB;AACA,oBAAMyC,KAAK,GAAGF,OAAO,CAACG,SAAR,CAAkBjC,EAAhC;AACAmC,cAAAA,UAAU,CAACC,MAAX,CAAkBJ,KAAlB,EAAyB,CAAzB,EAHe,CAIf;;AACAxB,cAAAA,qBAAqB,CAACsB,OAAD,CAArB,CALe,CAMf;;AACAJ,cAAAA,OAAO;AACR,aARS,EAQP,IARO,CAAV;AASD,WAVD;AAxBM,SAlDZ;AAsFE,QAAA,OAAO,EAAE;AACPW,UAAAA,SAAS,EAAE,IADJ;AAEPf,UAAAA,WAAW,EAAE;AACXgB,YAAAA,eAAe,EAAE,QADN;AAEXC,YAAAA,KAAK,EAAE;AAFI,WAFN;AAMPC,UAAAA,SAAS,EAAE;AANJ;AAtFX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAuGD;;GA7KuB/D,qB;UACRP,U,EACEU,S,EAgBZR,yB;;;KAlBkBK,qB;AA+KxB,MAAMG,SAAS,GAAGZ,UAAU,CAAEyE,KAAD,KAAY;AACvChC,EAAAA,IAAI,EAAE;AACJiC,IAAAA,OAAO,EAAE,CADL;AAEJrB,IAAAA,KAAK,EAAE;AAFH;AADiC,CAAZ,CAAD,CAA5B","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n\r\nconst columns = [\r\n  { title: \"Date\", field: \"date\", type: \"date\" },\r\n  { title: \"District\", field: \"district\" },\r\n  { title: \"Operation Type\", field: \"typeoperation\" },\r\n  { title: \"Client\", field: \"client\" },\r\n  { title: \"Location/Rig\", field: \"location\" },\r\n  { title: \"Ticket No/Job No\", field: \"jobno\" },\r\n  { title: \"Crew Operation\", field: \"crewoperation\" },\r\n  { title: \"Currency\", field: \"currency\" },\r\n  { title: \"Job Bonus\", field: \"jobbonus\", type: \"numeric\" },\r\n  { title: \"Per Diem\", field: \"perdiem\", type: \"numeric\" },\r\n];\r\n\r\nexport default function DailyAllowsDetlsTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const {\r\n    dailyallowsdetls,\r\n    addDailyAllowsDetl,\r\n    dailyallowsdetls_loading,\r\n    updateDailyAllowsDetl,\r\n    deleteDailyAllowsDetl,\r\n    loadDailyAllowsDetls,\r\n    getSingleDailyAllowsDetl,\r\n    getSingleBatchDailyAllowsDetl,\r\n    resetSingleDailyAllowsDetl,\r\n    dailyallowsdetl_period,\r\n    singlebatch_dailyallowsdetl,\r\n    singlebatch_dailyallowsdetl_loading,\r\n    dailyallowance_period,\r\n    single_dailyallowance,\r\n  } = useDailyAllowancesContext();\r\n  //const { loadEmployees, employees } = useEmployeesContext();\r\n\r\n  useEffect(() => {\r\n    console.log(\r\n      \"allowsdetls\",\r\n      single_dailyallowance.empid,\r\n      dailyallowance_period\r\n    );\r\n    getSingleBatchDailyAllowsDetl(\r\n      single_dailyallowance.empid,\r\n      dailyallowance_period\r\n    );\r\n  }, []);\r\n\r\n  const update_DailyAllowsDetl = async (data) => {\r\n    const { id, rec_id, empid, ...fields } = data;\r\n    console.log(\"update\", data);\r\n    updateDailyAllowsDetl({ id: data.id, empid: empid, ...fields });\r\n\r\n    //update_Daily Allowances Details;\r\n    // getSingleBatchDailyAllowsDetls(\r\n    //   single_dailyallowance.empid,\r\n    //   dailyallowance_period\r\n    // );\r\n  };\r\n\r\n  const add_DailyAllowsDetl = async (data) => {\r\n    console.log(\"add\", data);\r\n    const { description, amount } = data;\r\n    addDailyAllowsDetl({\r\n      description: description,\r\n      amount: amount,\r\n      name: single_dailyallowance.name,\r\n      empid: single_dailyallowance.empid,\r\n      period: dailyallowance_period,\r\n    });\r\n  };\r\n\r\n  const delete_DailyAllowance = (data) => {\r\n    const { id } = data;\r\n    deleteDailyAllowsDetl(id);\r\n    //update_Daily Allowances Details;\r\n    getSingleBatchDailyAllowsDetl(\r\n      single_dailyallowance.empid,\r\n      dailyallowance_period\r\n    );\r\n  };\r\n\r\n  if (singlebatch_dailyallowsdetl_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={[\r\n            {\r\n              title: \"Date\",\r\n              field: \"date\",\r\n              type: \"date\",\r\n              dateSetting: { locale: \"en-GB\" },\r\n              editComponent: (props) => (\r\n                <TextField\r\n                  defaultValue={props.value || null}\r\n                  onChange={(e) => props.onChange(e.target.value)}\r\n                  type=\"date\"\r\n                />\r\n              ),\r\n            },\r\n            { title: \"District\", field: \"district\" },\r\n            { title: \"Operation Type\", field: \"typeoperation\" },\r\n            { title: \"Client\", field: \"client\" },\r\n            { title: \"Location/Rig\", field: \"location\" },\r\n            { title: \"Ticket No/Job No\", field: \"jobno\" },\r\n            { title: \"Crew Operation\", field: \"crewoperation\" },\r\n            {\r\n              title: \"Job Bonus\",\r\n              field: \"jobbonus\",\r\n              type: \"numeric\",\r\n              cellStyle: {\r\n                width: 10,\r\n                maxWidth: 20,\r\n              },\r\n              headerStyle: {\r\n                width: 10,\r\n                maxWidth: 20,\r\n              },\r\n            },\r\n            {\r\n              title: \"Per Diem\",\r\n              field: \"perdiem\",\r\n              type: \"numeric\",\r\n              cellStyle: {\r\n                width: 20,\r\n                maxWidth: 20,\r\n              },\r\n              headerStyle: {\r\n                width: 20,\r\n                maxWidth: 20,\r\n              },\r\n            },\r\n          ]}\r\n          //data={singlebatch_dailyallowsdetl}\r\n          title=\"Daily Allowances Details\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // setData([...data, newData]);\r\n                  add_DailyAllowsDetl(newData);\r\n                  //calc_Earning([...payslipearnings, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...singlebatch_dailyallowsdetl];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  //setData([...dataUpdate]);\r\n                  update_DailyAllowsDetl(newData);\r\n                  //calc_Earning(dataUpdate);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...singlebatch_dailyallowsdetl];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  // setData([...dataDelete]);\r\n                  delete_DailyAllowance(oldData);\r\n                  //calc_Earning(dataDelete);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n    width: 1500,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}