{"ast":null,"code":"import { SET_EDITPAYSLIPID, SET_ISPAYSLIPEDITING_ON, SET_ISPAYSLIPEDITING_OFF, SET_SINGLEPAYSLIP, GET_PAYSLIPS_BEGIN, GET_PAYSLIPS_SUCCESS, GET_PAYSLIPS_ERROR, GET_SINGLE_PAYSLIP_BEGIN, GET_SINGLE_PAYSLIP_SUCCESS, GET_SINGLE_PAYSLIP_ERROR, ADD_PAYSLIP_BEGIN, ADD_PAYSLIP_SUCCESS, ADD_PAYSLIP_ERROR, DELETE_PAYSLIP_BEGIN, DELETE_PAYSLIP_SUCCESS, DELETE_PAYSLIP_ERROR, UPDATE_PAYSLIP_BEGIN, UPDATE_PAYSLIP_SUCCESS, UPDATE_PAYSLIP_ERROR, RESET_SINGLE_PAYSLIP } from \"../actions\";\n\nconst payslips_reducer = (state, action) => {\n  // set payslips variables\n  if (action.type === SET_PAYSLIP_PERIOD) {\n    return { ...state,\n      payslip_period: action.payload\n    };\n  }\n\n  if (action.type === SET_EDITPAYSLIPID) {\n    return { ...state,\n      editPayslipID: action.payload\n    };\n  }\n\n  if (action.type === SET_ISPAYSLIPEDITING_ON) {\n    return { ...state,\n      isPayslipEditing: true\n    };\n  }\n\n  if (action.type === SET_ISPAYSLIPEDITING_OFF) {\n    return { ...state,\n      isPayslipEditing: false\n    };\n  }\n\n  if (action.type === RESET_SINGLE_PAYSLIP) {\n    return { ...state,\n      single_payslip: {}\n    };\n  } // get employees\n\n\n  if (action.type === GET_PAYSLIPS_BEGIN) {\n    return { ...state,\n      payslips_loading: true\n    };\n  }\n\n  if (action.type === GET_PAYSLIPS_SUCCESS) {\n    return { ...state,\n      payslips_loading: false,\n      payslips: action.payload\n    };\n  }\n\n  if (action.type === GET_PAYSLIPS_ERROR) {\n    return { ...state,\n      payslips_loading: false,\n      payslips_error: true\n    };\n  } // add employee\n\n\n  if (action.type === ADD_PAYSLIP_BEGIN) {\n    return { ...state,\n      add_payslip_loading: true\n    };\n  }\n\n  if (action.type === ADD_PAYSLIP_SUCCESS) {\n    return { ...state,\n      add_payslips_loading: false,\n      payslips: action.payload\n    };\n  }\n\n  if (action.type === ADD_PAYSLIP_ERROR) {\n    return { ...state,\n      payslips_loading: false,\n      add_payslip_error: true\n    };\n  } // update employee\n\n\n  if (action.type === UPDATE_PAYSLIP_BEGIN) {\n    return { ...state,\n      update_payslip_loading: true\n    };\n  }\n\n  if (action.type === UPDATE_PAYSLIP_SUCCESS) {\n    return { ...state,\n      payslips_loading: false,\n      single_payslip: action.payload\n    };\n  }\n\n  if (action.type === UPDATE_PAYSLIP_ERROR) {\n    return { ...state,\n      update_payslip_loading: false,\n      update_payslip_error: true\n    };\n  } // delete employee\n\n\n  if (action.type === DELETE_PAYSLIP_BEGIN) {\n    return { ...state,\n      delete_payslip_loading: true,\n      delete_payslip_error: false\n    };\n  }\n\n  if (action.type === DELETE_PAYSLIP_SUCCESS) {\n    return { ...state,\n      delete_payslip_loading: false,\n      delete_payslip_error: false\n    };\n  }\n\n  if (action.type === DELETE_PAYSLIP_ERROR) {\n    return { ...state,\n      delete_payslip_loading: false,\n      delete_payslip_error: true\n    };\n  } //single employee\n\n\n  if (action.type === GET_SINGLE_PAYSLIP_BEGIN) {\n    return { ...state,\n      single_payslip_loading: true,\n      single_payslip_error: false\n    };\n  }\n\n  if (action.type === GET_SINGLE_PAYSLIP_SUCCESS) {\n    return { ...state,\n      single_payslip_loading: false,\n      single_payslip: action.payload\n    };\n  }\n\n  if (action.type === GET_SINGLE_PAYSLIP_ERROR) {\n    return { ...state,\n      single_payslip_loading: false,\n      single_payslip_error: true\n    };\n  } // return state;\n\n\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default payslips_reducer;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/reducers/payslips_reducer.js"],"names":["SET_EDITPAYSLIPID","SET_ISPAYSLIPEDITING_ON","SET_ISPAYSLIPEDITING_OFF","SET_SINGLEPAYSLIP","GET_PAYSLIPS_BEGIN","GET_PAYSLIPS_SUCCESS","GET_PAYSLIPS_ERROR","GET_SINGLE_PAYSLIP_BEGIN","GET_SINGLE_PAYSLIP_SUCCESS","GET_SINGLE_PAYSLIP_ERROR","ADD_PAYSLIP_BEGIN","ADD_PAYSLIP_SUCCESS","ADD_PAYSLIP_ERROR","DELETE_PAYSLIP_BEGIN","DELETE_PAYSLIP_SUCCESS","DELETE_PAYSLIP_ERROR","UPDATE_PAYSLIP_BEGIN","UPDATE_PAYSLIP_SUCCESS","UPDATE_PAYSLIP_ERROR","RESET_SINGLE_PAYSLIP","payslips_reducer","state","action","type","SET_PAYSLIP_PERIOD","payslip_period","payload","editPayslipID","isPayslipEditing","single_payslip","payslips_loading","payslips","payslips_error","add_payslip_loading","add_payslips_loading","add_payslip_error","update_payslip_loading","update_payslip_error","delete_payslip_loading","delete_payslip_error","single_payslip_loading","single_payslip_error","Error"],"mappings":"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","sourcesContent":["import {\r\n  SET_EDITPAYSLIPID,\r\n  SET_ISPAYSLIPEDITING_ON,\r\n  SET_ISPAYSLIPEDITING_OFF,\r\n  SET_SINGLEPAYSLIP,\r\n  GET_PAYSLIPS_BEGIN,\r\n  GET_PAYSLIPS_SUCCESS,\r\n  GET_PAYSLIPS_ERROR,\r\n  GET_SINGLE_PAYSLIP_BEGIN,\r\n  GET_SINGLE_PAYSLIP_SUCCESS,\r\n  GET_SINGLE_PAYSLIP_ERROR,\r\n  ADD_PAYSLIP_BEGIN,\r\n  ADD_PAYSLIP_SUCCESS,\r\n  ADD_PAYSLIP_ERROR,\r\n  DELETE_PAYSLIP_BEGIN,\r\n  DELETE_PAYSLIP_SUCCESS,\r\n  DELETE_PAYSLIP_ERROR,\r\n  UPDATE_PAYSLIP_BEGIN,\r\n  UPDATE_PAYSLIP_SUCCESS,\r\n  UPDATE_PAYSLIP_ERROR,\r\n  RESET_SINGLE_PAYSLIP,\r\n} from \"../actions\";\r\n\r\nconst payslips_reducer = (state, action) => {\r\n  // set payslips variables\r\n  if (action.type === SET_PAYSLIP_PERIOD) {\r\n    return { ...state, payslip_period: action.payload };\r\n  }\r\n  if (action.type === SET_EDITPAYSLIPID) {\r\n    return { ...state, editPayslipID: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISPAYSLIPEDITING_ON) {\r\n    return { ...state, isPayslipEditing: true };\r\n  }\r\n  if (action.type === SET_ISPAYSLIPEDITING_OFF) {\r\n    return { ...state, isPayslipEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_PAYSLIP) {\r\n    return { ...state, single_payslip: {} };\r\n  }\r\n  // get employees\r\n  if (action.type === GET_PAYSLIPS_BEGIN) {\r\n    return { ...state, payslips_loading: true };\r\n  }\r\n  if (action.type === GET_PAYSLIPS_SUCCESS) {\r\n    return { ...state, payslips_loading: false, payslips: action.payload };\r\n  }\r\n  if (action.type === GET_PAYSLIPS_ERROR) {\r\n    return { ...state, payslips_loading: false, payslips_error: true };\r\n  }\r\n\r\n  // add employee\r\n  if (action.type === ADD_PAYSLIP_BEGIN) {\r\n    return { ...state, add_payslip_loading: true };\r\n  }\r\n  if (action.type === ADD_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_payslips_loading: false,\r\n      payslips: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_PAYSLIP_ERROR) {\r\n    return { ...state, payslips_loading: false, add_payslip_error: true };\r\n  }\r\n  // update employee\r\n  if (action.type === UPDATE_PAYSLIP_BEGIN) {\r\n    return { ...state, update_payslip_loading: true };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      payslips_loading: false,\r\n      single_payslip: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_PAYSLIP_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_payslip_loading: false,\r\n      update_payslip_error: true,\r\n    };\r\n  }\r\n\r\n  // delete employee\r\n  if (action.type === DELETE_PAYSLIP_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_payslip_loading: true,\r\n      delete_payslip_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_payslip_loading: false,\r\n      delete_payslip_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_PAYSLIP_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_payslip_loading: false,\r\n      delete_payslip_error: true,\r\n    };\r\n  }\r\n\r\n  //single employee\r\n  if (action.type === GET_SINGLE_PAYSLIP_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_payslip_loading: true,\r\n      single_payslip_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIP_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_payslip_loading: false,\r\n      single_payslip: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_PAYSLIP_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_payslip_loading: false,\r\n      single_payslip_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default payslips_reducer;\r\n"]},"metadata":{},"sourceType":"module"}