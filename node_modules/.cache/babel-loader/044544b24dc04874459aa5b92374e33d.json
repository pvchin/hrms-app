{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\LeaveTableViewStaff.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport axios from \"axios\";\nimport MaterialTable from \"material-table\";\nimport { Grid, List, ListItem, ListItemText } from \"@material-ui/core\";\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useLeavesContext } from \"../context/leaves_context\";\nimport { leaves_url } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst initial_state = {\n  name: \"\",\n  to_date: \"\",\n  from_date: \"\",\n  reason: \"\",\n  status: \"Pending\",\n  no_of_days: 0,\n  leave_bal: 0\n}; // const fetchExpensesDetails = selector({\n//   key: \"fetchExpensesDetailsSelector\",\n//   get: async ({ get }) => {\n//     try {\n//       const { data } = await axios.get(expenses_url);\n//       const wpexpirydata = data;\n//       return data;\n//     } catch (error) {\n//       throw error;\n//     }\n//   },\n// });\n\nconst LeaveTableViewStaff = () => {\n  _s();\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const [userdata, setUserdata] = useState([]); //const [userdata, setUserdata] = useRecoilState(userdatastate);\n  //const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\n  //const { state, contents } = ExpensesDetails;\n\n  const {\n    editEmployeeID\n  } = useEmployeesContext();\n  const {\n    leaves,\n    leaves_loading,\n    leaves_error,\n    loadEmpLeaves\n  } = useLeavesContext();\n  useEffect(() => {\n    loadEmpLeaves(editEmployeeID);\n  }, []);\n\n  if (leaves_error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Internet connections problem!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (leaves_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading....Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      children: leaves // .filter((i) => i.empid === loginLevel.loginUserId)\n      .map(row => {\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              children: row.from_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              children: row.to_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              children: row.reason\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sm: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              children: row.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LeaveTableViewStaff, \"Qvv8m3CRD5B2lgo+n8XJbj7Q9Gg=\", false, function () {\n  return [useStyles, useRecoilState, useEmployeesContext, useLeavesContext];\n});\n\n_c = LeaveTableViewStaff;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\nexport default LeaveTableViewStaff;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaveTableViewStaff\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/LeaveTableViewStaff.js"],"names":["React","useState","useEffect","makeStyles","clsx","axios","MaterialTable","Grid","List","ListItem","ListItemText","selector","useRecoilState","useRecoilValueLoadable","loginLevelState","useEmployeesContext","useLeavesContext","leaves_url","drawerWidth","initial_state","name","to_date","from_date","reason","status","no_of_days","leave_bal","LeaveTableViewStaff","classes","useStyles","fixedHeightPaper","paper","fixedHeight","loginLevel","setLoginLevel","userdata","setUserdata","editEmployeeID","leaves","leaves_loading","leaves_error","loadEmpLeaves","root","map","row","id","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Grid, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { selector, useRecoilState, useRecoilValueLoadable } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { leaves_url } from \"../utils/constants\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst initial_state = {\r\n  name: \"\",\r\n  to_date: \"\",\r\n  from_date: \"\",\r\n  reason: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  leave_bal: 0,\r\n};\r\n// const fetchExpensesDetails = selector({\r\n//   key: \"fetchExpensesDetailsSelector\",\r\n//   get: async ({ get }) => {\r\n//     try {\r\n//       const { data } = await axios.get(expenses_url);\r\n//       const wpexpirydata = data;\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// });\r\n\r\nconst LeaveTableViewStaff = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [userdata, setUserdata] = useState([]);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  //const ExpensesDetails = useRecoilValueLoadable(fetchExpensesDetails);\r\n  //const { state, contents } = ExpensesDetails;\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    leaves,\r\n    leaves_loading,\r\n    leaves_error,\r\n        loadEmpLeaves,\r\n  } = useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    loadEmpLeaves(editEmployeeID);\r\n  }, []);\r\n\r\n  if (leaves_error) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connections problem!</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (leaves_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading....Expenses</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        {leaves\r\n          // .filter((i) => i.empid === loginLevel.loginUserId)\r\n          .map((row) => {\r\n            return (\r\n              <ListItem key={row.id}>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.from_date}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.to_date}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.reason}</ListItemText>\r\n                </Grid>\r\n                <Grid item sm={3} align=\"center\">\r\n                  <ListItemText>{row.status}</ListItemText>\r\n                </Grid>\r\n              </ListItem>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default LeaveTableViewStaff;\r\n"]},"metadata":{},"sourceType":"module"}