{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\context\\\\employees_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport reducer from \"../reducers/employees_reducer\";\nimport { employees_url } from \"../utils/constants\";\nimport { SET_EDITEMPLOYEEID, SET_ISEDITING_ON, SET_ISEDITING_OFF, SET_SINGLEEMPLOYEE, GET_EMPLOYEES_BEGIN, GET_EMPLOYEES_SUCCESS, GET_EMPLOYEES_ERROR, GET_SINGLE_EMPLOYEE_BEGIN, GET_SINGLE_EMPLOYEE_SUCCESS, GET_SINGLE_EMPLOYEE_ERROR, ADD_EMPLOYEE_BEGIN, ADD_EMPLOYEE_SUCCESS, ADD_EMPLOYEE_ERROR, DELETE_EMPLOYEE_BEGIN, DELETE_EMPLOYEE_SUCCESS, DELETE_EMPLOYEE_ERROR, UPDATE_EMPLOYEE_BEGIN, UPDATE_EMPLOYEE_SUCCESS, UPDATE_EMPLOYEE_ERROR, RESET_SINGLE_EMPLOYEE } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isEditing: false,\n  alert: {\n    show: false,\n    msg: \"\",\n    type: \"\"\n  },\n  editEmployeeID: null,\n  employees_loading: false,\n  employees_error: false,\n  employees: [],\n  single_employee_loading: false,\n  single_employee_error: false,\n  single_employee: {},\n  delete_employee_loading: false,\n  delete_employee_error: false,\n  update_employee_loading: false,\n  update_employee_error: false,\n  add_employee_loading: false,\n  add_employee_error: false,\n  gender: \"Female\"\n};\nconst EmployeesContext = /*#__PURE__*/React.createContext();\nexport const EmployeesProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const loadEmployees = async () => {\n    dispatch({\n      type: GET_EMPLOYEES_BEGIN\n    });\n\n    try {\n      const res = await fetch(`${employees_url}?gender=\"Female`); //const res = await fetch(employees_url);\n      //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const employees = await res.json();\n      dispatch({\n        type: GET_EMPLOYEES_SUCCESS,\n        payload: employees\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_EMPLOYEES_ERROR\n      });\n    }\n  };\n\n  const setIsEditingOn = () => {\n    dispatch({\n      type: SET_ISEDITING_ON\n    });\n  };\n\n  const setIsEditingOff = () => {\n    dispatch({\n      type: SET_ISEDITING_OFF\n    });\n  };\n\n  const resetSingleEmployee = () => {\n    dispatch({\n      type: RESET_SINGLE_EMPLOYEE\n    });\n  };\n\n  const setEditEmployeeID = async id => {\n    try {\n      dispatch({\n        type: SET_EDITEMPLOYEEID,\n        payload: id\n      });\n    } catch (error) {\n      dispatch(error);\n    }\n  };\n\n  const getSingleEmployee = async id => {\n    dispatch({\n      type: GET_SINGLE_EMPLOYEE_BEGIN\n    });\n\n    try {\n      const {\n        data\n      } = await axios.get(`${employees_url}?id=${id}`);\n      const singleemployee = data;\n      dispatch({\n        type: GET_SINGLE_EMPLOYEE_SUCCESS,\n        payload: singleemployee\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_SINGLE_EMPLOYEE_ERROR\n      });\n    }\n  };\n\n  const addEmployee = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    console.log(\"add\", fields);\n    dispatch({\n      type: ADD_EMPLOYEE_BEGIN\n    });\n\n    try {\n      await fetch(employees_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...fields\n        })\n      });\n      dispatch({\n        type: ADD_EMPLOYEE_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_EMPLOYEE_ERROR\n      });\n    }\n  };\n\n  const updateEmployee = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    console.log(\"upd\", fields);\n    dispatch({\n      type: UPDATE_EMPLOYEE_BEGIN\n    });\n\n    try {\n      await fetch(employees_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_EMPLOYEE_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_EMPLOYEE_ERROR\n      });\n    }\n  };\n\n  const deleteEmployee = async () => {\n    dispatch({\n      type: DELETE_EMPLOYEE_BEGIN\n    });\n\n    try {\n      await fetch(employees_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: state.editEmployeeID\n        })\n      });\n      dispatch({\n        type: DELETE_EMPLOYEE_SUCCESS\n      }); //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_EMPLOYEE_ERROR\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(EmployeesContext.Provider, {\n    value: { ...state,\n      loadEmployees,\n      addEmployee,\n      updateEmployee,\n      deleteEmployee,\n      getSingleEmployee,\n      setEditEmployeeID,\n      setIsEditingOn,\n      setIsEditingOff,\n      resetSingleEmployee\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmployeesProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = EmployeesProvider;\nexport const useEmployeesContext = () => {\n  _s2();\n\n  return useContext(EmployeesContext);\n};\n\n_s2(useEmployeesContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeesProvider\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/context/employees_context.js"],"names":["React","useContext","useEffect","useReducer","axios","reducer","employees_url","SET_EDITEMPLOYEEID","SET_ISEDITING_ON","SET_ISEDITING_OFF","SET_SINGLEEMPLOYEE","GET_EMPLOYEES_BEGIN","GET_EMPLOYEES_SUCCESS","GET_EMPLOYEES_ERROR","GET_SINGLE_EMPLOYEE_BEGIN","GET_SINGLE_EMPLOYEE_SUCCESS","GET_SINGLE_EMPLOYEE_ERROR","ADD_EMPLOYEE_BEGIN","ADD_EMPLOYEE_SUCCESS","ADD_EMPLOYEE_ERROR","DELETE_EMPLOYEE_BEGIN","DELETE_EMPLOYEE_SUCCESS","DELETE_EMPLOYEE_ERROR","UPDATE_EMPLOYEE_BEGIN","UPDATE_EMPLOYEE_SUCCESS","UPDATE_EMPLOYEE_ERROR","RESET_SINGLE_EMPLOYEE","initialState","isEditing","alert","show","msg","type","editEmployeeID","employees_loading","employees_error","employees","single_employee_loading","single_employee_error","single_employee","delete_employee_loading","delete_employee_error","update_employee_loading","update_employee_error","add_employee_loading","add_employee_error","gender","EmployeesContext","createContext","EmployeesProvider","children","state","dispatch","loadEmployees","res","fetch","json","payload","error","setIsEditingOn","setIsEditingOff","resetSingleEmployee","setEditEmployeeID","id","getSingleEmployee","data","get","singleemployee","addEmployee","fields","console","log","method","body","JSON","stringify","err","updateEmployee","deleteEmployee","useEmployeesContext"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/employees_reducer\";\r\nimport { employees_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITEMPLOYEEID,\r\n  SET_ISEDITING_ON,\r\n  SET_ISEDITING_OFF,\r\n  SET_SINGLEEMPLOYEE,\r\n  GET_EMPLOYEES_BEGIN,\r\n  GET_EMPLOYEES_SUCCESS,\r\n  GET_EMPLOYEES_ERROR,\r\n  GET_SINGLE_EMPLOYEE_BEGIN,\r\n  GET_SINGLE_EMPLOYEE_SUCCESS,\r\n  GET_SINGLE_EMPLOYEE_ERROR,\r\n  ADD_EMPLOYEE_BEGIN,\r\n  ADD_EMPLOYEE_SUCCESS,\r\n  ADD_EMPLOYEE_ERROR,\r\n  DELETE_EMPLOYEE_BEGIN,\r\n  DELETE_EMPLOYEE_SUCCESS,\r\n  DELETE_EMPLOYEE_ERROR,\r\n  UPDATE_EMPLOYEE_BEGIN,\r\n  UPDATE_EMPLOYEE_SUCCESS,\r\n  UPDATE_EMPLOYEE_ERROR,\r\n  RESET_SINGLE_EMPLOYEE,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isEditing: false,\r\n  alert: { show: false, msg: \"\", type: \"\" },\r\n  editEmployeeID: null,\r\n  employees_loading: false,\r\n  employees_error: false,\r\n  employees: [],\r\n  single_employee_loading: false,\r\n  single_employee_error: false,\r\n  single_employee: {},\r\n  delete_employee_loading: false,\r\n  delete_employee_error: false,\r\n  update_employee_loading: false,\r\n  update_employee_error: false,\r\n  add_employee_loading: false,\r\n  add_employee_error: false,\r\n  gender: \"Female\",\r\n};\r\n\r\nconst EmployeesContext = React.createContext();\r\n\r\nexport const EmployeesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const loadEmployees = async () => {\r\n    dispatch({ type: GET_EMPLOYEES_BEGIN });\r\n    try {\r\n      const res = await fetch(`${employees_url}?gender=\"Female`);\r\n      //const res = await fetch(employees_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const employees = await res.json();\r\n      dispatch({ type: GET_EMPLOYEES_SUCCESS, payload: employees });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EMPLOYEES_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsEditingOn = () => {\r\n    dispatch({ type: SET_ISEDITING_ON });\r\n  };\r\n\r\n  const setIsEditingOff = () => {\r\n    dispatch({ type: SET_ISEDITING_OFF });\r\n  };\r\n\r\n  const resetSingleEmployee = () => {\r\n    dispatch({ type: RESET_SINGLE_EMPLOYEE });\r\n  };\r\n\r\n  const setEditEmployeeID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITEMPLOYEEID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleEmployee = async (id) => {\r\n    dispatch({ type: GET_SINGLE_EMPLOYEE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${employees_url}?id=${id}`);\r\n      const singleemployee = data;\r\n      dispatch({ type: GET_SINGLE_EMPLOYEE_SUCCESS, payload: singleemployee });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addEmployee = async (data) => {\r\n    const { id, ...fields } = data;\r\n    console.log(\"add\", fields);\r\n    dispatch({ type: ADD_EMPLOYEE_BEGIN });\r\n    try {\r\n      await fetch(employees_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...fields }),\r\n      });\r\n      dispatch({ type: ADD_EMPLOYEE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateEmployee = async (data) => {\r\n    const { id, ...fields } = data;\r\n    console.log(\"upd\", fields);\r\n    dispatch({ type: UPDATE_EMPLOYEE_BEGIN });\r\n    try {\r\n      await fetch(employees_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_EMPLOYEE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteEmployee = async () => {\r\n    dispatch({ type: DELETE_EMPLOYEE_BEGIN });\r\n    try {\r\n      await fetch(employees_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: state.editEmployeeID }),\r\n      });\r\n      dispatch({ type: DELETE_EMPLOYEE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_EMPLOYEE_ERROR });\r\n    }\r\n  };\r\n  return (\r\n    <EmployeesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadEmployees,\r\n        addEmployee,\r\n        updateEmployee,\r\n        deleteEmployee,\r\n        getSingleEmployee,\r\n        setEditEmployeeID,\r\n        setIsEditingOn,\r\n        setIsEditingOff,\r\n        resetSingleEmployee,\r\n      }}\r\n    >\r\n      {children}\r\n    </EmployeesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useEmployeesContext = () => {\r\n  return useContext(EmployeesContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}