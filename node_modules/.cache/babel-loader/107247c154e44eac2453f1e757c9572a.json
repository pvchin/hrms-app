{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Payrunbatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MaterialTable from \"material-table\";\nimport EditableList from \"react-list-editable\";\nimport \"react-list-editable/lib/react-list-editable.css\";\nimport clsx from \"clsx\";\nimport axios from \"axios\";\nimport { useAsync } from \"react-async\";\nimport { Checkbox, Paper, Grid, Divider, TextField, MenuItem, ListSubheader } from \"@material-ui/core\";\nimport { employees_url } from \"../utils/constants\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { payrunState } from \"./data/atomdata\";\nimport { RecoilRoot, atom, selector, useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst url = \"https://course-api.com/react-tabs-project\"; // const loadEmp = async () =>\n//   await fetch(employees_url)\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\n//     .then((res) => res.json());\n// const loadEmp = async () => {\n//   const { data } = await axios.get(employees_url);\n//   return data;\n// };\n\nconst paydata_initial = [{\n  empid: \"\",\n  empname: \"\",\n  wages: 0,\n  allowances: 0,\n  deductions: 0,\n  netpay: 0\n}];\nconst payitemsdata_initial = [{\n  id: 1,\n  item: \"Basic Salary\",\n  amt: 0\n}, {\n  id: 2,\n  item: \"\",\n  amt: 0\n}, {\n  id: 3,\n  item: \"\",\n  amt: 0\n}, {\n  id: 4,\n  item: \"\",\n  amt: 0\n}, {\n  id: 5,\n  item: \"\",\n  amt: 0\n}, {\n  id: 6,\n  item: \"\",\n  amt: 0\n}, {\n  id: 7,\n  item: \"\",\n  amt: 0\n}, {\n  id: 8,\n  item: \"\",\n  amt: 0\n}, {\n  id: 9,\n  item: \"\",\n  amt: 0\n}, {\n  id: 10,\n  item: \"\",\n  amt: 0\n}];\n\nconst Payrunbatch = () => {\n  _s();\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const {\n    loadEmployees,\n    employees,\n    employees_loading\n  } = useEmployeesContext();\n  const {\n    getPayslipitems,\n    payslipitems,\n    payslipitems_loading\n  } = usePayslipsContext();\n  const {\n    loadPayitems,\n    payitems,\n    payitems_loading\n  } = useTablesContext();\n  const [paydata, setPaydata] = useState([]);\n  const [payitemsdata, setPayitemsdata] = useState(payitemsdata_initial);\n  const payrundata = useRecoilValue(payrunState);\n  const [loadPaydata, setLoadPaydata] = useState(true);\n  const [jobs, setJobs] = useState([]);\n  const [value, setValue] = useState(0);\n\n  const handleClick = () => {};\n\n  const handleButtonClick = (item, index) => {\n    const {\n      id,\n      name,\n      basic_pay\n    } = item;\n    const newData = {\n      empid: id,\n      name: name,\n      basic_pay: basic_pay,\n      rowindex: index\n    };\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        update_Paydata(newData);\n        resolve();\n      }, 1000);\n    });\n    console.log(\"addpaydata\", paydata);\n  };\n\n  useEffect(() => {\n    loadEmployees();\n    loadPayitems();\n  }, []);\n  useEffect(() => {\n    if (employees) {\n      build_Paydata();\n      setLoadPaydata(false);\n    }\n  }, [loadPaydata]);\n\n  const build_Paydata = () => {\n    console.log(\"build here\");\n    employees.forEach((item, index) => {\n      const {\n        id,\n        name,\n        basic_pay\n      } = item;\n      const newData = {\n        empid: id,\n        name: name,\n        basic_pay: basic_pay,\n        rowindex: index\n      };\n      const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n          update_Paydata(newData);\n          resolve();\n        }, 1000);\n      });\n    });\n    console.log(\"paydata\", paydata);\n  };\n\n  const update_Paydata = newData => {\n    setPaydata([...paydata, newData]);\n  };\n\n  const onListChange = newList => {\n    setPayitemsdata(newList);\n    console.log(\"list\", payitemsdata, newList);\n  };\n\n  if (employees_loading) {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }, this);\n  }\n\n  if (payitems_loading) {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...payitems\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: fixedHeightPaper,\n    style: {\n      backgroundColor: \"black\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.section,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        direction: \"row\",\n        container: true,\n        spacing: 1,\n        style: {\n          border: \"1px solid white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 2,\n          direction: \"column\",\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Employees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Pay Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 2,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 4,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Pay Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        direction: \"row\",\n        container: true,\n        spacing: 1,\n        style: {\n          border: \"1px solid white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          sm: 2,\n          direction: \"column\",\n          align: \"left\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: [employees.map((item, index) => {\n            //console.log(\"item\", item, index);\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                setValue(index);\n                handleButtonClick(item, index);\n              },\n              className: `classes.jobbtn` // ${index === value && \"activebtn\"} `}\n              ,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: build_Paydata,\n            children: \"Build\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          sm: 3,\n          align: \"left\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: payitemsdata.map((row, index) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"filled\",\n                  type: \"text\",\n                  style: {\n                    width: 200\n                  },\n                  value: row.item,\n                  select: true,\n                  children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n                    children: \"Wages\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 23\n                  }, this), payitems.filter(function (item) {\n                    return item.pay_type == \"Wages\";\n                  }).map(row => {\n                    return /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: row.name,\n                      children: row.name\n                    }, row.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 29\n                    }, this);\n                  }), /*#__PURE__*/_jsxDEV(ListSubheader, {\n                    children: \"Allowances\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 23\n                  }, this), payitems.filter(function (item) {\n                    return item.pay_type == \"Allowances\";\n                  }).map(row => {\n                    return /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: row.name,\n                      children: row.name\n                    }, row.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 29\n                    }, this);\n                  }), /*#__PURE__*/_jsxDEV(ListSubheader, {\n                    children: \"Deductions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 23\n                  }, this), payitems.filter(function (item) {\n                    return item.pay_type == \"Deductions\";\n                  }).map(row => {\n                    return /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: row.name,\n                      children: row.name\n                    }, row.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 29\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          sm: 2 //align=\"right\"\n          ,\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: payitemsdata.map((row, index) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"filled\",\n                type: \"currency\",\n                style: {\n                  width: 100\n                },\n                value: row.amt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          sm: 4,\n          direction: \"column\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Pay Run: \", payrundata.payrun]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Pay Period: \", payrundata.period]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"fullWidth\",\n            className: classes.divider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Wages:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"TAP Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"SCP Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Allowances:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Deductions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"fullWidth\",\n            className: classes.divider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nett Pay:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payrunbatch, \"MKOa0X6BRkbFCnqbxYfQraPVyIY=\", false, function () {\n  return [useStyles, useEmployeesContext, usePayslipsContext, useTablesContext, useRecoilValue];\n});\n\n_c = Payrunbatch;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    padding: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"black\"\n  },\n  card: {\n    backgroundColor: \"black\"\n  },\n  section: {\n    width: \"70vw\",\n    margin: \"5rem auto\",\n    maxWidth: \"var(--max-width)\"\n  },\n  underline: {\n    width: \"5rem\",\n    height: \"0.25rem\",\n    marginBottom: \"1.25rem\",\n    background: \"var(--clr-primary-5)\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  title: {\n    marginbottom: \"4rem\",\n    textAlign: \"center\"\n  },\n  jobscenter: {\n    width: \"80vw\",\n    margin: \"0 auto\",\n    maxWidth: \"var(--max-width)\",\n    flexDirection: \"row\"\n  },\n  btncontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: \"4rem\",\n    flexWrap: \"wrap\"\n  },\n  jobbtn: {\n    background: \"transparent\",\n    borderColor: \"transparent\",\n    textTransform: \"capitalize\",\n    fontSize: \"1.25rem\",\n    letterSpacing: \"var(--spacing)\",\n    margin: \"0 0.5rem\",\n    transition: \"var(--transition)\",\n    cursor: \"pointer\",\n    padding: \"0.25rem 0\",\n    lineHeight: \"1\",\n    outlineColor: \"var(--clr-primary-10)\",\n    \"&:hover\": {\n      color: \"var(--clr-primary-5)\",\n      boxShadow: \"0 2px var(--clr-primary-5)\"\n    }\n  },\n  activebtn: {\n    color: \"var(--clr-primary-5)\",\n    boxShadow: \"0 2px var(--clr-primary-5)\"\n  },\n  jobinfo: {\n    fontWeight: \"400\"\n  },\n  divider: {\n    // Theme Color, or use css color in quote\n    background: \"white\"\n  }\n}));\nexport default Payrunbatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payrunbatch\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Payrunbatch.js"],"names":["React","useState","useEffect","makeStyles","MaterialTable","EditableList","clsx","axios","useAsync","Checkbox","Paper","Grid","Divider","TextField","MenuItem","ListSubheader","employees_url","useEmployeesContext","usePayslipsContext","useTablesContext","payrunState","RecoilRoot","atom","selector","useRecoilState","useRecoilValue","useSetRecoilState","drawerWidth","url","paydata_initial","empid","empname","wages","allowances","deductions","netpay","payitemsdata_initial","id","item","amt","Payrunbatch","classes","useStyles","fixedHeightPaper","paper","fixedHeight","loadEmployees","employees","employees_loading","getPayslipitems","payslipitems","payslipitems_loading","loadPayitems","payitems","payitems_loading","paydata","setPaydata","payitemsdata","setPayitemsdata","payrundata","loadPaydata","setLoadPaydata","jobs","setJobs","value","setValue","handleClick","handleButtonClick","index","name","basic_pay","newData","rowindex","promise","Promise","resolve","reject","setTimeout","update_Paydata","console","log","build_Paydata","forEach","onListChange","newList","backgroundColor","section","border","map","e","row","width","filter","pay_type","payrun","period","divider","theme","root","flexGrow","container","margin","padding","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","height","spacing","overflow","flexDirection","color","bcakgroundColor","card","maxWidth","underline","marginBottom","background","marginLeft","marginRight","title","marginbottom","textAlign","jobscenter","btncontainer","flexWrap","jobbtn","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","jobinfo","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport EditableList from \"react-list-editable\";\r\nimport \"react-list-editable/lib/react-list-editable.css\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport { useAsync } from \"react-async\";\r\nimport {\r\n  Checkbox,\r\n  Paper,\r\n  Grid,\r\n  Divider,\r\n  TextField,\r\n  MenuItem,\r\n  ListSubheader,\r\n} from \"@material-ui/core\";\r\nimport { employees_url } from \"../utils/constants\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { payrunState } from \"./data/atomdata\";\r\nimport {\r\n  RecoilRoot,\r\n  atom,\r\n  selector,\r\n  useRecoilState,\r\n  useRecoilValue,\r\n  useSetRecoilState,\r\n} from \"recoil\";\r\n\r\nconst drawerWidth = 240;\r\nconst url = \"https://course-api.com/react-tabs-project\";\r\n\r\n// const loadEmp = async () =>\r\n//   await fetch(employees_url)\r\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\r\n//     .then((res) => res.json());\r\n\r\n// const loadEmp = async () => {\r\n//   const { data } = await axios.get(employees_url);\r\n//   return data;\r\n// };\r\n\r\nconst paydata_initial = [\r\n  {\r\n    empid: \"\",\r\n    empname: \"\",\r\n    wages: 0,\r\n    allowances: 0,\r\n    deductions: 0,\r\n    netpay: 0,\r\n  },\r\n];\r\n\r\nconst payitemsdata_initial = [\r\n  { id: 1, item: \"Basic Salary\", amt: 0 },\r\n  { id: 2, item: \"\", amt: 0 },\r\n  { id: 3, item: \"\", amt: 0 },\r\n  { id: 4, item: \"\", amt: 0 },\r\n  { id: 5, item: \"\", amt: 0 },\r\n  { id: 6, item: \"\", amt: 0 },\r\n  { id: 7, item: \"\", amt: 0 },\r\n  { id: 8, item: \"\", amt: 0 },\r\n  { id: 9, item: \"\", amt: 0 },\r\n  { id: 10, item: \"\", amt: 0 },\r\n];\r\n\r\nconst Payrunbatch = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { loadEmployees, employees, employees_loading } = useEmployeesContext();\r\n  const { getPayslipitems, payslipitems, payslipitems_loading } =\r\n    usePayslipsContext();\r\n  const { loadPayitems, payitems, payitems_loading } = useTablesContext();\r\n  const [paydata, setPaydata] = useState([]);\r\n  const [payitemsdata, setPayitemsdata] = useState(payitemsdata_initial);\r\n  const payrundata = useRecoilValue(payrunState);\r\n  const [loadPaydata, setLoadPaydata] = useState(true);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleClick = () => {};\r\n\r\n  const handleButtonClick = (item, index) => {\r\n    const { id, name, basic_pay } = item;\r\n    const newData = {\r\n      empid: id,\r\n      name: name,\r\n      basic_pay: basic_pay,\r\n      rowindex: index,\r\n    };\r\n    const promise = new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        update_Paydata(newData);\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n\r\n    console.log(\"addpaydata\", paydata);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployees();\r\n    loadPayitems();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (employees) {\r\n      build_Paydata();\r\n      setLoadPaydata(false);\r\n    }\r\n  }, [loadPaydata]);\r\n\r\n  const build_Paydata = () => {\r\n    console.log(\"build here\");\r\n    employees.forEach((item, index) => {\r\n      const { id, name, basic_pay } = item;\r\n      const newData = {\r\n        empid: id,\r\n        name: name,\r\n        basic_pay: basic_pay,\r\n        rowindex: index,\r\n      };\r\n      const promise = new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          update_Paydata(newData);\r\n          resolve();\r\n        }, 1000);\r\n      });\r\n    });\r\n    console.log(\"paydata\", paydata);\r\n  };\r\n\r\n  const update_Paydata = (newData) => {\r\n    setPaydata([...paydata, newData]);\r\n  };\r\n\r\n  const onListChange = (newList) => {\r\n    setPayitemsdata(newList);\r\n    console.log(\"list\", payitemsdata, newList);\r\n  };\r\n\r\n  if (employees_loading) {\r\n    <div>\r\n      <h2>Loading...employees</h2>\r\n    </div>;\r\n  }\r\n  if (payitems_loading) {\r\n    <div>\r\n      <h2>Loading...payitems</h2>\r\n    </div>;\r\n  }\r\n\r\n  return (\r\n    <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n      <section className={classes.section}>\r\n        <Grid\r\n          direction=\"row\"\r\n          container\r\n          spacing={1}\r\n          style={{ border: \"1px solid white\" }}\r\n        >\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            direction=\"column\"\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <h3>Employees</h3>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <h3>Pay Items</h3>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <h3>Amount</h3>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            sm={4}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <h3>Pay Details</h3>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          direction=\"row\"\r\n          container\r\n          spacing={1}\r\n          style={{ border: \"1px solid white\" }}\r\n        >\r\n          <Grid\r\n            container\r\n            item\r\n            sm={2}\r\n            direction=\"column\"\r\n            align=\"left\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            {employees.map((item, index) => {\r\n              //console.log(\"item\", item, index);\r\n              return (\r\n                <button\r\n                  key={index}\r\n                  onClick={(e) => {\r\n                    setValue(index);\r\n                    handleButtonClick(item, index);\r\n                  }}\r\n                  className={`classes.jobbtn`}\r\n                  // ${index === value && \"activebtn\"} `}\r\n                >\r\n                  <h3>{item.name}</h3>\r\n                </button>\r\n              );\r\n            })}\r\n            <button type=\"submit\" onClick={build_Paydata}>\r\n              Build\r\n            </button>\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            item\r\n            sm={3}\r\n            align=\"left\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <form>\r\n              <ul>\r\n                {payitemsdata.map((row, index) => {\r\n                  return (\r\n                    <TextField\r\n                      variant=\"filled\"\r\n                      type=\"text\"\r\n                      style={{ width: 200 }}\r\n                      value={row.item}\r\n                      select\r\n                    >\r\n                      <ListSubheader>Wages</ListSubheader>\r\n                      {payitems\r\n                        .filter(function (item) {\r\n                          return item.pay_type == \"Wages\";\r\n                        })\r\n                        .map((row) => {\r\n                          return (\r\n                            <MenuItem key={row.id} value={row.name}>\r\n                              {row.name}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                      <ListSubheader>Allowances</ListSubheader>\r\n                      {payitems\r\n                        .filter(function (item) {\r\n                          return item.pay_type == \"Allowances\";\r\n                        })\r\n                        .map((row) => {\r\n                          return (\r\n                            <MenuItem key={row.id} value={row.name}>\r\n                              {row.name}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                      <ListSubheader>Deductions</ListSubheader>\r\n                      {payitems\r\n                        .filter(function (item) {\r\n                          return item.pay_type == \"Deductions\";\r\n                        })\r\n                        .map((row) => {\r\n                          return (\r\n                            <MenuItem key={row.id} value={row.name}>\r\n                              {row.name}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                    </TextField>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </form>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            item\r\n            sm={2}\r\n            //align=\"right\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <ul>\r\n              {payitemsdata.map((row, index) => {\r\n                return (\r\n                  <TextField\r\n                    variant=\"filled\"\r\n                    type=\"currency\"\r\n                    style={{ width: 100 }}\r\n                    value={row.amt}\r\n                  />\r\n                );\r\n              })}\r\n            </ul>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            item\r\n            sm={4}\r\n            direction=\"column\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <h3>Pay Run: {payrundata.payrun}</h3>\r\n            <h3>Pay Period: {payrundata.period}</h3>\r\n            <h3>Name:</h3>\r\n            <Divider variant=\"fullWidth\" className={classes.divider} />\r\n            <h3>Wages:</h3>\r\n            <h3>TAP Amount:</h3>\r\n            <h3>SCP Amount:</h3>\r\n            <h3>Allowances:</h3>\r\n            <h3>Deductions:</h3>\r\n            <Divider variant=\"fullWidth\" className={classes.divider} />\r\n            <h3>Nett Pay:</h3>\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"70vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: \"white\",\r\n  },\r\n}));\r\n\r\nexport default Payrunbatch;\r\n"]},"metadata":{},"sourceType":"module"}