{"ast":null,"code":"import { SET_EDITDAILYALLOWANCEID, SET_ISDAILYALLOWANCEEDITING_ON, SET_ISDAILYALLOWANCEEDITING_OFF, SET_DAILYALLOWANCE_PERIOD, SET_SINGLEDAILYALLOWANCE, GET_DAILYALLOWANCES_BEGIN, GET_DAILYALLOWANCES_SUCCESS, GET_DAILYALLOWANCES_ERROR, GET_UNPAIDDAILYALLOWS_BEGIN, GET_UNPAIDDAILYALLOWS_SUCCESS, GET_UNPAIDDAILYALLOWS_ERROR, GET_SINGLE_DAILYALLOWANCE_BEGIN, GET_SINGLE_DAILYALLOWANCE_SUCCESS, GET_SINGLE_DAILYALLOWANCE_ERROR, GET_SINGLEBATCH_DAILYALLOWANCE_BEGIN, GET_SINGLEBATCH_DAILYALLOWANCE_SUCCESS, GET_SINGLEBATCH_DAILYALLOWANCE_ERROR, ADD_DAILYALLOWANCE_BEGIN, ADD_DAILYALLOWANCE_SUCCESS, ADD_DAILYALLOWANCE_ERROR, DELETE_DAILYALLOWANCE_BEGIN, DELETE_DAILYALLOWANCE_SUCCESS, DELETE_DAILYALLOWANCE_ERROR, UPDATE_DAILYALLOWANCE_BEGIN, UPDATE_DAILYALLOWANCE_SUCCESS, UPDATE_DAILYALLOWANCE_ERROR, RESET_SINGLE_DAILYALLOWANCE // daily allowances details\n, LOAD_DAILYALLOWSDETLS, SET_DAILYALLOWSDETL_PERIOD, GET_DAILYALLOWSDETLS_BEGIN, GET_DAILYALLOWSDETLS_SUCCESS, GET_DAILYALLOWSDETLS_ERROR, GET_SINGLE_DAILYALLOWSDETL_BEGIN, GET_SINGLE_DAILYALLOWSDETL_SUCCESS, GET_SINGLE_DAILYALLOWSDETL_ERROR, GET_SINGLEBATCH_DAILYALLOWSDETL_BEGIN, GET_SINGLEBATCH_DAILYALLOWSDETL_SUCCESS, GET_SINGLEBATCH_DAILYALLOWSDETL_ERROR, ADD_DAILYALLOWSDETL_BEGIN, ADD_DAILYALLOWSDETL_SUCCESS, ADD_DAILYALLOWSDETL_ERROR, DELETE_DAILYALLOWSDETL_BEGIN, DELETE_DAILYALLOWSDETL_SUCCESS, DELETE_DAILYALLOWSDETL_ERROR, UPDATE_DAILYALLOWSDETL_BEGIN, UPDATE_DAILYALLOWSDETL_SUCCESS, UPDATE_DAILYALLOWSDETL_ERROR } from \"../actions\";\n\nconst dailyallowances_reducer = (state, action) => {\n  // set daily allowances variables\n  if (action.type === SET_DAILYALLOWANCE_PERIOD) {\n    return { ...state,\n      dailyallowance_period: action.payload\n    };\n  }\n\n  if (action.type === SET_EDITDAILYALLOWANCEID) {\n    return { ...state,\n      editDailyAllowanceID: action.payload\n    };\n  }\n\n  if (action.type === SET_ISDAILYALLOWANCEEDITING_ON) {\n    return { ...state,\n      isDailyAllowanceEditing: true\n    };\n  }\n\n  if (action.type === SET_ISDAILYALLOWANCEEDITING_OFF) {\n    return { ...state,\n      isDailyAllowanceEditing: false\n    };\n  }\n\n  if (action.type === RESET_SINGLE_DAILYALLOWANCE) {\n    return { ...state,\n      single_dailyallowance: {}\n    };\n  } // get daily allowances\n\n\n  if (action.type === GET_DAILYALLOWANCES_BEGIN) {\n    return { ...state,\n      dailyallowances_loading: true\n    };\n  }\n\n  if (action.type === GET_DAILYALLOWANCES_SUCCESS) {\n    return { ...state,\n      dailyallowances_loading: false,\n      dailyallowances: action.payload\n    };\n  }\n\n  if (action.type === GET_DAILYALLOWANCES_ERROR) {\n    return { ...state,\n      dailyallowances_loading: false,\n      dailyallowances_error: true\n    };\n  } // add daily allowance\n\n\n  if (action.type === ADD_DAILYALLOWANCE_BEGIN) {\n    return { ...state,\n      add_dailyallowance_loading: true\n    };\n  }\n\n  if (action.type === ADD_DAILYALLOWANCE_SUCCESS) {\n    return { ...state,\n      add_dailyallowance_loading: false,\n      dailyallowances: action.payload\n    };\n  }\n\n  if (action.type === ADD_DAILYALLOWANCE_ERROR) {\n    return { ...state,\n      add_dailyallowance_loading: false,\n      add_dailyallowance_error: true\n    };\n  } // update daily allowances\n\n\n  if (action.type === UPDATE_DAILYALLOWANCE_BEGIN) {\n    return { ...state,\n      update_dailyallowance_loading: true\n    };\n  }\n\n  if (action.type === UPDATE_DAILYALLOWANCE_SUCCESS) {\n    return { ...state,\n      update_dailyallowances_loading: false,\n      single_dailyallowance: action.payload\n    };\n  }\n\n  if (action.type === UPDATE_DAILYALLOWANCE_ERROR) {\n    return { ...state,\n      update_dailyallowance_loading: false,\n      update_dailyallowance_error: true\n    };\n  } // delete daily allowances\n\n\n  if (action.type === DELETE_DAILYALLOWANCE_BEGIN) {\n    return { ...state,\n      delete_dailyallowance_loading: true,\n      delete_dailyallowance_error: false\n    };\n  }\n\n  if (action.type === DELETE_DAILYALLOWANCE_SUCCESS) {\n    return { ...state,\n      delete_dailyallowance_loading: false,\n      delete_dailyallowance_error: false\n    };\n  }\n\n  if (action.type === DELETE_DAILYALLOWANCE_ERROR) {\n    return { ...state,\n      delete_dailyallowance_loading: false,\n      delete_dailyallowance_error: true\n    };\n  } //single daily allowances\n\n\n  if (action.type === GET_SINGLE_DAILYALLOWANCE_BEGIN) {\n    return { ...state,\n      single_dailyallowance_loading: true,\n      single_dailyallowance_error: false\n    };\n  }\n\n  if (action.type === GET_SINGLE_DAILYALLOWANCE_SUCCESS) {\n    return { ...state,\n      single_dailyallowance_loading: false,\n      single_dailyallowance: action.payload\n    };\n  }\n\n  if (action.type === GET_SINGLE_DAILYALLOWANCE_ERROR) {\n    return { ...state,\n      single_dailyallowance_loading: false,\n      single_dailyallowance_error: true\n    };\n  } //single batch daily allowances\n\n\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWANCE_BEGIN) {\n    return { ...state,\n      singlebatch_dailyallowance_loading: true,\n      singlebatch_dailyallowance_error: false\n    };\n  }\n\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWANCE_SUCCESS) {\n    return { ...state,\n      singlebatch_dailyallowance_loading: false,\n      singlebatch_dailyallowance: action.payload\n    };\n  }\n\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWANCE_ERROR) {\n    return { ...state,\n      singlebatch_dailyallowance_loading: false,\n      singlebatch_dailyallowance_error: true\n    };\n  } // daily allowances details\n  // set daily allowances details variables\n\n\n  if (action.type === SET_DAILYALLOWSDETL_PERIOD) {\n    return { ...state,\n      dailyallowsdetl_period: action.payload\n    };\n  } // get daily allowances details\n\n\n  if (action.type === GET_DAILYALLOWSDETLS_BEGIN) {\n    return { ...state,\n      dailyallowsdetls_loading: true\n    };\n  }\n\n  if (action.type === GET_DAILYALLOWSDETLS_SUCCESS) {\n    return { ...state,\n      dailyallowsdetls_loading: false,\n      dailyallowsdetls: action.payload\n    };\n  }\n\n  if (action.type === GET_DAILYALLOWSDETLS_ERROR) {\n    return { ...state,\n      dailyallowsdetls_loading: false,\n      dailyallowsdetls_error: true\n    };\n  } // get unpaid daily allowances details\n\n\n  if (action.type === GET_UNPAIDDAILYALLOWS_BEGIN) {\n    return { ...state,\n      unpaid_dailyallows_loading: true\n    };\n  }\n\n  if (action.type === GET_UNPAIDDAILYALLOWS_SUCCESS) {\n    return { ...state,\n      unpaid_dailyallows_loading: false,\n      dailyallowsdetls: action.payload\n    };\n  }\n\n  if (action.type === GET_UNPAIDDAILYALLOWS_ERROR) {\n    return { ...state,\n      unpaid_dailyallowsdetls_loading: false,\n      unpaid_dailyallowsdetls_error: true\n    };\n  } // add daily allowance details\n\n\n  if (action.type === ADD_DAILYALLOWSDETL_BEGIN) {\n    return { ...state,\n      add_dailyallowsdetl_loading: true\n    };\n  }\n\n  if (action.type === ADD_DAILYALLOWSDETL_SUCCESS) {\n    return { ...state,\n      add_dailyallowsdetl_loading: false,\n      dailyallowsdetls: action.payload\n    };\n  }\n\n  if (action.type === ADD_DAILYALLOWSDETL_ERROR) {\n    return { ...state,\n      add_dailyallowsdetl_loading: false,\n      add_dailyallowsdetl_error: true\n    };\n  } // update daily allowances\n\n\n  if (action.type === UPDATE_DAILYALLOWSDETL_BEGIN) {\n    return { ...state,\n      update_dailyallowsdetl_loading: true\n    };\n  }\n\n  if (action.type === UPDATE_DAILYALLOWSDETL_SUCCESS) {\n    return { ...state,\n      update_dailyallowsdetl_loading: false,\n      single_dailyallowsdetl: action.payload\n    };\n  }\n\n  if (action.type === UPDATE_DAILYALLOWSDETL_ERROR) {\n    return { ...state,\n      update_dailyallowsdetl_loading: false,\n      update_dailyallowsdetl_error: true\n    };\n  } // delete daily allowances details\n\n\n  if (action.type === DELETE_DAILYALLOWSDETL_BEGIN) {\n    return { ...state,\n      delete_dailyallowsdetl_loading: true,\n      delete_dailyallowsdetl_error: false\n    };\n  }\n\n  if (action.type === DELETE_DAILYALLOWSDETL_SUCCESS) {\n    return { ...state,\n      delete_dailyallowsdetl_loading: false,\n      delete_dailyallowsdetl_error: false\n    };\n  }\n\n  if (action.type === DELETE_DAILYALLOWSDETL_ERROR) {\n    return { ...state,\n      delete_dailyallowsdetl_loading: false,\n      delete_dailyallowsdetl_error: true\n    };\n  } //single daily allowances details\n\n\n  if (action.type === GET_SINGLE_DAILYALLOWSDETL_BEGIN) {\n    return { ...state,\n      single_dailyallowsdetl_loading: true,\n      single_dailyallowsdetl_error: false\n    };\n  }\n\n  if (action.type === GET_SINGLE_DAILYALLOWSDETL_SUCCESS) {\n    return { ...state,\n      single_dailyallowsdetl_loading: false,\n      single_dailyallowsdetl: action.payload\n    };\n  }\n\n  if (action.type === GET_SINGLE_DAILYALLOWSDETL_ERROR) {\n    return { ...state,\n      single_dailyallowsdetl_loading: false,\n      single_dailyallowsdetl_error: true\n    };\n  } //single daily batch allowances details\n\n\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWSDETL_BEGIN) {\n    return { ...state,\n      singlebatch_dailyallowsdetl_loading: true,\n      singlebatch_dailyallowsdetl_error: false\n    };\n  }\n\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWSDETL_SUCCESS) {\n    // console.log(\"reducer\", action.payload);\n    return { ...state,\n      singlebatch_dailyallowsdetl_loading: false,\n      singlebatch_dailyallowsdetl: action.payload\n    };\n  }\n\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWSDETL_ERROR) {\n    return { ...state,\n      singlebatch_dailyallowsdetl_loading: false,\n      singlebatch_dailyallowsdetl_error: true\n    };\n  } // return state;\n\n\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default dailyallowances_reducer;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/reducers/dailyallowances_reducer.js"],"names":["SET_EDITDAILYALLOWANCEID","SET_ISDAILYALLOWANCEEDITING_ON","SET_ISDAILYALLOWANCEEDITING_OFF","SET_DAILYALLOWANCE_PERIOD","SET_SINGLEDAILYALLOWANCE","GET_DAILYALLOWANCES_BEGIN","GET_DAILYALLOWANCES_SUCCESS","GET_DAILYALLOWANCES_ERROR","GET_UNPAIDDAILYALLOWS_BEGIN","GET_UNPAIDDAILYALLOWS_SUCCESS","GET_UNPAIDDAILYALLOWS_ERROR","GET_SINGLE_DAILYALLOWANCE_BEGIN","GET_SINGLE_DAILYALLOWANCE_SUCCESS","GET_SINGLE_DAILYALLOWANCE_ERROR","GET_SINGLEBATCH_DAILYALLOWANCE_BEGIN","GET_SINGLEBATCH_DAILYALLOWANCE_SUCCESS","GET_SINGLEBATCH_DAILYALLOWANCE_ERROR","ADD_DAILYALLOWANCE_BEGIN","ADD_DAILYALLOWANCE_SUCCESS","ADD_DAILYALLOWANCE_ERROR","DELETE_DAILYALLOWANCE_BEGIN","DELETE_DAILYALLOWANCE_SUCCESS","DELETE_DAILYALLOWANCE_ERROR","UPDATE_DAILYALLOWANCE_BEGIN","UPDATE_DAILYALLOWANCE_SUCCESS","UPDATE_DAILYALLOWANCE_ERROR","RESET_SINGLE_DAILYALLOWANCE","LOAD_DAILYALLOWSDETLS","SET_DAILYALLOWSDETL_PERIOD","GET_DAILYALLOWSDETLS_BEGIN","GET_DAILYALLOWSDETLS_SUCCESS","GET_DAILYALLOWSDETLS_ERROR","GET_SINGLE_DAILYALLOWSDETL_BEGIN","GET_SINGLE_DAILYALLOWSDETL_SUCCESS","GET_SINGLE_DAILYALLOWSDETL_ERROR","GET_SINGLEBATCH_DAILYALLOWSDETL_BEGIN","GET_SINGLEBATCH_DAILYALLOWSDETL_SUCCESS","GET_SINGLEBATCH_DAILYALLOWSDETL_ERROR","ADD_DAILYALLOWSDETL_BEGIN","ADD_DAILYALLOWSDETL_SUCCESS","ADD_DAILYALLOWSDETL_ERROR","DELETE_DAILYALLOWSDETL_BEGIN","DELETE_DAILYALLOWSDETL_SUCCESS","DELETE_DAILYALLOWSDETL_ERROR","UPDATE_DAILYALLOWSDETL_BEGIN","UPDATE_DAILYALLOWSDETL_SUCCESS","UPDATE_DAILYALLOWSDETL_ERROR","dailyallowances_reducer","state","action","type","dailyallowance_period","payload","editDailyAllowanceID","isDailyAllowanceEditing","single_dailyallowance","dailyallowances_loading","dailyallowances","dailyallowances_error","add_dailyallowance_loading","add_dailyallowance_error","update_dailyallowance_loading","update_dailyallowances_loading","update_dailyallowance_error","delete_dailyallowance_loading","delete_dailyallowance_error","single_dailyallowance_loading","single_dailyallowance_error","singlebatch_dailyallowance_loading","singlebatch_dailyallowance_error","singlebatch_dailyallowance","dailyallowsdetl_period","dailyallowsdetls_loading","dailyallowsdetls","dailyallowsdetls_error","unpaid_dailyallows_loading","unpaid_dailyallowsdetls_loading","unpaid_dailyallowsdetls_error","add_dailyallowsdetl_loading","add_dailyallowsdetl_error","update_dailyallowsdetl_loading","single_dailyallowsdetl","update_dailyallowsdetl_error","delete_dailyallowsdetl_loading","delete_dailyallowsdetl_error","single_dailyallowsdetl_loading","single_dailyallowsdetl_error","singlebatch_dailyallowsdetl_loading","singlebatch_dailyallowsdetl_error","singlebatch_dailyallowsdetl","Error"],"mappings":"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","sourcesContent":["import {\r\n  SET_EDITDAILYALLOWANCEID,\r\n  SET_ISDAILYALLOWANCEEDITING_ON,\r\n  SET_ISDAILYALLOWANCEEDITING_OFF,\r\n  SET_DAILYALLOWANCE_PERIOD,\r\n  SET_SINGLEDAILYALLOWANCE,\r\n  GET_DAILYALLOWANCES_BEGIN,\r\n  GET_DAILYALLOWANCES_SUCCESS,\r\n  GET_DAILYALLOWANCES_ERROR,\r\n  GET_UNPAIDDAILYALLOWS_BEGIN,\r\n  GET_UNPAIDDAILYALLOWS_SUCCESS,\r\n  GET_UNPAIDDAILYALLOWS_ERROR,\r\n  GET_SINGLE_DAILYALLOWANCE_BEGIN,\r\n  GET_SINGLE_DAILYALLOWANCE_SUCCESS,\r\n  GET_SINGLE_DAILYALLOWANCE_ERROR,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_BEGIN,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_SUCCESS,\r\n  GET_SINGLEBATCH_DAILYALLOWANCE_ERROR,\r\n  ADD_DAILYALLOWANCE_BEGIN,\r\n  ADD_DAILYALLOWANCE_SUCCESS,\r\n  ADD_DAILYALLOWANCE_ERROR,\r\n  DELETE_DAILYALLOWANCE_BEGIN,\r\n  DELETE_DAILYALLOWANCE_SUCCESS,\r\n  DELETE_DAILYALLOWANCE_ERROR,\r\n  UPDATE_DAILYALLOWANCE_BEGIN,\r\n  UPDATE_DAILYALLOWANCE_SUCCESS,\r\n  UPDATE_DAILYALLOWANCE_ERROR,\r\n  RESET_SINGLE_DAILYALLOWANCE,\r\n  // daily allowances details\r\n  LOAD_DAILYALLOWSDETLS,\r\n  SET_DAILYALLOWSDETL_PERIOD,\r\n  GET_DAILYALLOWSDETLS_BEGIN,\r\n  GET_DAILYALLOWSDETLS_SUCCESS,\r\n  GET_DAILYALLOWSDETLS_ERROR,\r\n  GET_SINGLE_DAILYALLOWSDETL_BEGIN,\r\n  GET_SINGLE_DAILYALLOWSDETL_SUCCESS,\r\n  GET_SINGLE_DAILYALLOWSDETL_ERROR,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_BEGIN,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_SUCCESS,\r\n  GET_SINGLEBATCH_DAILYALLOWSDETL_ERROR,\r\n  ADD_DAILYALLOWSDETL_BEGIN,\r\n  ADD_DAILYALLOWSDETL_SUCCESS,\r\n  ADD_DAILYALLOWSDETL_ERROR,\r\n  DELETE_DAILYALLOWSDETL_BEGIN,\r\n  DELETE_DAILYALLOWSDETL_SUCCESS,\r\n  DELETE_DAILYALLOWSDETL_ERROR,\r\n  UPDATE_DAILYALLOWSDETL_BEGIN,\r\n  UPDATE_DAILYALLOWSDETL_SUCCESS,\r\n  UPDATE_DAILYALLOWSDETL_ERROR,\r\n} from \"../actions\";\r\n\r\nconst dailyallowances_reducer = (state, action) => {\r\n  // set daily allowances variables\r\n  if (action.type === SET_DAILYALLOWANCE_PERIOD) {\r\n    return { ...state, dailyallowance_period: action.payload };\r\n  }\r\n  if (action.type === SET_EDITDAILYALLOWANCEID) {\r\n    return { ...state, editDailyAllowanceID: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISDAILYALLOWANCEEDITING_ON) {\r\n    return { ...state, isDailyAllowanceEditing: true };\r\n  }\r\n  if (action.type === SET_ISDAILYALLOWANCEEDITING_OFF) {\r\n    return { ...state, isDailyAllowanceEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_DAILYALLOWANCE) {\r\n    return { ...state, single_dailyallowance: {} };\r\n  }\r\n  // get daily allowances\r\n  if (action.type === GET_DAILYALLOWANCES_BEGIN) {\r\n    return { ...state, dailyallowances_loading: true };\r\n  }\r\n  if (action.type === GET_DAILYALLOWANCES_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      dailyallowances_loading: false,\r\n      dailyallowances: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_DAILYALLOWANCES_ERROR) {\r\n    return {\r\n      ...state,\r\n      dailyallowances_loading: false,\r\n      dailyallowances_error: true,\r\n    };\r\n  }\r\n\r\n  // add daily allowance\r\n  if (action.type === ADD_DAILYALLOWANCE_BEGIN) {\r\n    return { ...state, add_dailyallowance_loading: true };\r\n  }\r\n  if (action.type === ADD_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_dailyallowance_loading: false,\r\n      dailyallowances: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      add_dailyallowance_loading: false,\r\n      add_dailyallowance_error: true,\r\n    };\r\n  }\r\n  // update daily allowances\r\n  if (action.type === UPDATE_DAILYALLOWANCE_BEGIN) {\r\n    return { ...state, update_dailyallowance_loading: true };\r\n  }\r\n  if (action.type === UPDATE_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      update_dailyallowances_loading: false,\r\n      single_dailyallowance: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_dailyallowance_loading: false,\r\n      update_dailyallowance_error: true,\r\n    };\r\n  }\r\n\r\n  // delete daily allowances\r\n  if (action.type === DELETE_DAILYALLOWANCE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowance_loading: true,\r\n      delete_dailyallowance_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowance_loading: false,\r\n      delete_dailyallowance_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowance_loading: false,\r\n      delete_dailyallowance_error: true,\r\n    };\r\n  }\r\n\r\n  //single daily allowances\r\n  if (action.type === GET_SINGLE_DAILYALLOWANCE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowance_loading: true,\r\n      single_dailyallowance_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowance_loading: false,\r\n      single_dailyallowance: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowance_loading: false,\r\n      single_dailyallowance_error: true,\r\n    };\r\n  }\r\n\r\n  //single batch daily allowances\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWANCE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowance_loading: true,\r\n      singlebatch_dailyallowance_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWANCE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowance_loading: false,\r\n      singlebatch_dailyallowance: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWANCE_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowance_loading: false,\r\n      singlebatch_dailyallowance_error: true,\r\n    };\r\n  }\r\n\r\n  // daily allowances details\r\n  // set daily allowances details variables\r\n  if (action.type === SET_DAILYALLOWSDETL_PERIOD) {\r\n    return { ...state, dailyallowsdetl_period: action.payload };\r\n  }\r\n  // get daily allowances details\r\n  if (action.type === GET_DAILYALLOWSDETLS_BEGIN) {\r\n    return { ...state, dailyallowsdetls_loading: true };\r\n  }\r\n  if (action.type === GET_DAILYALLOWSDETLS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      dailyallowsdetls_loading: false,\r\n      dailyallowsdetls: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_DAILYALLOWSDETLS_ERROR) {\r\n    return {\r\n      ...state,\r\n      dailyallowsdetls_loading: false,\r\n      dailyallowsdetls_error: true,\r\n    };\r\n  }\r\n\r\n  // get unpaid daily allowances details\r\n  if (action.type === GET_UNPAIDDAILYALLOWS_BEGIN) {\r\n    return { ...state, unpaid_dailyallows_loading: true };\r\n  }\r\n  if (action.type === GET_UNPAIDDAILYALLOWS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      unpaid_dailyallows_loading: false,\r\n      dailyallowsdetls: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_UNPAIDDAILYALLOWS_ERROR) {\r\n    return {\r\n      ...state,\r\n      unpaid_dailyallowsdetls_loading: false,\r\n      unpaid_dailyallowsdetls_error: true,\r\n    };\r\n  }\r\n\r\n  // add daily allowance details\r\n  if (action.type === ADD_DAILYALLOWSDETL_BEGIN) {\r\n    return { ...state, add_dailyallowsdetl_loading: true };\r\n  }\r\n  if (action.type === ADD_DAILYALLOWSDETL_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_dailyallowsdetl_loading: false,\r\n      dailyallowsdetls: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      add_dailyallowsdetl_loading: false,\r\n      add_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n  // update daily allowances\r\n  if (action.type === UPDATE_DAILYALLOWSDETL_BEGIN) {\r\n    return { ...state, update_dailyallowsdetl_loading: true };\r\n  }\r\n  if (action.type === UPDATE_DAILYALLOWSDETL_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      update_dailyallowsdetl_loading: false,\r\n      single_dailyallowsdetl: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_dailyallowsdetl_loading: false,\r\n      update_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n\r\n  // delete daily allowances details\r\n  if (action.type === DELETE_DAILYALLOWSDETL_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowsdetl_loading: true,\r\n      delete_dailyallowsdetl_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_DAILYALLOWSDETL_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowsdetl_loading: false,\r\n      delete_dailyallowsdetl_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_dailyallowsdetl_loading: false,\r\n      delete_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n\r\n  //single daily allowances details\r\n  if (action.type === GET_SINGLE_DAILYALLOWSDETL_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowsdetl_loading: true,\r\n      single_dailyallowsdetl_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_DAILYALLOWSDETL_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowsdetl_loading: false,\r\n      single_dailyallowsdetl: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_dailyallowsdetl_loading: false,\r\n      single_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n\r\n  //single daily batch allowances details\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWSDETL_BEGIN) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowsdetl_loading: true,\r\n      singlebatch_dailyallowsdetl_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWSDETL_SUCCESS) {\r\n    // console.log(\"reducer\", action.payload);\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowsdetl_loading: false,\r\n      singlebatch_dailyallowsdetl: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLEBATCH_DAILYALLOWSDETL_ERROR) {\r\n    return {\r\n      ...state,\r\n      singlebatch_dailyallowsdetl_loading: false,\r\n      singlebatch_dailyallowsdetl_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default dailyallowances_reducer;\r\n"]},"metadata":{},"sourceType":"module"}