{"ast":null,"code":"import _regeneratorRuntime from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useState,useEffect}from\"react\";import MaterialTable from\"material-table\";import{makeStyles}from\"@material-ui/core/styles\";import{Button}from\"@material-ui/core\";import{Input}from\"@material-ui/core\";import AddIcon from\"@material-ui/icons/Add\";import EditIcon from\"@material-ui/icons/Edit\";import DeleteIcon from\"@material-ui/icons/Delete\";import CheckIcon from\"@material-ui/icons/Check\";import SearchIcon from\"@material-ui/icons/Search\";import{useHistory}from\"react-router-dom\";import{useExpensesContext}from\"../context/expenses_context\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var columns=[{title:\"Name\",field:\"name\"// editComponent: (editProps) => (\n//   <Input\n//     autoFocus={true}\n//     onChange={(e) => editProps.onChange(e.target.value)}\n//   />\n// ),\n},{title:\"Description\",field:\"description\"},{title:\"Amount\",field:\"amount\",type:\"numeric\"}];export default function Example(){var history=useHistory();var _useExpensesContext=useExpensesContext(),expenses=_useExpensesContext.expenses,addExpense=_useExpensesContext.addExpense,expenses_loading=_useExpensesContext.expenses_loading,updateExpense=_useExpensesContext.updateExpense,deleteExpense=_useExpensesContext.deleteExpense,loadExpenses=_useExpensesContext.loadExpenses,getSingleExpense=_useExpensesContext.getSingleExpense,setEditExpenseID=_useExpensesContext.setEditExpenseID,setIsExpenseEditingOn=_useExpensesContext.setIsExpenseEditingOn,setIsExpenseEditingOff=_useExpensesContext.setIsExpenseEditingOff,resetSingleExpense=_useExpensesContext.resetSingleExpense;useEffect(function(){loadExpenses();},[]);//   const update_expenses = (data) => {\n//     console.log(data);\n//     const { id, ...fields } = data;\n//     updateExpense({ id: id, ...fields });\n//     loadExpenses();\n//   };\nvar update_Expense=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var id;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:id=data.id;setEditExpenseID(id);setIsExpenseEditingOn();getSingleExpense(id);history.push(\"/singleexpense\");case 5:case\"end\":return _context.stop();}}},_callee);}));return function update_Expense(_x){return _ref.apply(this,arguments);};}();var delete_Expense=function delete_Expense(id){setEditExpenseID(id);deleteExpense(id);loadExpenses();};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Allownaces\"}),/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:\"100%\",paddingTop:\"12px\"},children:/*#__PURE__*/_jsx(MaterialTable,{columns:columns,data:expenses,title:\"testing\",icons:{Add:function Add(props){return/*#__PURE__*/_jsx(AddIcon,{});},Edit:function Edit(props){return/*#__PURE__*/_jsx(EditIcon,{});},Delete:function Delete(props){return/*#__PURE__*/_jsx(DeleteIcon,{});},Clear:function Clear(props){return/*#__PURE__*/_jsx(DeleteIcon,{});},Check:function Check(props){return/*#__PURE__*/_jsx(CheckIcon,{});},Search:function Search(props){return/*#__PURE__*/_jsx(SearchIcon,{});},ResetSearch:function ResetSearch(props){return/*#__PURE__*/_jsx(DeleteIcon,{});}},actions:[{icon:\"edit\",tooltip:\"Save User\",onClick:function onClick(event,rowData){update_Expense(rowData);}},{icon:\"delete\",tooltip:\"Delete User\",onClick:function onClick(event,rowData){delete_Expense();}}]//   editable={{\n//     onRowAdd: (newData) =>\n//       new Promise((resolve, reject) => {\n//         setTimeout(() => {\n//           //setData([...data, newData]);\n//           update_expenses(newData);\n//           resolve();\n//         }, 1000);\n//       }),\n//     onRowUpdate: (newData, oldData) =>\n//       new Promise((resolve, reject) => {\n//         setTimeout(() => {\n//           const dataUpdate = [...data];\n//           const index = oldData.tableData.id;\n//           dataUpdate[index] = newData;\n//           //   setData([...dataUpdate]);\n//           update_expenses(newData);\n//           resolve();\n//         }, 1000);\n//       }),\n//     onRowDelete: (oldData) =>\n//       new Promise((resolve, reject) => {\n//         setTimeout(() => {\n//           const dataDelete = [...data];\n//           const index = oldData.tableData.id;\n//           dataDelete.splice(index, 1);\n//           setData([...dataDelete]);\n//           resolve();\n//         }, 1000);\n//       }),\n//   }}\n})})]});}var useStyles=makeStyles(function(theme){return{root:{alignItems:\"center\"}};});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Example.js"],"names":["React","useState","useEffect","MaterialTable","makeStyles","Button","Input","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","useHistory","useExpensesContext","columns","title","field","type","Example","history","expenses","addExpense","expenses_loading","updateExpense","deleteExpense","loadExpenses","getSingleExpense","setEditExpenseID","setIsExpenseEditingOn","setIsExpenseEditingOff","resetSingleExpense","update_Expense","data","id","push","delete_Expense","maxWidth","paddingTop","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","icon","tooltip","onClick","event","rowData","useStyles","theme","root","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    // editComponent: (editProps) => (\r\n    //   <Input\r\n    //     autoFocus={true}\r\n    //     onChange={(e) => editProps.onChange(e.target.value)}\r\n    //   />\r\n    // ),\r\n  },\r\n  { title: \"Description\", field: \"description\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"numeric\" },\r\n];\r\n\r\nexport default function Example() {\r\n  let history = useHistory();\r\n\r\n  const {\r\n    expenses,\r\n    addExpense,\r\n    expenses_loading,\r\n    updateExpense,\r\n    deleteExpense,\r\n    loadExpenses,\r\n    getSingleExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n    resetSingleExpense,\r\n  } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    loadExpenses();\r\n  }, []);\r\n\r\n  //   const update_expenses = (data) => {\r\n  //     console.log(data);\r\n  //     const { id, ...fields } = data;\r\n  //     updateExpense({ id: id, ...fields });\r\n  //     loadExpenses();\r\n  //   };\r\n\r\n  const update_Expense = async (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    setIsExpenseEditingOn();\r\n    getSingleExpense(id);\r\n    history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Expense = (id) => {\r\n    setEditExpenseID(id);\r\n    deleteExpense(id);\r\n    loadExpenses();\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Allownaces</h1>\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"12px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expenses}\r\n          title=\"testing\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Save User\",\r\n              onClick: (event, rowData) => {\r\n                update_Expense(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete User\",\r\n              onClick: (event, rowData) => {\r\n                delete_Expense();\r\n              },\r\n            },\r\n          ]}\r\n          //   editable={{\r\n          //     onRowAdd: (newData) =>\r\n          //       new Promise((resolve, reject) => {\r\n          //         setTimeout(() => {\r\n          //           //setData([...data, newData]);\r\n          //           update_expenses(newData);\r\n          //           resolve();\r\n          //         }, 1000);\r\n          //       }),\r\n          //     onRowUpdate: (newData, oldData) =>\r\n          //       new Promise((resolve, reject) => {\r\n          //         setTimeout(() => {\r\n          //           const dataUpdate = [...data];\r\n          //           const index = oldData.tableData.id;\r\n          //           dataUpdate[index] = newData;\r\n          //           //   setData([...dataUpdate]);\r\n          //           update_expenses(newData);\r\n          //           resolve();\r\n          //         }, 1000);\r\n          //       }),\r\n          //     onRowDelete: (oldData) =>\r\n          //       new Promise((resolve, reject) => {\r\n          //         setTimeout(() => {\r\n          //           const dataDelete = [...data];\r\n          //           const index = oldData.tableData.id;\r\n          //           dataDelete.splice(index, 1);\r\n          //           setData([...dataDelete]);\r\n\r\n          //           resolve();\r\n          //         }, 1000);\r\n          //       }),\r\n          //   }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}