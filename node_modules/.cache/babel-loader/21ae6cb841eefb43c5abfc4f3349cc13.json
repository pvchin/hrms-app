{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\context\\\\expenses_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport reducer from \"../reducers/expenses_reducer\";\nimport { expenses_url } from \"../utils/constants\";\nimport { SET_EDITEXPENSEID, SET_ISEXPENSEEDITING_ON, SET_ISEXPENSEEDITING_OFF, SET_SINGLEEXPENSE, GET_EXPENSES_BEGIN, GET_EXPENSES_SUCCESS, GET_EXPENSES_ERROR, GET_SINGLE_EXPENSE_BEGIN, GET_SINGLE_EXPENSE_SUCCESS, GET_SINGLE_EXPENSE_ERROR, ADD_EXPENSE_BEGIN, ADD_EXPENSE_SUCCESS, ADD_EXPENSE_ERROR, DELETE_EXPENSE_BEGIN, DELETE_EXPENSE_SUCCESS, DELETE_EXPENSE_ERROR, UPDATE_EXPENSE_BEGIN, UPDATE_EXPENSE_SUCCESS, UPDATE_EXPENSE_ERROR, RESET_SINGLE_EXPENSE } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isExpenseEditing: false,\n  alertExpense: {\n    show: false,\n    msg: \"\",\n    type: \"\"\n  },\n  editExpenseID: null,\n  expenses_loading: false,\n  expenses_error: false,\n  expenses: [],\n  single_expense_loading: false,\n  single_expense_error: false,\n  single_expense: {},\n  delete_expense_loading: false,\n  delete_expense_error: false,\n  update_expense_loading: false,\n  update_expense_error: false,\n  add_expense_loading: false,\n  add_expense_error: false // filterValue: \"Female\",\n  // filterfield: \"gender\",\n\n};\nconst ExpensesContext = /*#__PURE__*/React.createContext();\nexport const ExpensesProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const loadExpenses = async () => {\n    dispatch({\n      type: GET_EXPENSES_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(expenses_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const expenses = await res.json();\n      dispatch({\n        type: GET_EXPENSES_SUCCESS,\n        payload: expenses\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_EXPENSES_ERROR\n      });\n    }\n  };\n\n  const loadPendingExpenses = async fi => {\n    dispatch({\n      type: GET_EXPENSES_BEGIN\n    });\n\n    try {\n      //const res = await fetch(leaves_url);\n      //const { data } = await axios.get(employees_url);\n      //const employees = data;\n      const {\n        data\n      } = await axios.get(`${expenses_url}?fi=${fi}`);\n      const expenses = data;\n      dispatch({\n        type: GET_EXPENSES_SUCCESS,\n        payload: expenses\n      });\n    } catch (error) {\n      const loadPendingExpenses = async fi => {\n        dispatch({\n          type: GET_EXPENSES_BEGIN\n        });\n\n        try {\n          //const res = await fetch(leaves_url);\n          //const { data } = await axios.get(employees_url);\n          //const employees = data;\n          const {\n            data\n          } = await axios.get(`${expenses_url}?fi=${fi}`);\n          const expenses = data;\n          dispatch({\n            type: GET_EXPENSES_SUCCESS,\n            payload: expenses\n          });\n        } catch (error) {\n          dispatch({\n            type: GET_EXPENSES_ERROR\n          });\n        }\n      };\n\n      dispatch({\n        type: GET_EXPENSES_ERROR\n      });\n    }\n  };\n\n  const setIsExpenseEditingOn = () => {\n    dispatch({\n      type: SET_ISEXPENSEEDITING_ON\n    });\n  };\n\n  const setIsExpenseEditingOff = () => {\n    dispatch({\n      type: SET_ISEXPENSEEDITING_OFF\n    });\n  };\n\n  const resetSingleExpense = () => {\n    dispatch({\n      type: RESET_SINGLE_EXPENSE\n    });\n  };\n\n  const setEditExpenseID = async id => {\n    try {\n      dispatch({\n        type: SET_EDITEXPENSEID,\n        payload: id\n      });\n    } catch (error) {\n      dispatch(error);\n    }\n  };\n\n  const getSingleExpense = async id => {\n    dispatch({\n      type: GET_SINGLE_EXPENSE_BEGIN\n    });\n\n    try {\n      const {\n        data\n      } = await axios.get(`${expenses_url}?id=${id}`);\n      const singleexpense = data;\n      dispatch({\n        type: GET_SINGLE_EXPENSE_SUCCESS,\n        payload: singleexpense\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_SINGLE_EXPENSE_ERROR\n      });\n    }\n  };\n\n  const addExpense = async data => {\n    const {\n      id,\n      name,\n      date,\n      purchased_date,\n      remark,\n      amount,\n      status\n    } = data; //\n\n    dispatch({\n      type: ADD_EXPENSE_BEGIN\n    });\n\n    try {\n      await fetch(expenses_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_EXPENSE_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_EXPENSE_ERROR\n      });\n    }\n  };\n\n  const updateExpense = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_EXPENSE_BEGIN\n    });\n\n    try {\n      await fetch(expenses_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_EXPENSE_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_EXPENSE_ERROR\n      });\n    }\n  };\n\n  const deleteExpense = async id => {\n    dispatch({\n      type: DELETE_EXPENSE_BEGIN\n    });\n\n    try {\n      await fetch(expenses_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_EXPENSE_SUCCESS\n      }); //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_EXPENSE_ERROR\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ExpensesContext.Provider, {\n    value: { ...state,\n      loadExpenses,\n      loadPendingExpenses,\n      addExpense,\n      updateExpense,\n      deleteExpense,\n      getSingleExpense,\n      setEditExpenseID,\n      setIsExpenseEditingOn,\n      setIsExpenseEditingOff,\n      resetSingleExpense\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpensesProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ExpensesProvider;\nexport const useExpensesContext = () => {\n  _s2();\n\n  return useContext(ExpensesContext);\n};\n\n_s2(useExpensesContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesProvider\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/context/expenses_context.js"],"names":["React","useContext","useEffect","useReducer","axios","reducer","expenses_url","SET_EDITEXPENSEID","SET_ISEXPENSEEDITING_ON","SET_ISEXPENSEEDITING_OFF","SET_SINGLEEXPENSE","GET_EXPENSES_BEGIN","GET_EXPENSES_SUCCESS","GET_EXPENSES_ERROR","GET_SINGLE_EXPENSE_BEGIN","GET_SINGLE_EXPENSE_SUCCESS","GET_SINGLE_EXPENSE_ERROR","ADD_EXPENSE_BEGIN","ADD_EXPENSE_SUCCESS","ADD_EXPENSE_ERROR","DELETE_EXPENSE_BEGIN","DELETE_EXPENSE_SUCCESS","DELETE_EXPENSE_ERROR","UPDATE_EXPENSE_BEGIN","UPDATE_EXPENSE_SUCCESS","UPDATE_EXPENSE_ERROR","RESET_SINGLE_EXPENSE","initialState","isExpenseEditing","alertExpense","show","msg","type","editExpenseID","expenses_loading","expenses_error","expenses","single_expense_loading","single_expense_error","single_expense","delete_expense_loading","delete_expense_error","update_expense_loading","update_expense_error","add_expense_loading","add_expense_error","ExpensesContext","createContext","ExpensesProvider","children","state","dispatch","loadExpenses","res","fetch","json","payload","error","loadPendingExpenses","fi","data","get","setIsExpenseEditingOn","setIsExpenseEditingOff","resetSingleExpense","setEditExpenseID","id","getSingleExpense","singleexpense","addExpense","name","date","purchased_date","remark","amount","status","method","body","JSON","stringify","err","updateExpense","fields","deleteExpense","useExpensesContext"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/expenses_reducer\";\r\nimport { expenses_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITEXPENSEID,\r\n  SET_ISEXPENSEEDITING_ON,\r\n  SET_ISEXPENSEEDITING_OFF,\r\n  SET_SINGLEEXPENSE,\r\n  GET_EXPENSES_BEGIN,\r\n  GET_EXPENSES_SUCCESS,\r\n  GET_EXPENSES_ERROR,\r\n  GET_SINGLE_EXPENSE_BEGIN,\r\n  GET_SINGLE_EXPENSE_SUCCESS,\r\n  GET_SINGLE_EXPENSE_ERROR,\r\n  ADD_EXPENSE_BEGIN,\r\n  ADD_EXPENSE_SUCCESS,\r\n  ADD_EXPENSE_ERROR,\r\n  DELETE_EXPENSE_BEGIN,\r\n  DELETE_EXPENSE_SUCCESS,\r\n  DELETE_EXPENSE_ERROR,\r\n  UPDATE_EXPENSE_BEGIN,\r\n  UPDATE_EXPENSE_SUCCESS,\r\n  UPDATE_EXPENSE_ERROR,\r\n  RESET_SINGLE_EXPENSE,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isExpenseEditing: false,\r\n  alertExpense: { show: false, msg: \"\", type: \"\" },\r\n  editExpenseID: null,\r\n  expenses_loading: false,\r\n  expenses_error: false,\r\n  expenses: [],\r\n  single_expense_loading: false,\r\n  single_expense_error: false,\r\n  single_expense: {},\r\n  delete_expense_loading: false,\r\n  delete_expense_error: false,\r\n  update_expense_loading: false,\r\n  update_expense_error: false,\r\n  add_expense_loading: false,\r\n  add_expense_error: false,\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n};\r\n\r\nconst ExpensesContext = React.createContext();\r\n\r\nexport const ExpensesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const loadExpenses = async () => {\r\n    dispatch({ type: GET_EXPENSES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(expenses_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const expenses = await res.json();\r\n      dispatch({ type: GET_EXPENSES_SUCCESS, payload: expenses });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EXPENSES_ERROR });\r\n    }\r\n  };\r\n\r\nconst loadPendingExpenses = async (fi) => {\r\n  dispatch({ type: GET_EXPENSES_BEGIN });\r\n  try {\r\n    //const res = await fetch(leaves_url);\r\n    //const { data } = await axios.get(employees_url);\r\n    //const employees = data;\r\n    const { data } = await axios.get(`${expenses_url}?fi=${fi}`);\r\n    const expenses = data;\r\n\r\n    dispatch({ type: GET_EXPENSES_SUCCESS, payload: expenses });\r\n  } catch (error) {const loadPendingExpenses = async (fi) => {\r\n    dispatch({ type: GET_EXPENSES_BEGIN });\r\n    try {\r\n      //const res = await fetch(leaves_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const { data } = await axios.get(`${expenses_url}?fi=${fi}`);\r\n      const expenses = data;\r\n\r\n      dispatch({ type: GET_EXPENSES_SUCCESS, payload: expenses });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EXPENSES_ERROR });\r\n    }\r\n  };\r\n    dispatch({ type: GET_EXPENSES_ERROR });\r\n  }\r\n  };\r\n  \r\n\r\n  const setIsExpenseEditingOn = () => {\r\n    dispatch({ type: SET_ISEXPENSEEDITING_ON });\r\n  };\r\n\r\n  const setIsExpenseEditingOff = () => {\r\n    dispatch({ type: SET_ISEXPENSEEDITING_OFF });\r\n  };\r\n\r\n  const resetSingleExpense = () => {\r\n    dispatch({ type: RESET_SINGLE_EXPENSE });\r\n  };\r\n\r\n  const setEditExpenseID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITEXPENSEID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleExpense = async (id) => {\r\n    dispatch({ type: GET_SINGLE_EXPENSE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${expenses_url}?id=${id}`);\r\n      const singleexpense = data;\r\n      dispatch({ type: GET_SINGLE_EXPENSE_SUCCESS, payload: singleexpense });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_EXPENSE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addExpense = async (data) => {\r\n    const { id, name, date, purchased_date, remark, amount, status } = data;\r\n    //\r\n    dispatch({ type: ADD_EXPENSE_BEGIN });\r\n    try {\r\n      await fetch(expenses_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_EXPENSE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_EXPENSE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateExpense = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_EXPENSE_BEGIN });\r\n    try {\r\n      await fetch(expenses_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_EXPENSE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_EXPENSE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteExpense = async (id) => {\r\n    dispatch({ type: DELETE_EXPENSE_BEGIN });\r\n    try {\r\n      await fetch(expenses_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_EXPENSE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_EXPENSE_ERROR });\r\n    }\r\n  };\r\n  return (\r\n    <ExpensesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadExpenses,\r\n        loadPendingExpenses,\r\n        addExpense,\r\n        updateExpense,\r\n        deleteExpense,\r\n        getSingleExpense,\r\n        setEditExpenseID,\r\n        setIsExpenseEditingOn,\r\n        setIsExpenseEditingOff,\r\n        resetSingleExpense,\r\n      }}\r\n    >\r\n      {children}\r\n    </ExpensesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useExpensesContext = () => {\r\n  return useContext(ExpensesContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}