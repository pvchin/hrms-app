{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\OnLeavesView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { List, ListItem, Grid } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport axios from \"axios\";\nimport { useAsync } from \"react-async\";\nimport MaterialTable from \"material-table\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { atom, selector, useRecoilValue, useRecoilState, useSetRecoilState, useRecoilValueLoadable, useRecoilStateLoadable } from \"recoil\"; // import { useRecoilValue, useSetRecoilState, useRecoilState } from \"recoil\";\n// import { departmentsSelector } from \"../helpers/Recoilhelpers\";\n\nimport { onleaves_url } from \"../utils/constants\";\nimport { fetchDepartmentsSelector } from \"./data/selectordata\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst columns = [{\n  title: \"Name\",\n  field: \"name\",\n  editable: \"never\"\n}, {\n  title: \"From Data\",\n  field: \"from_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}, {\n  title: \"To Data\",\n  field: \"to_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}];\nexport const onleavesdatastate = atom({\n  key: \"onleavesdatastate\",\n  default: []\n});\nconst fetchOnLeavesDetails = selector({\n  key: \"onLeaveDetailsSelector\",\n  get: async ({\n    get\n  }) => {\n    try {\n      const {\n        data\n      } = await axios.get(onleaves_url);\n      const onleavesdata = data;\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n});\n\nconst loadUsers = async () => {\n  const {\n    data\n  } = await axios.get(onleaves_url);\n  return data;\n}; //   await fetch(\"https://jsonplaceholder.typicode.com/users\")\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\n//     .then((res) => res.json());\n\n\nconst fetchDetails = async () => await fetch(\"localhost:8888/api/onleavesview\").then(res => res.ok ? res : Promise.reject(res)).then(res => res.json());\n\nconst OnLeavesView = () => {\n  _s();\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const [userdata, setUserdata] = useState([]); //const [userdata, setUserdata] = useRecoilState(userdatastate);\n  //const onLeavesDetails = useRecoilValueLoadable(fetchOnLeavesDetails);\n\n  const {\n    data,\n    error,\n    isLoading\n  } = useAsync({\n    promiseFn: loadUsers\n  });\n  if (isLoading) return \"Loading...\";\n  if (error) return `Something went wrong: ${error.message}`;\n  if (data) console.log(\"data\", data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: data.map(row => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: row.from_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: row.to_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, row.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OnLeavesView, \"6di+BxaFds6aEwAlv0IPd3zO7YI=\", false, function () {\n  return [useStyles, useAsync];\n});\n\n_c = OnLeavesView;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  },\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(1),\n    //grid padding\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\nexport default OnLeavesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"OnLeavesView\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/OnLeavesView.js"],"names":["React","useState","useEffect","makeStyles","List","ListItem","Grid","clsx","axios","useAsync","MaterialTable","Paper","atom","selector","useRecoilValue","useRecoilState","useSetRecoilState","useRecoilValueLoadable","useRecoilStateLoadable","onleaves_url","fetchDepartmentsSelector","drawerWidth","columns","title","field","editable","type","dateSetting","locale","onleavesdatastate","key","default","fetchOnLeavesDetails","get","data","onleavesdata","error","loadUsers","fetchDetails","fetch","then","res","ok","Promise","reject","json","OnLeavesView","classes","useStyles","fixedHeightPaper","paper","fixedHeight","userdata","setUserdata","isLoading","promiseFn","message","console","log","map","row","name","from_date","to_date","theme","root","padding","flexGrow","spacing","textAlign","color","palette","text","secondary"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { List, ListItem, Grid } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport { useAsync } from \"react-async\";\r\nimport MaterialTable from \"material-table\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  atom,\r\n  selector,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useSetRecoilState,\r\n  useRecoilValueLoadable,\r\n  useRecoilStateLoadable,\r\n} from \"recoil\";\r\n// import { useRecoilValue, useSetRecoilState, useRecoilState } from \"recoil\";\r\n// import { departmentsSelector } from \"../helpers/Recoilhelpers\";\r\nimport { onleaves_url } from \"../utils/constants\";\r\nimport { fetchDepartmentsSelector } from \"./data/selectordata\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Data\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Data\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n];\r\n\r\nexport const onleavesdatastate = atom({\r\n  key: \"onleavesdatastate\",\r\n  default: [],\r\n});\r\n\r\nconst fetchOnLeavesDetails = selector({\r\n  key: \"onLeaveDetailsSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const { data } = await axios.get(onleaves_url);\r\n      const onleavesdata = data;\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n\r\nconst loadUsers = async () => {\r\n  const { data } = await axios.get(onleaves_url);\r\n  return data;\r\n};\r\n//   await fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\r\n//     .then((res) => res.json());\r\n\r\nconst fetchDetails = async () =>\r\n  await fetch(\"localhost:8888/api/onleavesview\")\r\n    .then((res) => (res.ok ? res : Promise.reject(res)))\r\n    .then((res) => res.json());\r\n\r\nconst OnLeavesView = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [userdata, setUserdata] = useState([]);\r\n  //const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  //const onLeavesDetails = useRecoilValueLoadable(fetchOnLeavesDetails);\r\n  const { data, error, isLoading } = useAsync({ promiseFn: loadUsers });\r\n  if (isLoading) return \"Loading...\";\r\n  if (error) return `Something went wrong: ${error.message}`;\r\n  if (data) console.log(\"data\", data);\r\n  return (\r\n    <div className=\"container\">\r\n      <Grid container>\r\n        {data.map((row) => (\r\n          <Grid item xs={12}>\r\n            <div key={row.name} >\r\n              <div>{row.name}</div>\r\n              <div>{row.from_date}</div>\r\n              <div>{row.to_date}</div>\r\n            </div>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1), //grid padding\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default OnLeavesView;\r\n"]},"metadata":{},"sourceType":"module"}