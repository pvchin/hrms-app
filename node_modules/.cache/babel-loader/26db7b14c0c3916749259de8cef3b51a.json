{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\LeaveForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Icon, TextField, Paper, Typography, Divider } from \"@material-ui/core\";\nimport { useRecoilState } from \"recoil\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useLeavesContext } from \"../context/leaves_context\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_values = {\n  name: \"\",\n  to_date: \"\",\n  from_date: \"\",\n  reason: \"\",\n  status: \"Pending\",\n  no_of_days: 0,\n  leave_bal: 0\n};\n\nconst LeaveForm = ({\n  handleDialogClose\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    isLeaveEditing,\n    single_leave,\n    updateLeave,\n    addLeave,\n    editLeaveID,\n    single_leave_loading,\n    single_leave_error\n  } = useLeavesContext();\n  const {\n    employees\n  } = useEmployeesContext();\n  const {\n    name,\n    to_date,\n    from_date,\n    reason,\n    status,\n    no_of_days,\n    leave_bal\n  } = single_leave || initial_values;\n  const {\n    handleSubmit,\n    control\n  } = useForm();\n\n  const onSubmit = data => {\n    if (isLeaveEditing) {\n      updateLeave({\n        id: editLeaveID,\n        ...data\n      });\n    } else {\n      addLeave({ ...data,\n        empid: loginLevel.loginUserId\n      });\n    } // loadLeaves();\n    //history.push(\"/leave\");\n\n\n    handleDialogClose();\n  };\n\n  if (single_leave_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...Leaves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (single_leave_error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Internet connection error!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        children: \"LEAVE FORM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"p\",\n        children: \"Leave Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"name\",\n            control: control,\n            defaultValue: loginLevel.loginUser,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Name\",\n                id: \"margin-normal\",\n                name: \"name\",\n                defaultValue: loginLevel.loginUser //value={value}\n                ,\n                className: classes.textField,\n                onChange: e => {\n                  console.log(e.target.value);\n                  onChange(e.target.value);\n                },\n                InputProps: {\n                  readOnly: true\n                },\n                error: !!error,\n                helperText: error ? error.message : null //select\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this);\n            } // rules={{ required: \"Name required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"from_date\",\n            control: control,\n            defaultValue: from_date,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"From Date\",\n                type: \"date\",\n                id: \"margin-normal\",\n                name: \"from_date\",\n                defaultValue: from_date,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"From Date is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"to_date\",\n            control: control,\n            defaultValue: to_date,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"To Date\",\n                id: \"margin-normal\",\n                type: \"date\",\n                name: \"to_date\",\n                defaultValue: to_date,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"To Date is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"leave_bal\",\n            control: control,\n            defaultValue: loginLevel.leave_bal,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                disable: true,\n                label: \"Leave Balance\",\n                type: \"number\",\n                id: \"standard-number\",\n                name: \"leave_bal\",\n                defaultValue: loginLevel.leave_bal,\n                className: classes.textField //onChange={onChange}\n                ,\n                onChange: e => {\n                  onChange(parseInt(e.target.value, 10));\n                },\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"IC No required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"no_of_days\",\n            control: control,\n            defaultValue: no_of_days,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"No Of Days\",\n                type: \"number\",\n                id: \"standard-number\",\n                name: \"no_of_days\",\n                defaultValue: no_of_days,\n                className: classes.textField //onChange={onChange}\n                ,\n                onChange: e => {\n                  onChange(parseInt(e.target.value, 10));\n                },\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"IC No required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"reason\",\n            control: control,\n            defaultValue: reason,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Reason\",\n                id: \"margin-normal\",\n                name: \"reason\",\n                defaultValue: reason,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this);\n            } // rules={{ required: \"Reason is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"status\",\n            control: control,\n            defaultValue: \"Pending\",\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Status\",\n                id: \"margin-normal\",\n                name: \"status\",\n                defaultValue: \"Pending\",\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null // select\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button,\n            onClick: handleSubmit(onSubmit),\n            children: [\"Submit \", /*#__PURE__*/_jsxDEV(Icon, {\n              className: classes.rightIcon,\n              children: \"send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LeaveForm, \"YiRr8Ud+0iEE0SMgsBX/G2S1/SM=\", false, function () {\n  return [useStyles, useRecoilState, useLeavesContext, useEmployeesContext, useForm];\n});\n\n_c = LeaveForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  }\n}));\nexport default LeaveForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaveForm\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/LeaveForm.js"],"names":["React","Button","Icon","TextField","Paper","Typography","Divider","useRecoilState","loginLevelState","makeStyles","MenuItem","useEmployeesContext","useLeavesContext","Controller","useForm","initial_values","name","to_date","from_date","reason","status","no_of_days","leave_bal","LeaveForm","handleDialogClose","classes","useStyles","loginLevel","setLoginLevel","isLeaveEditing","single_leave","updateLeave","addLeave","editLeaveID","single_leave_loading","single_leave_error","employees","handleSubmit","control","onSubmit","data","id","empid","loginUserId","root","loginUser","field","onChange","value","fieldState","error","textField","e","console","log","target","readOnly","message","shrink","required","parseInt","button","rightIcon","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","padding","container","display","flexWrap","width"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  to_date: \"\",\r\n  from_date: \"\",\r\n  reason: \"\",\r\n  status: \"Pending\",\r\n  no_of_days: 0,\r\n  leave_bal: 0,\r\n};\r\n\r\nconst LeaveForm = ({ handleDialogClose }) => {\r\n  const classes = useStyles();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const {\r\n    isLeaveEditing,\r\n    single_leave,\r\n    updateLeave,\r\n    addLeave,\r\n    editLeaveID,\r\n    single_leave_loading,\r\n    single_leave_error,\r\n  } = useLeavesContext();\r\n  const { employees } = useEmployeesContext();\r\n  const { name, to_date, from_date, reason, status, no_of_days, leave_bal } =\r\n    single_leave || initial_values;\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    if (isLeaveEditing) {\r\n      updateLeave({ id: editLeaveID, ...data });\r\n    } else {\r\n      addLeave({ ...data, empid: loginLevel.loginUserId });\r\n    }\r\n    // loadLeaves();\r\n    //history.push(\"/leave\");\r\n    handleDialogClose();\r\n  };\r\n\r\n  if (single_leave_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Leaves</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (single_leave_error) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connection error!</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          LEAVE FORM\r\n        </Typography>\r\n        <Typography component=\"p\">Leave Application</Typography>\r\n        <Divider />\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"name\"\r\n              control={control}\r\n              defaultValue={loginLevel.loginUser}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    id=\"margin-normal\"\r\n                    name=\"name\"\r\n                    defaultValue={loginLevel.loginUser}\r\n                    //value={value}\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      console.log(e.target.value);\r\n                      onChange(e.target.value);\r\n                    }}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    //select\r\n                  >\r\n                    {/* {employees.map((e) => {\r\n                      return (\r\n                        <MenuItem key={e.name} value={e.name}>\r\n                          {e.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })} */}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              // rules={{ required: \"Name required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"from_date\"\r\n              control={control}\r\n              defaultValue={from_date}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"From Date\"\r\n                    type=\"date\"\r\n                    id=\"margin-normal\"\r\n                    name=\"from_date\"\r\n                    defaultValue={from_date}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"From Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"to_date\"\r\n              control={control}\r\n              defaultValue={to_date}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"To Date\"\r\n                    id=\"margin-normal\"\r\n                    type=\"date\"\r\n                    name=\"to_date\"\r\n                    defaultValue={to_date}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"To Date is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"leave_bal\"\r\n              control={control}\r\n              defaultValue={loginLevel.leave_bal}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    disable\r\n                    label=\"Leave Balance\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"leave_bal\"\r\n                    defaultValue={loginLevel.leave_bal}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"no_of_days\"\r\n              control={control}\r\n              defaultValue={no_of_days}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"No Of Days\"\r\n                    type=\"number\"\r\n                    id=\"standard-number\"\r\n                    name=\"no_of_days\"\r\n                    defaultValue={no_of_days}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(parseInt(e.target.value, 10));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"reason\"\r\n              control={control}\r\n              defaultValue={reason}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Reason\"\r\n                    id=\"margin-normal\"\r\n                    name=\"reason\"\r\n                    defaultValue={reason}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              // rules={{ required: \"Reason is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"status\"\r\n              control={control}\r\n              defaultValue=\"Pending\"\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Status\"\r\n                    id=\"margin-normal\"\r\n                    name=\"status\"\r\n                    defaultValue=\"Pending\"\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    // select\r\n                  >\r\n                    {/* <MenuItem value=\"Pending\">Pending</MenuItem>\r\n                    <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n                    <MenuItem value=\"Approve\">Approve</MenuItem>\r\n                    <MenuItem value=\"Reject\">Reject</MenuItem> */}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              Submit <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default LeaveForm;\r\n"]},"metadata":{},"sourceType":"module"}