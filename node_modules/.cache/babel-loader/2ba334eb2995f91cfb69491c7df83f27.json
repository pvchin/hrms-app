{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\context\\\\payslips_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport reducer from \"../reducers/payslips_reducer\";\nimport { payslips_url } from \"../utils/constants\";\nimport { payslipearnings_url } from \"../utils/constants\";\nimport { payslipdeductions_url } from \"../utils/constants\";\nimport { SET_EDITPAYSLIPID, SET_ISPAYSLIPEDITING_ON, SET_ISPAYSLIPEDITING_OFF, SET_PAYSLIP_PERIOD, SET_SINGLEPAYSLIP, GET_PAYSLIPS_BEGIN, GET_PAYSLIPS_SUCCESS, GET_PAYSLIPS_ERROR, GET_SINGLE_PAYSLIP_BEGIN, GET_SINGLE_PAYSLIP_SUCCESS, GET_SINGLE_PAYSLIP_ERROR, ADD_PAYSLIP_BEGIN, ADD_PAYSLIP_SUCCESS, ADD_PAYSLIP_ERROR, DELETE_PAYSLIP_BEGIN, DELETE_PAYSLIP_SUCCESS, DELETE_PAYSLIP_ERROR, UPDATE_PAYSLIP_BEGIN, UPDATE_PAYSLIP_SUCCESS, UPDATE_PAYSLIP_ERROR, RESET_SINGLE_PAYSLIP, GET_PAYSLIPEARNINGS_BEGIN, GET_PAYSLIPEARNINGS_SUCCESS, GET_PAYSLIPEARNINGS_ERROR, GET_SINGLE_PAYSLIPEARNING_BEGIN, GET_SINGLE_PAYSLIPEARNING_SUCCESS, GET_SINGLE_PAYSLIPEARNING_ERROR, ADD_PAYSLIPEARNING_BEGIN, ADD_PAYSLIPEARNING_SUCCESS, ADD_PAYSLIPEARNING_ERROR, DELETE_PAYSLIPEARNING_BEGIN, DELETE_PAYSLIPEARNING_SUCCESS, DELETE_PAYSLIPEARNING_ERROR, UPDATE_PAYSLIPEARNING_BEGIN, UPDATE_PAYSLIPEARNING_SUCCESS, UPDATE_PAYSLIPEARNING_ERROR, GET_PAYSLIPDEDUCTIONS_BEGIN, GET_PAYSLIPDEDUCTIONS_SUCCESS, GET_PAYSLIPDEDUCTIONS_ERROR, GET_SINGLE_PAYSLIPDEDUCTION_BEGIN, GET_SINGLE_PAYSLIPDEDUCTION_SUCCESS, GET_SINGLE_PAYSLIPDEDUCTION_ERROR, ADD_PAYSLIPDEDUCTION_BEGIN, ADD_PAYSLIPDEDUCTION_SUCCESS, ADD_PAYSLIPDEDUCTION_ERROR, DELETE_PAYSLIPDEDUCTION_BEGIN, DELETE_PAYSLIPDEDUCTION_SUCCESS, DELETE_PAYSLIPDEDUCTION_ERROR, UPDATE_PAYSLIPDEDUCTION_BEGIN, UPDATE_PAYSLIPDEDUCTION_SUCCESS, UPDATE_PAYSLIPDEDUCTION_ERROR } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isPayslipEditing: false,\n  alertPayslip: {\n    show: false,\n    msg: \"\",\n    type: \"\"\n  },\n  editPayslipID: null,\n  payslips_loading: false,\n  payslips_error: false,\n  payslips: [],\n  single_payslip_loading: false,\n  single_payslip_error: false,\n  single_payslip: {},\n  delete_payslip_loading: false,\n  delete_payslip_error: false,\n  update_payslip_loading: false,\n  update_payslip_error: false,\n  add_payslip_loading: false,\n  add_payslip_error: false,\n  // filterValue: \"Female\",\n  // filterfield: \"gender\",\n  // payslip earnings\n  isPayslipEarningEditing: false,\n  alertPayslipEarning: {\n    show: false,\n    msg: \"\",\n    type: \"\"\n  },\n  editPayslipEarningID: null,\n  payslipearnings_loading: false,\n  payslipearnings_error: false,\n  payslipearnings: [],\n  single_payslipearning_loading: false,\n  single_payslipearning_error: false,\n  single_payslipearning: {},\n  delete_payslipearning_loading: false,\n  delete_payslipearning_error: false,\n  update_payslipearning_loading: false,\n  update_payslipearning_error: false,\n  add_payslipearning_loading: false,\n  add_payslipearning_error: false,\n  // payslip deductions\n  isPayslipDeductionEditing: false,\n  alertPayslipDeduction: {\n    show: false,\n    msg: \"\",\n    type: \"\"\n  },\n  editPayslipDeductionID: null,\n  payslipdeductions_loading: false,\n  payslipdeductions_error: false,\n  payslipdeductions: [],\n  single_payslipdeduction_loading: false,\n  single_payslipdeduction_error: false,\n  single_payslipdeduction: {},\n  delete_payslipdeduction_loading: false,\n  delete_payslipdeduction_error: false,\n  update_payslipdeduction_loading: false,\n  update_payslipdeduction_error: false,\n  add_payslipdeduction_loading: false,\n  add_payslipdeduction_error: false\n};\nconst PayslipsContext = /*#__PURE__*/React.createContext();\nexport const PayslipsProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState); //....... payslip\n\n  const loadPayslips = async () => {\n    dispatch({\n      type: GET_PAYSLIPS_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(payslips_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const payslips = await res.json();\n      dispatch({\n        type: GET_PAYSLIPS_SUCCESS,\n        payload: payslips\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_PAYSLIPS_ERROR\n      });\n    }\n  };\n\n  const setIsPayslipEditingOn = () => {\n    dispatch({\n      type: SET_ISPAYSLIPEDITING_ON\n    });\n  };\n\n  const setIsPayslipEditingOff = () => {\n    dispatch({\n      type: SET_ISPAYSLIPEDITING_OFF\n    });\n  };\n\n  const resetSinglePayslip = () => {\n    dispatch({\n      type: RESET_SINGLE_PAYSLIP\n    });\n  };\n\n  const setPayslipPeriod = async name => {\n    try {\n      dispatch({\n        type: SET_PAYSLIP_PERIOD,\n        payload: name\n      });\n    } catch (error) {\n      dispatch(error);\n    }\n  };\n\n  const setEditPayslipID = async id => {\n    try {\n      dispatch({\n        type: SET_EDITPAYSLIPID,\n        payload: id\n      });\n    } catch (error) {\n      dispatch(error);\n    }\n  };\n\n  const getSinglePayslip = async id => {\n    dispatch({\n      type: GET_SINGLE_PAYSLIP_BEGIN\n    });\n\n    try {\n      const {\n        data\n      } = await axios.get(`${payslips_url}?id=${id}`);\n      const singlepayslip = data;\n      dispatch({\n        type: GET_SINGLE_PAYSLIP_SUCCESS,\n        payload: singlepayslip\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_SINGLE_PAYSLIP_ERROR\n      });\n    }\n  };\n\n  const addPayslip = async data => {\n    const {\n      id,\n      name,\n      from_date,\n      to_date,\n      reason,\n      no_of_days,\n      status\n    } = data; //\n\n    dispatch({\n      type: ADD_PAYSLIP_BEGIN\n    });\n\n    try {\n      await fetch(payslips_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_PAYSLIP_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_PAYSLIP_ERROR\n      });\n    }\n  };\n\n  const updatePayslip = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_PAYSLIP_BEGIN\n    });\n\n    try {\n      await fetch(payslips_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_PAYSLIP_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_PAYSLIP_ERROR\n      });\n    }\n  };\n\n  const deletePayslip = async id => {\n    dispatch({\n      type: DELETE_PAYSLIP_BEGIN\n    });\n\n    try {\n      await fetch(payslips_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_PAYSLIP_SUCCESS\n      });\n      loadPayslips();\n    } catch (err) {\n      dispatch({\n        type: DELETE_PAYSLIP_ERROR\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PayslipsContext.Provider, {\n    value: { ...state,\n      loadPayslips,\n      addPayslip,\n      updatePayslip,\n      deletePayslip,\n      getSinglePayslip,\n      setEditPayslipID,\n      setIsPayslipEditingOn,\n      setIsPayslipEditingOff,\n      resetSinglePayslip,\n      setPayslipPeriod\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PayslipsProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = PayslipsProvider;\nexport const usePayslipsContext = () => {\n  _s2();\n\n  return useContext(PayslipsContext);\n};\n\n_s2(usePayslipsContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"PayslipsProvider\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/context/payslips_context.js"],"names":["React","useContext","useEffect","useReducer","axios","reducer","payslips_url","payslipearnings_url","payslipdeductions_url","SET_EDITPAYSLIPID","SET_ISPAYSLIPEDITING_ON","SET_ISPAYSLIPEDITING_OFF","SET_PAYSLIP_PERIOD","SET_SINGLEPAYSLIP","GET_PAYSLIPS_BEGIN","GET_PAYSLIPS_SUCCESS","GET_PAYSLIPS_ERROR","GET_SINGLE_PAYSLIP_BEGIN","GET_SINGLE_PAYSLIP_SUCCESS","GET_SINGLE_PAYSLIP_ERROR","ADD_PAYSLIP_BEGIN","ADD_PAYSLIP_SUCCESS","ADD_PAYSLIP_ERROR","DELETE_PAYSLIP_BEGIN","DELETE_PAYSLIP_SUCCESS","DELETE_PAYSLIP_ERROR","UPDATE_PAYSLIP_BEGIN","UPDATE_PAYSLIP_SUCCESS","UPDATE_PAYSLIP_ERROR","RESET_SINGLE_PAYSLIP","GET_PAYSLIPEARNINGS_BEGIN","GET_PAYSLIPEARNINGS_SUCCESS","GET_PAYSLIPEARNINGS_ERROR","GET_SINGLE_PAYSLIPEARNING_BEGIN","GET_SINGLE_PAYSLIPEARNING_SUCCESS","GET_SINGLE_PAYSLIPEARNING_ERROR","ADD_PAYSLIPEARNING_BEGIN","ADD_PAYSLIPEARNING_SUCCESS","ADD_PAYSLIPEARNING_ERROR","DELETE_PAYSLIPEARNING_BEGIN","DELETE_PAYSLIPEARNING_SUCCESS","DELETE_PAYSLIPEARNING_ERROR","UPDATE_PAYSLIPEARNING_BEGIN","UPDATE_PAYSLIPEARNING_SUCCESS","UPDATE_PAYSLIPEARNING_ERROR","GET_PAYSLIPDEDUCTIONS_BEGIN","GET_PAYSLIPDEDUCTIONS_SUCCESS","GET_PAYSLIPDEDUCTIONS_ERROR","GET_SINGLE_PAYSLIPDEDUCTION_BEGIN","GET_SINGLE_PAYSLIPDEDUCTION_SUCCESS","GET_SINGLE_PAYSLIPDEDUCTION_ERROR","ADD_PAYSLIPDEDUCTION_BEGIN","ADD_PAYSLIPDEDUCTION_SUCCESS","ADD_PAYSLIPDEDUCTION_ERROR","DELETE_PAYSLIPDEDUCTION_BEGIN","DELETE_PAYSLIPDEDUCTION_SUCCESS","DELETE_PAYSLIPDEDUCTION_ERROR","UPDATE_PAYSLIPDEDUCTION_BEGIN","UPDATE_PAYSLIPDEDUCTION_SUCCESS","UPDATE_PAYSLIPDEDUCTION_ERROR","initialState","isPayslipEditing","alertPayslip","show","msg","type","editPayslipID","payslips_loading","payslips_error","payslips","single_payslip_loading","single_payslip_error","single_payslip","delete_payslip_loading","delete_payslip_error","update_payslip_loading","update_payslip_error","add_payslip_loading","add_payslip_error","isPayslipEarningEditing","alertPayslipEarning","editPayslipEarningID","payslipearnings_loading","payslipearnings_error","payslipearnings","single_payslipearning_loading","single_payslipearning_error","single_payslipearning","delete_payslipearning_loading","delete_payslipearning_error","update_payslipearning_loading","update_payslipearning_error","add_payslipearning_loading","add_payslipearning_error","isPayslipDeductionEditing","alertPayslipDeduction","editPayslipDeductionID","payslipdeductions_loading","payslipdeductions_error","payslipdeductions","single_payslipdeduction_loading","single_payslipdeduction_error","single_payslipdeduction","delete_payslipdeduction_loading","delete_payslipdeduction_error","update_payslipdeduction_loading","update_payslipdeduction_error","add_payslipdeduction_loading","add_payslipdeduction_error","PayslipsContext","createContext","PayslipsProvider","children","state","dispatch","loadPayslips","res","fetch","json","payload","error","setIsPayslipEditingOn","setIsPayslipEditingOff","resetSinglePayslip","setPayslipPeriod","name","setEditPayslipID","id","getSinglePayslip","data","get","singlepayslip","addPayslip","from_date","to_date","reason","no_of_days","status","method","body","JSON","stringify","err","updatePayslip","fields","deletePayslip","usePayslipsContext"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/payslips_reducer\";\r\nimport { payslips_url } from \"../utils/constants\";\r\nimport { payslipearnings_url } from \"../utils/constants\";\r\nimport { payslipdeductions_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITPAYSLIPID,\r\n  SET_ISPAYSLIPEDITING_ON,\r\n  SET_ISPAYSLIPEDITING_OFF,\r\n  SET_PAYSLIP_PERIOD,\r\n  SET_SINGLEPAYSLIP,\r\n  GET_PAYSLIPS_BEGIN,\r\n  GET_PAYSLIPS_SUCCESS,\r\n  GET_PAYSLIPS_ERROR,\r\n  GET_SINGLE_PAYSLIP_BEGIN,\r\n  GET_SINGLE_PAYSLIP_SUCCESS,\r\n  GET_SINGLE_PAYSLIP_ERROR,\r\n  ADD_PAYSLIP_BEGIN,\r\n  ADD_PAYSLIP_SUCCESS,\r\n  ADD_PAYSLIP_ERROR,\r\n  DELETE_PAYSLIP_BEGIN,\r\n  DELETE_PAYSLIP_SUCCESS,\r\n  DELETE_PAYSLIP_ERROR,\r\n  UPDATE_PAYSLIP_BEGIN,\r\n  UPDATE_PAYSLIP_SUCCESS,\r\n  UPDATE_PAYSLIP_ERROR,\r\n  RESET_SINGLE_PAYSLIP,\r\n  GET_PAYSLIPEARNINGS_BEGIN,\r\n  GET_PAYSLIPEARNINGS_SUCCESS,\r\n  GET_PAYSLIPEARNINGS_ERROR,\r\n  GET_SINGLE_PAYSLIPEARNING_BEGIN,\r\n  GET_SINGLE_PAYSLIPEARNING_SUCCESS,\r\n  GET_SINGLE_PAYSLIPEARNING_ERROR,\r\n  ADD_PAYSLIPEARNING_BEGIN,\r\n  ADD_PAYSLIPEARNING_SUCCESS,\r\n  ADD_PAYSLIPEARNING_ERROR,\r\n  DELETE_PAYSLIPEARNING_BEGIN,\r\n  DELETE_PAYSLIPEARNING_SUCCESS,\r\n  DELETE_PAYSLIPEARNING_ERROR,\r\n  UPDATE_PAYSLIPEARNING_BEGIN,\r\n  UPDATE_PAYSLIPEARNING_SUCCESS,\r\n  UPDATE_PAYSLIPEARNING_ERROR,\r\n  GET_PAYSLIPDEDUCTIONS_BEGIN,\r\n  GET_PAYSLIPDEDUCTIONS_SUCCESS,\r\n  GET_PAYSLIPDEDUCTIONS_ERROR,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_BEGIN,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_SUCCESS,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_ERROR,\r\n  ADD_PAYSLIPDEDUCTION_BEGIN,\r\n  ADD_PAYSLIPDEDUCTION_SUCCESS,\r\n  ADD_PAYSLIPDEDUCTION_ERROR,\r\n  DELETE_PAYSLIPDEDUCTION_BEGIN,\r\n  DELETE_PAYSLIPDEDUCTION_SUCCESS,\r\n  DELETE_PAYSLIPDEDUCTION_ERROR,\r\n  UPDATE_PAYSLIPDEDUCTION_BEGIN,\r\n  UPDATE_PAYSLIPDEDUCTION_SUCCESS,\r\n  UPDATE_PAYSLIPDEDUCTION_ERROR,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isPayslipEditing: false,\r\n  alertPayslip: { show: false, msg: \"\", type: \"\" },\r\n  editPayslipID: null,\r\n  payslips_loading: false,\r\n  payslips_error: false,\r\n  payslips: [],\r\n  single_payslip_loading: false,\r\n  single_payslip_error: false,\r\n  single_payslip: {},\r\n  delete_payslip_loading: false,\r\n  delete_payslip_error: false,\r\n  update_payslip_loading: false,\r\n  update_payslip_error: false,\r\n  add_payslip_loading: false,\r\n  add_payslip_error: false,\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n  // payslip earnings\r\n  isPayslipEarningEditing: false,\r\n  alertPayslipEarning: { show: false, msg: \"\", type: \"\" },\r\n  editPayslipEarningID: null,\r\n  payslipearnings_loading: false,\r\n  payslipearnings_error: false,\r\n  payslipearnings: [],\r\n  single_payslipearning_loading: false,\r\n  single_payslipearning_error: false,\r\n  single_payslipearning: {},\r\n  delete_payslipearning_loading: false,\r\n  delete_payslipearning_error: false,\r\n  update_payslipearning_loading: false,\r\n  update_payslipearning_error: false,\r\n  add_payslipearning_loading: false,\r\n  add_payslipearning_error: false,\r\n  // payslip deductions\r\n  isPayslipDeductionEditing: false,\r\n  alertPayslipDeduction: { show: false, msg: \"\", type: \"\" },\r\n  editPayslipDeductionID: null,\r\n  payslipdeductions_loading: false,\r\n  payslipdeductions_error: false,\r\n  payslipdeductions: [],\r\n  single_payslipdeduction_loading: false,\r\n  single_payslipdeduction_error: false,\r\n  single_payslipdeduction: {},\r\n  delete_payslipdeduction_loading: false,\r\n  delete_payslipdeduction_error: false,\r\n  update_payslipdeduction_loading: false,\r\n  update_payslipdeduction_error: false,\r\n  add_payslipdeduction_loading: false,\r\n  add_payslipdeduction_error: false,\r\n};\r\n\r\nconst PayslipsContext = React.createContext();\r\n\r\nexport const PayslipsProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //....... payslip\r\n  const loadPayslips = async () => {\r\n    dispatch({ type: GET_PAYSLIPS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(payslips_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslips = await res.json();\r\n      dispatch({ type: GET_PAYSLIPS_SUCCESS, payload: payslips });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPS_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsPayslipEditingOn = () => {\r\n    dispatch({ type: SET_ISPAYSLIPEDITING_ON });\r\n  };\r\n\r\n  const setIsPayslipEditingOff = () => {\r\n    dispatch({ type: SET_ISPAYSLIPEDITING_OFF });\r\n  };\r\n\r\n  const resetSinglePayslip = () => {\r\n    dispatch({ type: RESET_SINGLE_PAYSLIP });\r\n  };\r\n\r\n  const setPayslipPeriod = async (name) => {\r\n    try {\r\n      dispatch({ type: SET_PAYSLIP_PERIOD, payload: name });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const setEditPayslipID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITPAYSLIPID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSinglePayslip = async (id) => {\r\n    dispatch({ type: GET_SINGLE_PAYSLIP_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${payslips_url}?id=${id}`);\r\n      const singlepayslip = data;\r\n      dispatch({ type: GET_SINGLE_PAYSLIP_SUCCESS, payload: singlepayslip });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const addPayslip = async (data) => {\r\n    const { id, name, from_date, to_date, reason, no_of_days, status } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYSLIP_BEGIN });\r\n    try {\r\n      await fetch(payslips_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYSLIP_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayslip = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYSLIP_BEGIN });\r\n    try {\r\n      await fetch(payslips_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYSLIP_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayslip = async (id) => {\r\n    dispatch({ type: DELETE_PAYSLIP_BEGIN });\r\n    try {\r\n      await fetch(payslips_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYSLIP_SUCCESS });\r\n      loadPayslips();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n  return (\r\n    <PayslipsContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadPayslips,\r\n        addPayslip,\r\n        updatePayslip,\r\n        deletePayslip,\r\n        getSinglePayslip,\r\n        setEditPayslipID,\r\n        setIsPayslipEditingOn,\r\n        setIsPayslipEditingOff,\r\n        resetSinglePayslip,\r\n        setPayslipPeriod,\r\n      }}\r\n    >\r\n      {children}\r\n    </PayslipsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePayslipsContext = () => {\r\n  return useContext(PayslipsContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}