{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\context\\\\payslips_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport reducer from \"../reducers/payslips_reducer\";\nimport { payslips_url } from \"../utils/constants\";\nimport { payslipearnings_url } from \"../utils/constants\";\nimport { payslipdeductions_url } from \"../utils/constants\";\nimport { SET_EDITPAYSLIPID, SET_ISPAYSLIPEDITING_ON, SET_ISPAYSLIPEDITING_OFF, SET_PAYSLIP_PERIOD, SET_PAYSLIPEARNING_AMOUNT, SET_SINGLEPAYSLIP, GET_PAYSLIPS_BEGIN, GET_PAYSLIPS_SUCCESS, GET_PAYSLIPS_ERROR, GET_SINGLE_PAYSLIP_BEGIN, GET_SINGLE_PAYSLIP_SUCCESS, GET_SINGLE_PAYSLIP_ERROR, GET_SINGLEBATCH_PAYSLIP_BEGIN, GET_SINGLEBATCH_PAYSLIP_SUCCESS, GET_SINGLEBATCH_PAYSLIP_ERROR, ADD_PAYSLIP_BEGIN, ADD_PAYSLIP_SUCCESS, ADD_PAYSLIP_ERROR, DELETE_PAYSLIP_BEGIN, DELETE_PAYSLIP_SUCCESS, DELETE_PAYSLIP_ERROR, UPDATE_PAYSLIP_BEGIN, UPDATE_PAYSLIP_SUCCESS, UPDATE_PAYSLIP_ERROR, RESET_SINGLE_PAYSLIP, GET_PAYSLIPEARNINGS_BEGIN, GET_PAYSLIPEARNINGS_SUCCESS, GET_PAYSLIPEARNINGS_ERROR, GET_SINGLE_PAYSLIPEARNING_BEGIN, GET_SINGLE_PAYSLIPEARNING_SUCCESS, GET_SINGLE_PAYSLIPEARNING_ERROR, ADD_PAYSLIPEARNING_BEGIN, ADD_PAYSLIPEARNING_SUCCESS, ADD_PAYSLIPEARNING_ERROR, DELETE_PAYSLIPEARNING_BEGIN, DELETE_PAYSLIPEARNING_SUCCESS, DELETE_PAYSLIPEARNING_ERROR, UPDATE_PAYSLIPEARNING_BEGIN, UPDATE_PAYSLIPEARNING_SUCCESS, UPDATE_PAYSLIPEARNING_ERROR, GET_PAYSLIPDEDUCTIONS_BEGIN, GET_PAYSLIPDEDUCTIONS_SUCCESS, GET_PAYSLIPDEDUCTIONS_ERROR, GET_SINGLE_PAYSLIPDEDUCTION_BEGIN, GET_SINGLE_PAYSLIPDEDUCTION_SUCCESS, GET_SINGLE_PAYSLIPDEDUCTION_ERROR, ADD_PAYSLIPDEDUCTION_BEGIN, ADD_PAYSLIPDEDUCTION_SUCCESS, ADD_PAYSLIPDEDUCTION_ERROR, DELETE_PAYSLIPDEDUCTION_BEGIN, DELETE_PAYSLIPDEDUCTION_SUCCESS, DELETE_PAYSLIPDEDUCTION_ERROR, UPDATE_PAYSLIPDEDUCTION_BEGIN, UPDATE_PAYSLIPDEDUCTION_SUCCESS, UPDATE_PAYSLIPDEDUCTION_ERROR } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isPayslipEditing: false,\n  alertPayslip: {\n    show: false,\n    msg: \"\",\n    type: \"\"\n  },\n  editPayslipID: null,\n  payslips_loading: false,\n  payslips_error: false,\n  payslip_period: \"\",\n  payslips: [],\n  single_payslip_loading: false,\n  single_payslip_error: false,\n  single_payslip: {},\n  singlebatch_payslip_loading: false,\n  singlebatch_payslip_error: false,\n  singlebatch_payslip: {},\n  delete_payslip_loading: false,\n  delete_payslip_error: false,\n  update_payslip_loading: false,\n  update_payslip_error: false,\n  add_payslip_loading: false,\n  add_payslip_error: false,\n  // filterValue: \"Female\",\n  // filterfield: \"gender\",\n  // payslip earnings\n  isPayslipEarningEditing: false,\n  alertPayslipEarning: {\n    show: false,\n    msg: \"\",\n    type: \"\"\n  },\n  editPayslipEarningID: null,\n  payslipearnings_loading: false,\n  payslipearnings_error: false,\n  payslipearnings: [],\n  single_payslipearning_amount: 0,\n  single_payslipearning_loading: false,\n  single_payslipearning_error: false,\n  single_payslipearning: {},\n  delete_payslipearning_loading: false,\n  delete_payslipearning_error: false,\n  update_payslipearning_loading: false,\n  update_payslipearning_error: false,\n  add_payslipearning_loading: false,\n  add_payslipearning_error: false,\n  // payslip deductions\n  isPayslipDeductionEditing: false,\n  alertPayslipDeduction: {\n    show: false,\n    msg: \"\",\n    type: \"\"\n  },\n  editPayslipDeductionID: null,\n  payslipdeductions_loading: false,\n  payslipdeductions_error: false,\n  payslipdeductions: [],\n  single_payslipdeduction_loading: false,\n  single_payslipdeduction_error: false,\n  single_payslipdeduction: {},\n  delete_payslipdeduction_loading: false,\n  delete_payslipdeduction_error: false,\n  update_payslipdeduction_loading: false,\n  update_payslipdeduction_error: false,\n  add_payslipdeduction_loading: false,\n  add_payslipdeduction_error: false\n};\nconst PayslipsContext = /*#__PURE__*/React.createContext();\nexport const PayslipsProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState); //....... payslip\n\n  const loadPayslips = async () => {\n    dispatch({\n      type: GET_PAYSLIPS_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(payslips_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const payslips = await res.json();\n      dispatch({\n        type: GET_PAYSLIPS_SUCCESS,\n        payload: payslips\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_PAYSLIPS_ERROR\n      });\n    }\n  };\n\n  const getSingleBatchPayslip = async period => {\n    dispatch({\n      type: GET_SINGLEBATCH_PAYSLIP_BEGIN\n    });\n\n    try {\n      const res = await fetch(`${payslips_url}?fv=${period}`);\n      console.log(`${payslips_url}?fv=${period}`);\n      const singlebatchpayslip = await res.json();\n      dispatch({\n        type: GET_SINGLEBATCH_PAYSLIP_SUCCESS,\n        payload: singlebatchpayslip\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_SINGLEBATCH_PAYSLIP_ERROR\n      });\n    }\n  };\n\n  const setIsPayslipEditingOn = () => {\n    dispatch({\n      type: SET_ISPAYSLIPEDITING_ON\n    });\n  };\n\n  const setIsPayslipEditingOff = () => {\n    dispatch({\n      type: SET_ISPAYSLIPEDITING_OFF\n    });\n  };\n\n  const resetSinglePayslip = () => {\n    dispatch({\n      type: RESET_SINGLE_PAYSLIP\n    });\n  };\n\n  const setPayslipEarningAmount = value => {\n    dispatch({\n      type: SET_PAYSLIPEARNING_AMOUNT,\n      payload: value\n    });\n  };\n\n  const setPayslipPeriod = async name => {\n    try {\n      dispatch({\n        type: SET_PAYSLIP_PERIOD,\n        payload: name\n      });\n    } catch (error) {\n      dispatch(error);\n    }\n  };\n\n  const setEditPayslipID = async id => {\n    try {\n      dispatch({\n        type: SET_EDITPAYSLIPID,\n        payload: id\n      });\n    } catch (error) {\n      dispatch(error);\n    }\n  };\n\n  const getSinglePayslip = async id => {\n    dispatch({\n      type: GET_SINGLE_PAYSLIP_BEGIN\n    });\n\n    try {\n      const {\n        data\n      } = await axios.get(`${payslips_url}?id=${id}`);\n      const singlepayslip = data;\n      dispatch({\n        type: GET_SINGLE_PAYSLIP_SUCCESS,\n        payload: singlepayslip\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_SINGLE_PAYSLIP_ERROR\n      });\n    }\n  };\n\n  const addPayslip = async data => {\n    const {\n      id,\n      name,\n      from_date,\n      to_date,\n      reason,\n      no_of_days,\n      status\n    } = data; //\n\n    dispatch({\n      type: ADD_PAYSLIP_BEGIN\n    });\n\n    try {\n      await fetch(payslips_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_PAYSLIP_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_PAYSLIP_ERROR\n      });\n    }\n  };\n\n  const updatePayslip = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_PAYSLIP_BEGIN\n    });\n\n    try {\n      await fetch(payslips_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_PAYSLIP_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_PAYSLIP_ERROR\n      });\n    }\n  };\n\n  const deletePayslip = async id => {\n    dispatch({\n      type: DELETE_PAYSLIP_BEGIN\n    });\n\n    try {\n      await fetch(payslips_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_PAYSLIP_SUCCESS\n      });\n      loadPayslips();\n    } catch (err) {\n      dispatch({\n        type: DELETE_PAYSLIP_ERROR\n      });\n    }\n  }; //.... payslip earnings\n\n\n  const loadPayslipEarnings = async () => {\n    dispatch({\n      type: GET_PAYSLIPEARNINGS_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(payslipearnings_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const payslipearnings = await res.json();\n      dispatch({\n        type: GET_PAYSLIPEARNINGS_SUCCESS,\n        payload: payslipearnings\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_PAYSLIPEARNINGS_ERROR\n      });\n    }\n  };\n\n  const addPayslipEarning = async data => {\n    const {\n      id,\n      name,\n      period,\n      description,\n      amount\n    } = data; //\n\n    dispatch({\n      type: ADD_PAYSLIPEARNING_BEGIN\n    });\n\n    try {\n      await fetch(payslipearnings_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_PAYSLIPEARNING_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_PAYSLIPEARNING_ERROR\n      });\n    }\n  };\n\n  const updatePayslipEarning = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_PAYSLIPEARNING_BEGIN\n    });\n\n    try {\n      await fetch(payslipearnings_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_PAYSLIPEARNING_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_PAYSLIPEARNING_ERROR\n      });\n    }\n  };\n\n  const deletePayslipEarning = async id => {\n    dispatch({\n      type: DELETE_PAYSLIPEARNING_BEGIN\n    });\n\n    try {\n      await fetch(payslipearnings_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_PAYSLIPEARNING_SUCCESS\n      });\n      loadPayslipEarnings();\n    } catch (err) {\n      dispatch({\n        type: DELETE_PAYSLIPEARNING_ERROR\n      });\n    }\n  }; //.... payslip deductions\n\n\n  const loadPayslipDeductions = async () => {\n    dispatch({\n      type: GET_PAYSLIPDEDUCTIONS_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(payslipdeductions_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const payslipdeductions = await res.json();\n      dispatch({\n        type: GET_PAYSLIPDEDUCTIONS_SUCCESS,\n        payload: payslipdeductions\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_PAYSLIPDEDUCTIONS_ERROR\n      });\n    }\n  };\n\n  const addPayslipDeduction = async data => {\n    const {\n      id,\n      name,\n      period,\n      description,\n      amount\n    } = data; //\n\n    dispatch({\n      type: ADD_PAYSLIPDEDUCTION_BEGIN\n    });\n\n    try {\n      await fetch(payslipdeductions_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_PAYSLIPDEDUCTION_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_PAYSLIPDEDUCTION_ERROR\n      });\n    }\n  };\n\n  const updatePayslipDeduction = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_PAYSLIPDEDUCTION_BEGIN\n    });\n\n    try {\n      await fetch(payslipdeductions_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_PAYSLIPDEDUCTION_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_PAYSLIPDEDUCTION_ERROR\n      });\n    }\n  };\n\n  const deletePayslipDeduction = async id => {\n    dispatch({\n      type: DELETE_PAYSLIPDEDUCTION_BEGIN\n    });\n\n    try {\n      await fetch(payslipdeductions_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_PAYSLIPDEDUCTION_SUCCESS\n      });\n      loadPayslipDeductions();\n    } catch (err) {\n      dispatch({\n        type: DELETE_PAYSLIPDEDUCTION_ERROR\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PayslipsContext.Provider, {\n    value: { ...state,\n      loadPayslips,\n      addPayslip,\n      updatePayslip,\n      deletePayslip,\n      getSinglePayslip,\n      getSingleBatchPayslip,\n      setEditPayslipID,\n      setIsPayslipEditingOn,\n      setIsPayslipEditingOff,\n      resetSinglePayslip,\n      setPayslipPeriod\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PayslipsProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = PayslipsProvider;\nexport const usePayslipsContext = () => {\n  _s2();\n\n  return useContext(PayslipsContext);\n};\n\n_s2(usePayslipsContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"PayslipsProvider\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/context/payslips_context.js"],"names":["React","useContext","useEffect","useReducer","axios","reducer","payslips_url","payslipearnings_url","payslipdeductions_url","SET_EDITPAYSLIPID","SET_ISPAYSLIPEDITING_ON","SET_ISPAYSLIPEDITING_OFF","SET_PAYSLIP_PERIOD","SET_PAYSLIPEARNING_AMOUNT","SET_SINGLEPAYSLIP","GET_PAYSLIPS_BEGIN","GET_PAYSLIPS_SUCCESS","GET_PAYSLIPS_ERROR","GET_SINGLE_PAYSLIP_BEGIN","GET_SINGLE_PAYSLIP_SUCCESS","GET_SINGLE_PAYSLIP_ERROR","GET_SINGLEBATCH_PAYSLIP_BEGIN","GET_SINGLEBATCH_PAYSLIP_SUCCESS","GET_SINGLEBATCH_PAYSLIP_ERROR","ADD_PAYSLIP_BEGIN","ADD_PAYSLIP_SUCCESS","ADD_PAYSLIP_ERROR","DELETE_PAYSLIP_BEGIN","DELETE_PAYSLIP_SUCCESS","DELETE_PAYSLIP_ERROR","UPDATE_PAYSLIP_BEGIN","UPDATE_PAYSLIP_SUCCESS","UPDATE_PAYSLIP_ERROR","RESET_SINGLE_PAYSLIP","GET_PAYSLIPEARNINGS_BEGIN","GET_PAYSLIPEARNINGS_SUCCESS","GET_PAYSLIPEARNINGS_ERROR","GET_SINGLE_PAYSLIPEARNING_BEGIN","GET_SINGLE_PAYSLIPEARNING_SUCCESS","GET_SINGLE_PAYSLIPEARNING_ERROR","ADD_PAYSLIPEARNING_BEGIN","ADD_PAYSLIPEARNING_SUCCESS","ADD_PAYSLIPEARNING_ERROR","DELETE_PAYSLIPEARNING_BEGIN","DELETE_PAYSLIPEARNING_SUCCESS","DELETE_PAYSLIPEARNING_ERROR","UPDATE_PAYSLIPEARNING_BEGIN","UPDATE_PAYSLIPEARNING_SUCCESS","UPDATE_PAYSLIPEARNING_ERROR","GET_PAYSLIPDEDUCTIONS_BEGIN","GET_PAYSLIPDEDUCTIONS_SUCCESS","GET_PAYSLIPDEDUCTIONS_ERROR","GET_SINGLE_PAYSLIPDEDUCTION_BEGIN","GET_SINGLE_PAYSLIPDEDUCTION_SUCCESS","GET_SINGLE_PAYSLIPDEDUCTION_ERROR","ADD_PAYSLIPDEDUCTION_BEGIN","ADD_PAYSLIPDEDUCTION_SUCCESS","ADD_PAYSLIPDEDUCTION_ERROR","DELETE_PAYSLIPDEDUCTION_BEGIN","DELETE_PAYSLIPDEDUCTION_SUCCESS","DELETE_PAYSLIPDEDUCTION_ERROR","UPDATE_PAYSLIPDEDUCTION_BEGIN","UPDATE_PAYSLIPDEDUCTION_SUCCESS","UPDATE_PAYSLIPDEDUCTION_ERROR","initialState","isPayslipEditing","alertPayslip","show","msg","type","editPayslipID","payslips_loading","payslips_error","payslip_period","payslips","single_payslip_loading","single_payslip_error","single_payslip","singlebatch_payslip_loading","singlebatch_payslip_error","singlebatch_payslip","delete_payslip_loading","delete_payslip_error","update_payslip_loading","update_payslip_error","add_payslip_loading","add_payslip_error","isPayslipEarningEditing","alertPayslipEarning","editPayslipEarningID","payslipearnings_loading","payslipearnings_error","payslipearnings","single_payslipearning_amount","single_payslipearning_loading","single_payslipearning_error","single_payslipearning","delete_payslipearning_loading","delete_payslipearning_error","update_payslipearning_loading","update_payslipearning_error","add_payslipearning_loading","add_payslipearning_error","isPayslipDeductionEditing","alertPayslipDeduction","editPayslipDeductionID","payslipdeductions_loading","payslipdeductions_error","payslipdeductions","single_payslipdeduction_loading","single_payslipdeduction_error","single_payslipdeduction","delete_payslipdeduction_loading","delete_payslipdeduction_error","update_payslipdeduction_loading","update_payslipdeduction_error","add_payslipdeduction_loading","add_payslipdeduction_error","PayslipsContext","createContext","PayslipsProvider","children","state","dispatch","loadPayslips","res","fetch","json","payload","error","getSingleBatchPayslip","period","console","log","singlebatchpayslip","setIsPayslipEditingOn","setIsPayslipEditingOff","resetSinglePayslip","setPayslipEarningAmount","value","setPayslipPeriod","name","setEditPayslipID","id","getSinglePayslip","data","get","singlepayslip","addPayslip","from_date","to_date","reason","no_of_days","status","method","body","JSON","stringify","err","updatePayslip","fields","deletePayslip","loadPayslipEarnings","addPayslipEarning","description","amount","updatePayslipEarning","deletePayslipEarning","loadPayslipDeductions","addPayslipDeduction","updatePayslipDeduction","deletePayslipDeduction","usePayslipsContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,UAAvC,QAAyD,OAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,mBAAT,QAAoC,oBAApC;AACA,SAASC,qBAAT,QAAsC,oBAAtC;AAEA,SACEC,iBADF,EAEEC,uBAFF,EAGEC,wBAHF,EAIEC,kBAJF,EAKEC,yBALF,EAMEC,iBANF,EAOEC,kBAPF,EAQEC,oBARF,EASEC,kBATF,EAUEC,wBAVF,EAWEC,0BAXF,EAYEC,wBAZF,EAaEC,6BAbF,EAcEC,+BAdF,EAeEC,6BAfF,EAgBEC,iBAhBF,EAiBEC,mBAjBF,EAkBEC,iBAlBF,EAmBEC,oBAnBF,EAoBEC,sBApBF,EAqBEC,oBArBF,EAsBEC,oBAtBF,EAuBEC,sBAvBF,EAwBEC,oBAxBF,EAyBEC,oBAzBF,EA0BEC,yBA1BF,EA2BEC,2BA3BF,EA4BEC,yBA5BF,EA6BEC,+BA7BF,EA8BEC,iCA9BF,EA+BEC,+BA/BF,EAgCEC,wBAhCF,EAiCEC,0BAjCF,EAkCEC,wBAlCF,EAmCEC,2BAnCF,EAoCEC,6BApCF,EAqCEC,2BArCF,EAsCEC,2BAtCF,EAuCEC,6BAvCF,EAwCEC,2BAxCF,EAyCEC,2BAzCF,EA0CEC,6BA1CF,EA2CEC,2BA3CF,EA4CEC,iCA5CF,EA6CEC,mCA7CF,EA8CEC,iCA9CF,EA+CEC,0BA/CF,EAgDEC,4BAhDF,EAiDEC,0BAjDF,EAkDEC,6BAlDF,EAmDEC,+BAnDF,EAoDEC,6BApDF,EAqDEC,6BArDF,EAsDEC,+BAtDF,EAuDEC,6BAvDF,QAwDO,YAxDP;;AA0DA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,gBAAgB,EAAE,KADC;AAEnBC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,GAAG,EAAE,EAApB;AAAwBC,IAAAA,IAAI,EAAE;AAA9B,GAFK;AAGnBC,EAAAA,aAAa,EAAE,IAHI;AAInBC,EAAAA,gBAAgB,EAAE,KAJC;AAKnBC,EAAAA,cAAc,EAAE,KALG;AAMnBC,EAAAA,cAAc,EAAE,EANG;AAOnBC,EAAAA,QAAQ,EAAE,EAPS;AAQnBC,EAAAA,sBAAsB,EAAE,KARL;AASnBC,EAAAA,oBAAoB,EAAE,KATH;AAUnBC,EAAAA,cAAc,EAAE,EAVG;AAWnBC,EAAAA,2BAA2B,EAAE,KAXV;AAYnBC,EAAAA,yBAAyB,EAAE,KAZR;AAanBC,EAAAA,mBAAmB,EAAE,EAbF;AAcnBC,EAAAA,sBAAsB,EAAE,KAdL;AAenBC,EAAAA,oBAAoB,EAAE,KAfH;AAgBnBC,EAAAA,sBAAsB,EAAE,KAhBL;AAiBnBC,EAAAA,oBAAoB,EAAE,KAjBH;AAkBnBC,EAAAA,mBAAmB,EAAE,KAlBF;AAmBnBC,EAAAA,iBAAiB,EAAE,KAnBA;AAoBnB;AACA;AACA;AACAC,EAAAA,uBAAuB,EAAE,KAvBN;AAwBnBC,EAAAA,mBAAmB,EAAE;AAAErB,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,GAAG,EAAE,EAApB;AAAwBC,IAAAA,IAAI,EAAE;AAA9B,GAxBF;AAyBnBoB,EAAAA,oBAAoB,EAAE,IAzBH;AA0BnBC,EAAAA,uBAAuB,EAAE,KA1BN;AA2BnBC,EAAAA,qBAAqB,EAAE,KA3BJ;AA4BnBC,EAAAA,eAAe,EAAE,EA5BE;AA6BnBC,EAAAA,4BAA4B,EAAE,CA7BX;AA8BnBC,EAAAA,6BAA6B,EAAE,KA9BZ;AA+BnBC,EAAAA,2BAA2B,EAAE,KA/BV;AAgCnBC,EAAAA,qBAAqB,EAAE,EAhCJ;AAiCnBC,EAAAA,6BAA6B,EAAE,KAjCZ;AAkCnBC,EAAAA,2BAA2B,EAAE,KAlCV;AAmCnBC,EAAAA,6BAA6B,EAAE,KAnCZ;AAoCnBC,EAAAA,2BAA2B,EAAE,KApCV;AAqCnBC,EAAAA,0BAA0B,EAAE,KArCT;AAsCnBC,EAAAA,wBAAwB,EAAE,KAtCP;AAuCnB;AACAC,EAAAA,yBAAyB,EAAE,KAxCR;AAyCnBC,EAAAA,qBAAqB,EAAE;AAAErC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,GAAG,EAAE,EAApB;AAAwBC,IAAAA,IAAI,EAAE;AAA9B,GAzCJ;AA0CnBoC,EAAAA,sBAAsB,EAAE,IA1CL;AA2CnBC,EAAAA,yBAAyB,EAAE,KA3CR;AA4CnBC,EAAAA,uBAAuB,EAAE,KA5CN;AA6CnBC,EAAAA,iBAAiB,EAAE,EA7CA;AA8CnBC,EAAAA,+BAA+B,EAAE,KA9Cd;AA+CnBC,EAAAA,6BAA6B,EAAE,KA/CZ;AAgDnBC,EAAAA,uBAAuB,EAAE,EAhDN;AAiDnBC,EAAAA,+BAA+B,EAAE,KAjDd;AAkDnBC,EAAAA,6BAA6B,EAAE,KAlDZ;AAmDnBC,EAAAA,+BAA+B,EAAE,KAnDd;AAoDnBC,EAAAA,6BAA6B,EAAE,KApDZ;AAqDnBC,EAAAA,4BAA4B,EAAE,KArDX;AAsDnBC,EAAAA,0BAA0B,EAAE;AAtDT,CAArB;AAyDA,MAAMC,eAAe,gBAAGtH,KAAK,CAACuH,aAAN,EAAxB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAChD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxH,UAAU,CAACE,OAAD,EAAU2D,YAAV,CAApC,CADgD,CAGhD;;AACA,QAAM4D,YAAY,GAAG,YAAY;AAC/BD,IAAAA,QAAQ,CAAC;AAAEtD,MAAAA,IAAI,EAAEtD;AAAR,KAAD,CAAR;;AACA,QAAI;AACF;AACA;AACA;AACA,YAAM8G,GAAG,GAAG,MAAMC,KAAK,CAACxH,YAAD,CAAvB,CAJE,CAKF;AACA;;AACA,YAAMoE,QAAQ,GAAG,MAAMmD,GAAG,CAACE,IAAJ,EAAvB;AACAJ,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAErD,oBAAR;AAA8BgH,QAAAA,OAAO,EAAEtD;AAAvC,OAAD,CAAR;AACD,KATD,CASE,OAAOuD,KAAP,EAAc;AACdN,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAEpD;AAAR,OAAD,CAAR;AACD;AACF,GAdD;;AAgBA,QAAMiH,qBAAqB,GAAG,MAAOC,MAAP,IAAkB;AAC9CR,IAAAA,QAAQ,CAAC;AAAEtD,MAAAA,IAAI,EAAEhD;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMwG,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAExH,YAAa,OAAM6H,MAAO,EAA9B,CAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAE/H,YAAa,OAAM6H,MAAO,EAAzC;AACA,YAAMG,kBAAkB,GAAG,MAAMT,GAAG,CAACE,IAAJ,EAAjC;AAEAJ,MAAAA,QAAQ,CAAC;AACPtD,QAAAA,IAAI,EAAE/C,+BADC;AAEP0G,QAAAA,OAAO,EAAEM;AAFF,OAAD,CAAR;AAID,KATD,CASE,OAAOL,KAAP,EAAc;AACdN,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAE9C;AAAR,OAAD,CAAR;AACD;AACF,GAdD;;AAgBA,QAAMgH,qBAAqB,GAAG,MAAM;AAClCZ,IAAAA,QAAQ,CAAC;AAAEtD,MAAAA,IAAI,EAAE3D;AAAR,KAAD,CAAR;AACD,GAFD;;AAIA,QAAM8H,sBAAsB,GAAG,MAAM;AACnCb,IAAAA,QAAQ,CAAC;AAAEtD,MAAAA,IAAI,EAAE1D;AAAR,KAAD,CAAR;AACD,GAFD;;AAIA,QAAM8H,kBAAkB,GAAG,MAAM;AAC/Bd,IAAAA,QAAQ,CAAC;AAAEtD,MAAAA,IAAI,EAAEpC;AAAR,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMyG,uBAAuB,GAAIC,KAAD,IAAW;AACzChB,IAAAA,QAAQ,CAAC;AAAEtD,MAAAA,IAAI,EAAExD,yBAAR;AAAmCmH,MAAAA,OAAO,EAAEW;AAA5C,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAOC,IAAP,IAAgB;AACvC,QAAI;AACFlB,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAEzD,kBAAR;AAA4BoH,QAAAA,OAAO,EAAEa;AAArC,OAAD,CAAR;AACD,KAFD,CAEE,OAAOZ,KAAP,EAAc;AACdN,MAAAA,QAAQ,CAACM,KAAD,CAAR;AACD;AACF,GAND;;AAQA,QAAMa,gBAAgB,GAAG,MAAOC,EAAP,IAAc;AACrC,QAAI;AACFpB,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAE5D,iBAAR;AAA2BuH,QAAAA,OAAO,EAAEe;AAApC,OAAD,CAAR;AACD,KAFD,CAEE,OAAOd,KAAP,EAAc;AACdN,MAAAA,QAAQ,CAACM,KAAD,CAAR;AACD;AACF,GAND;;AAQA,QAAMe,gBAAgB,GAAG,MAAOD,EAAP,IAAc;AACrCpB,IAAAA,QAAQ,CAAC;AAAEtD,MAAAA,IAAI,EAAEnD;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAM;AAAE+H,QAAAA;AAAF,UAAW,MAAM7I,KAAK,CAAC8I,GAAN,CAAW,GAAE5I,YAAa,OAAMyI,EAAG,EAAnC,CAAvB;AACA,YAAMI,aAAa,GAAGF,IAAtB;AACAtB,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAElD,0BAAR;AAAoC6G,QAAAA,OAAO,EAAEmB;AAA7C,OAAD,CAAR;AACD,KAJD,CAIE,OAAOlB,KAAP,EAAc;AACdN,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAEjD;AAAR,OAAD,CAAR;AACD;AACF,GATD;;AAWA,QAAMgI,UAAU,GAAG,MAAOH,IAAP,IAAgB;AACjC,UAAM;AAAEF,MAAAA,EAAF;AAAMF,MAAAA,IAAN;AAAYQ,MAAAA,SAAZ;AAAuBC,MAAAA,OAAvB;AAAgCC,MAAAA,MAAhC;AAAwCC,MAAAA,UAAxC;AAAoDC,MAAAA;AAApD,QAA+DR,IAArE,CADiC,CAEjC;;AACAtB,IAAAA,QAAQ,CAAC;AAAEtD,MAAAA,IAAI,EAAE7C;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMsG,KAAK,CAACxH,YAAD,EAAe;AACxBoJ,QAAAA,MAAM,EAAE,MADgB;AAExBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAE,GAAGZ;AAAL,SAAf;AAFkB,OAAf,CAAX;AAIAtB,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAE5C;AAAR,OAAD,CAAR;AACD,KAND,CAME,OAAOqI,GAAP,EAAY;AACZnC,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAE3C;AAAR,OAAD,CAAR;AACD;AACF,GAbD;;AAeA,QAAMqI,aAAa,GAAG,MAAOd,IAAP,IAAgB;AACpC,UAAM;AAAEF,MAAAA,EAAF;AAAM,SAAGiB;AAAT,QAAoBf,IAA1B;AAEAtB,IAAAA,QAAQ,CAAC;AAAEtD,MAAAA,IAAI,EAAEvC;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMgG,KAAK,CAACxH,YAAD,EAAe;AACxBoJ,QAAAA,MAAM,EAAE,KADgB;AAExBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEd,UAAAA,EAAF;AAAM,aAAGiB;AAAT,SAAf;AAFkB,OAAf,CAAX;AAIArC,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAEtC;AAAR,OAAD,CAAR;AACD,KAND,CAME,OAAOkG,KAAP,EAAc;AACdN,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAErC;AAAR,OAAD,CAAR;AACD;AACF,GAbD;;AAeA,QAAMiI,aAAa,GAAG,MAAOlB,EAAP,IAAc;AAClCpB,IAAAA,QAAQ,CAAC;AAAEtD,MAAAA,IAAI,EAAE1C;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMmG,KAAK,CAACxH,YAAD,EAAe;AACxBoJ,QAAAA,MAAM,EAAE,QADgB;AAExBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEd,UAAAA,EAAE,EAAEA;AAAN,SAAf;AAFkB,OAAf,CAAX;AAIApB,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAEzC;AAAR,OAAD,CAAR;AACAgG,MAAAA,YAAY;AACb,KAPD,CAOE,OAAOkC,GAAP,EAAY;AACZnC,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAExC;AAAR,OAAD,CAAR;AACD;AACF,GAZD,CA7GgD,CA2HhD;;;AACA,QAAMqI,mBAAmB,GAAG,YAAY;AACtCvC,IAAAA,QAAQ,CAAC;AAAEtD,MAAAA,IAAI,EAAEnC;AAAR,KAAD,CAAR;;AACA,QAAI;AACF;AACA;AACA;AACA,YAAM2F,GAAG,GAAG,MAAMC,KAAK,CAACvH,mBAAD,CAAvB,CAJE,CAKF;AACA;;AACA,YAAMqF,eAAe,GAAG,MAAMiC,GAAG,CAACE,IAAJ,EAA9B;AACAJ,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAElC,2BAAR;AAAqC6F,QAAAA,OAAO,EAAEpC;AAA9C,OAAD,CAAR;AACD,KATD,CASE,OAAOqC,KAAP,EAAc;AACdN,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAEjC;AAAR,OAAD,CAAR;AACD;AACF,GAdD;;AAeA,QAAM+H,iBAAiB,GAAG,MAAOlB,IAAP,IAAgB;AACxC,UAAM;AAAEF,MAAAA,EAAF;AAAMF,MAAAA,IAAN;AAAYV,MAAAA,MAAZ;AAAoBiC,MAAAA,WAApB;AAAiCC,MAAAA;AAAjC,QAA4CpB,IAAlD,CADwC,CAExC;;AACAtB,IAAAA,QAAQ,CAAC;AAAEtD,MAAAA,IAAI,EAAE7B;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMsF,KAAK,CAACvH,mBAAD,EAAsB;AAC/BmJ,QAAAA,MAAM,EAAE,MADuB;AAE/BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAE,GAAGZ;AAAL,SAAf;AAFyB,OAAtB,CAAX;AAIAtB,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAE5B;AAAR,OAAD,CAAR;AACD,KAND,CAME,OAAOqH,GAAP,EAAY;AACZnC,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAE3B;AAAR,OAAD,CAAR;AACD;AACF,GAbD;;AAeA,QAAM4H,oBAAoB,GAAG,MAAOrB,IAAP,IAAgB;AAC3C,UAAM;AAAEF,MAAAA,EAAF;AAAM,SAAGiB;AAAT,QAAoBf,IAA1B;AAEAtB,IAAAA,QAAQ,CAAC;AAAEtD,MAAAA,IAAI,EAAEvB;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMgF,KAAK,CAACvH,mBAAD,EAAsB;AAC/BmJ,QAAAA,MAAM,EAAE,KADuB;AAE/BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEd,UAAAA,EAAF;AAAM,aAAGiB;AAAT,SAAf;AAFyB,OAAtB,CAAX;AAIArC,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAEtB;AAAR,OAAD,CAAR;AACD,KAND,CAME,OAAOkF,KAAP,EAAc;AACdN,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAErB;AAAR,OAAD,CAAR;AACD;AACF,GAbD;;AAeA,QAAMuH,oBAAoB,GAAG,MAAOxB,EAAP,IAAc;AACzCpB,IAAAA,QAAQ,CAAC;AAAEtD,MAAAA,IAAI,EAAE1B;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMmF,KAAK,CAACvH,mBAAD,EAAsB;AAC/BmJ,QAAAA,MAAM,EAAE,QADuB;AAE/BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEd,UAAAA,EAAE,EAAEA;AAAN,SAAf;AAFyB,OAAtB,CAAX;AAIApB,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAEzB;AAAR,OAAD,CAAR;AACAsH,MAAAA,mBAAmB;AACpB,KAPD,CAOE,OAAOJ,GAAP,EAAY;AACZnC,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAExB;AAAR,OAAD,CAAR;AACD;AACF,GAZD,CAzKgD,CAuLhD;;;AACA,QAAM2H,qBAAqB,GAAG,YAAY;AACxC7C,IAAAA,QAAQ,CAAC;AAAEtD,MAAAA,IAAI,EAAEpB;AAAR,KAAD,CAAR;;AACA,QAAI;AACF;AACA;AACA;AACA,YAAM4E,GAAG,GAAG,MAAMC,KAAK,CAACtH,qBAAD,CAAvB,CAJE,CAKF;AACA;;AACA,YAAMoG,iBAAiB,GAAG,MAAMiB,GAAG,CAACE,IAAJ,EAAhC;AACAJ,MAAAA,QAAQ,CAAC;AACPtD,QAAAA,IAAI,EAAEnB,6BADC;AAEP8E,QAAAA,OAAO,EAAEpB;AAFF,OAAD,CAAR;AAID,KAZD,CAYE,OAAOqB,KAAP,EAAc;AACdN,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAElB;AAAR,OAAD,CAAR;AACD;AACF,GAjBD;;AAkBA,QAAMsH,mBAAmB,GAAG,MAAOxB,IAAP,IAAgB;AAC1C,UAAM;AAAEF,MAAAA,EAAF;AAAMF,MAAAA,IAAN;AAAYV,MAAAA,MAAZ;AAAoBiC,MAAAA,WAApB;AAAiCC,MAAAA;AAAjC,QAA4CpB,IAAlD,CAD0C,CAE1C;;AACAtB,IAAAA,QAAQ,CAAC;AAAEtD,MAAAA,IAAI,EAAEd;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMuE,KAAK,CAACtH,qBAAD,EAAwB;AACjCkJ,QAAAA,MAAM,EAAE,MADyB;AAEjCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAE,GAAGZ;AAAL,SAAf;AAF2B,OAAxB,CAAX;AAIAtB,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAEb;AAAR,OAAD,CAAR;AACD,KAND,CAME,OAAOsG,GAAP,EAAY;AACZnC,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAEZ;AAAR,OAAD,CAAR;AACD;AACF,GAbD;;AAeA,QAAMiH,sBAAsB,GAAG,MAAOzB,IAAP,IAAgB;AAC7C,UAAM;AAAEF,MAAAA,EAAF;AAAM,SAAGiB;AAAT,QAAoBf,IAA1B;AAEAtB,IAAAA,QAAQ,CAAC;AAAEtD,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMiE,KAAK,CAACtH,qBAAD,EAAwB;AACjCkJ,QAAAA,MAAM,EAAE,KADyB;AAEjCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEd,UAAAA,EAAF;AAAM,aAAGiB;AAAT,SAAf;AAF2B,OAAxB,CAAX;AAIArC,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAEP;AAAR,OAAD,CAAR;AACD,KAND,CAME,OAAOmE,KAAP,EAAc;AACdN,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAEN;AAAR,OAAD,CAAR;AACD;AACF,GAbD;;AAeA,QAAM4G,sBAAsB,GAAG,MAAO5B,EAAP,IAAc;AAC3CpB,IAAAA,QAAQ,CAAC;AAAEtD,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMoE,KAAK,CAACtH,qBAAD,EAAwB;AACjCkJ,QAAAA,MAAM,EAAE,QADyB;AAEjCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEd,UAAAA,EAAE,EAAEA;AAAN,SAAf;AAF2B,OAAxB,CAAX;AAIApB,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAEV;AAAR,OAAD,CAAR;AACA6G,MAAAA,qBAAqB;AACtB,KAPD,CAOE,OAAOV,GAAP,EAAY;AACZnC,MAAAA,QAAQ,CAAC;AAAEtD,QAAAA,IAAI,EAAET;AAAR,OAAD,CAAR;AACD;AACF,GAZD;;AAcA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AACE,IAAA,KAAK,EAAE,EACL,GAAG8D,KADE;AAELE,MAAAA,YAFK;AAGLwB,MAAAA,UAHK;AAILW,MAAAA,aAJK;AAKLE,MAAAA,aALK;AAMLjB,MAAAA,gBANK;AAOLd,MAAAA,qBAPK;AAQLY,MAAAA,gBARK;AASLP,MAAAA,qBATK;AAULC,MAAAA,sBAVK;AAWLC,MAAAA,kBAXK;AAYLG,MAAAA;AAZK,KADT;AAAA,cAgBGnB;AAhBH;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA1QM;;GAAMD,gB;;KAAAA,gB;AA4Qb,OAAO,MAAMoD,kBAAkB,GAAG,MAAM;AAAA;;AACtC,SAAO3K,UAAU,CAACqH,eAAD,CAAjB;AACD,CAFM;;IAAMsD,kB","sourcesContent":["import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/payslips_reducer\";\r\nimport { payslips_url } from \"../utils/constants\";\r\nimport { payslipearnings_url } from \"../utils/constants\";\r\nimport { payslipdeductions_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITPAYSLIPID,\r\n  SET_ISPAYSLIPEDITING_ON,\r\n  SET_ISPAYSLIPEDITING_OFF,\r\n  SET_PAYSLIP_PERIOD,\r\n  SET_PAYSLIPEARNING_AMOUNT,\r\n  SET_SINGLEPAYSLIP,\r\n  GET_PAYSLIPS_BEGIN,\r\n  GET_PAYSLIPS_SUCCESS,\r\n  GET_PAYSLIPS_ERROR,\r\n  GET_SINGLE_PAYSLIP_BEGIN,\r\n  GET_SINGLE_PAYSLIP_SUCCESS,\r\n  GET_SINGLE_PAYSLIP_ERROR,\r\n  GET_SINGLEBATCH_PAYSLIP_BEGIN,\r\n  GET_SINGLEBATCH_PAYSLIP_SUCCESS,\r\n  GET_SINGLEBATCH_PAYSLIP_ERROR,\r\n  ADD_PAYSLIP_BEGIN,\r\n  ADD_PAYSLIP_SUCCESS,\r\n  ADD_PAYSLIP_ERROR,\r\n  DELETE_PAYSLIP_BEGIN,\r\n  DELETE_PAYSLIP_SUCCESS,\r\n  DELETE_PAYSLIP_ERROR,\r\n  UPDATE_PAYSLIP_BEGIN,\r\n  UPDATE_PAYSLIP_SUCCESS,\r\n  UPDATE_PAYSLIP_ERROR,\r\n  RESET_SINGLE_PAYSLIP,\r\n  GET_PAYSLIPEARNINGS_BEGIN,\r\n  GET_PAYSLIPEARNINGS_SUCCESS,\r\n  GET_PAYSLIPEARNINGS_ERROR,\r\n  GET_SINGLE_PAYSLIPEARNING_BEGIN,\r\n  GET_SINGLE_PAYSLIPEARNING_SUCCESS,\r\n  GET_SINGLE_PAYSLIPEARNING_ERROR,\r\n  ADD_PAYSLIPEARNING_BEGIN,\r\n  ADD_PAYSLIPEARNING_SUCCESS,\r\n  ADD_PAYSLIPEARNING_ERROR,\r\n  DELETE_PAYSLIPEARNING_BEGIN,\r\n  DELETE_PAYSLIPEARNING_SUCCESS,\r\n  DELETE_PAYSLIPEARNING_ERROR,\r\n  UPDATE_PAYSLIPEARNING_BEGIN,\r\n  UPDATE_PAYSLIPEARNING_SUCCESS,\r\n  UPDATE_PAYSLIPEARNING_ERROR,\r\n  GET_PAYSLIPDEDUCTIONS_BEGIN,\r\n  GET_PAYSLIPDEDUCTIONS_SUCCESS,\r\n  GET_PAYSLIPDEDUCTIONS_ERROR,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_BEGIN,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_SUCCESS,\r\n  GET_SINGLE_PAYSLIPDEDUCTION_ERROR,\r\n  ADD_PAYSLIPDEDUCTION_BEGIN,\r\n  ADD_PAYSLIPDEDUCTION_SUCCESS,\r\n  ADD_PAYSLIPDEDUCTION_ERROR,\r\n  DELETE_PAYSLIPDEDUCTION_BEGIN,\r\n  DELETE_PAYSLIPDEDUCTION_SUCCESS,\r\n  DELETE_PAYSLIPDEDUCTION_ERROR,\r\n  UPDATE_PAYSLIPDEDUCTION_BEGIN,\r\n  UPDATE_PAYSLIPDEDUCTION_SUCCESS,\r\n  UPDATE_PAYSLIPDEDUCTION_ERROR,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isPayslipEditing: false,\r\n  alertPayslip: { show: false, msg: \"\", type: \"\" },\r\n  editPayslipID: null,\r\n  payslips_loading: false,\r\n  payslips_error: false,\r\n  payslip_period: \"\",\r\n  payslips: [],\r\n  single_payslip_loading: false,\r\n  single_payslip_error: false,\r\n  single_payslip: {},\r\n  singlebatch_payslip_loading: false,\r\n  singlebatch_payslip_error: false,\r\n  singlebatch_payslip: {},\r\n  delete_payslip_loading: false,\r\n  delete_payslip_error: false,\r\n  update_payslip_loading: false,\r\n  update_payslip_error: false,\r\n  add_payslip_loading: false,\r\n  add_payslip_error: false,\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n  // payslip earnings\r\n  isPayslipEarningEditing: false,\r\n  alertPayslipEarning: { show: false, msg: \"\", type: \"\" },\r\n  editPayslipEarningID: null,\r\n  payslipearnings_loading: false,\r\n  payslipearnings_error: false,\r\n  payslipearnings: [],\r\n  single_payslipearning_amount: 0,\r\n  single_payslipearning_loading: false,\r\n  single_payslipearning_error: false,\r\n  single_payslipearning: {},\r\n  delete_payslipearning_loading: false,\r\n  delete_payslipearning_error: false,\r\n  update_payslipearning_loading: false,\r\n  update_payslipearning_error: false,\r\n  add_payslipearning_loading: false,\r\n  add_payslipearning_error: false,\r\n  // payslip deductions\r\n  isPayslipDeductionEditing: false,\r\n  alertPayslipDeduction: { show: false, msg: \"\", type: \"\" },\r\n  editPayslipDeductionID: null,\r\n  payslipdeductions_loading: false,\r\n  payslipdeductions_error: false,\r\n  payslipdeductions: [],\r\n  single_payslipdeduction_loading: false,\r\n  single_payslipdeduction_error: false,\r\n  single_payslipdeduction: {},\r\n  delete_payslipdeduction_loading: false,\r\n  delete_payslipdeduction_error: false,\r\n  update_payslipdeduction_loading: false,\r\n  update_payslipdeduction_error: false,\r\n  add_payslipdeduction_loading: false,\r\n  add_payslipdeduction_error: false,\r\n};\r\n\r\nconst PayslipsContext = React.createContext();\r\n\r\nexport const PayslipsProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //....... payslip\r\n  const loadPayslips = async () => {\r\n    dispatch({ type: GET_PAYSLIPS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(payslips_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslips = await res.json();\r\n      dispatch({ type: GET_PAYSLIPS_SUCCESS, payload: payslips });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPS_ERROR });\r\n    }\r\n  };\r\n\r\n  const getSingleBatchPayslip = async (period) => {\r\n    dispatch({ type: GET_SINGLEBATCH_PAYSLIP_BEGIN });\r\n    try {\r\n      const res = await fetch(`${payslips_url}?fv=${period}`);\r\n      console.log(`${payslips_url}?fv=${period}`);\r\n      const singlebatchpayslip = await res.json();\r\n\r\n      dispatch({\r\n        type: GET_SINGLEBATCH_PAYSLIP_SUCCESS,\r\n        payload: singlebatchpayslip,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLEBATCH_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsPayslipEditingOn = () => {\r\n    dispatch({ type: SET_ISPAYSLIPEDITING_ON });\r\n  };\r\n\r\n  const setIsPayslipEditingOff = () => {\r\n    dispatch({ type: SET_ISPAYSLIPEDITING_OFF });\r\n  };\r\n\r\n  const resetSinglePayslip = () => {\r\n    dispatch({ type: RESET_SINGLE_PAYSLIP });\r\n  };\r\n\r\n  const setPayslipEarningAmount = (value) => {\r\n    dispatch({ type: SET_PAYSLIPEARNING_AMOUNT, payload: value });\r\n  };\r\n\r\n  const setPayslipPeriod = async (name) => {\r\n    try {\r\n      dispatch({ type: SET_PAYSLIP_PERIOD, payload: name });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const setEditPayslipID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITPAYSLIPID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSinglePayslip = async (id) => {\r\n    dispatch({ type: GET_SINGLE_PAYSLIP_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${payslips_url}?id=${id}`);\r\n      const singlepayslip = data;\r\n      dispatch({ type: GET_SINGLE_PAYSLIP_SUCCESS, payload: singlepayslip });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const addPayslip = async (data) => {\r\n    const { id, name, from_date, to_date, reason, no_of_days, status } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYSLIP_BEGIN });\r\n    try {\r\n      await fetch(payslips_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYSLIP_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayslip = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYSLIP_BEGIN });\r\n    try {\r\n      await fetch(payslips_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYSLIP_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayslip = async (id) => {\r\n    dispatch({ type: DELETE_PAYSLIP_BEGIN });\r\n    try {\r\n      await fetch(payslips_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYSLIP_SUCCESS });\r\n      loadPayslips();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYSLIP_ERROR });\r\n    }\r\n  };\r\n\r\n  //.... payslip earnings\r\n  const loadPayslipEarnings = async () => {\r\n    dispatch({ type: GET_PAYSLIPEARNINGS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(payslipearnings_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslipearnings = await res.json();\r\n      dispatch({ type: GET_PAYSLIPEARNINGS_SUCCESS, payload: payslipearnings });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPEARNINGS_ERROR });\r\n    }\r\n  };\r\n  const addPayslipEarning = async (data) => {\r\n    const { id, name, period, description, amount } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYSLIPEARNING_BEGIN });\r\n    try {\r\n      await fetch(payslipearnings_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYSLIPEARNING_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYSLIPEARNING_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayslipEarning = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYSLIPEARNING_BEGIN });\r\n    try {\r\n      await fetch(payslipearnings_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYSLIPEARNING_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYSLIPEARNING_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayslipEarning = async (id) => {\r\n    dispatch({ type: DELETE_PAYSLIPEARNING_BEGIN });\r\n    try {\r\n      await fetch(payslipearnings_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYSLIPEARNING_SUCCESS });\r\n      loadPayslipEarnings();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYSLIPEARNING_ERROR });\r\n    }\r\n  };\r\n\r\n  //.... payslip deductions\r\n  const loadPayslipDeductions = async () => {\r\n    dispatch({ type: GET_PAYSLIPDEDUCTIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(payslipdeductions_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payslipdeductions = await res.json();\r\n      dispatch({\r\n        type: GET_PAYSLIPDEDUCTIONS_SUCCESS,\r\n        payload: payslipdeductions,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYSLIPDEDUCTIONS_ERROR });\r\n    }\r\n  };\r\n  const addPayslipDeduction = async (data) => {\r\n    const { id, name, period, description, amount } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYSLIPDEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(payslipdeductions_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYSLIPDEDUCTION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYSLIPDEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayslipDeduction = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYSLIPDEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(payslipdeductions_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYSLIPDEDUCTION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYSLIPDEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayslipDeduction = async (id) => {\r\n    dispatch({ type: DELETE_PAYSLIPDEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(payslipdeductions_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYSLIPDEDUCTION_SUCCESS });\r\n      loadPayslipDeductions();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYSLIPDEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PayslipsContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadPayslips,\r\n        addPayslip,\r\n        updatePayslip,\r\n        deletePayslip,\r\n        getSinglePayslip,\r\n        getSingleBatchPayslip,\r\n        setEditPayslipID,\r\n        setIsPayslipEditingOn,\r\n        setIsPayslipEditingOff,\r\n        resetSinglePayslip,\r\n        setPayslipPeriod,\r\n      }}\r\n    >\r\n      {children}\r\n    </PayslipsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePayslipsContext = () => {\r\n  return useContext(PayslipsContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}