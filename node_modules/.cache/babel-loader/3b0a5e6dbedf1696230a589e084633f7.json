{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\EmployeeForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer, useEffect } from \"react\";\nimport { Button, Icon, TextField, Paper, Typography, Select, Grid, Divider } from \"@material-ui/core\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport UpdateBatchFamily from \"./UpdateBatchFamily\";\nimport UpdateBatchEducations from \"./UpdateBatchEducations\";\nimport UpdateBatchExperiences from \"./UpdateBatchExperiences\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_values = {\n  name: \"\",\n  gender: \"\",\n  ic_no: \"\",\n  email: \"\",\n  age: 0,\n  basic_salary: 0,\n  bank_name: \"\",\n  bank_acno: \"\",\n  tap_acno: \"\",\n  scp_acno: \"\"\n};\n\nconst EmployeeForm = () => {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const {\n    isEditing,\n    single_employee,\n    updateEmployee,\n    addEmployee,\n    editEmployeeID,\n    loadEmployees,\n    single_employee_loading\n  } = useEmployeesContext();\n  const {\n    name,\n    ic_no,\n    gender,\n    age,\n    email,\n    basic_salary,\n    bank_name,\n    bank_acno,\n    tap_acno,\n    scp_acno\n  } = single_employee || initial_values;\n  const {\n    handleSubmit,\n    control\n  } = useForm();\n\n  const onSubmit = data => {\n    if (isEditing) {\n      updateEmployee({\n        id: editEmployeeID,\n        ...data\n      });\n    } else {\n      addEmployee({ ...data\n      });\n    } //loadEmployees();\n    // <Alert severity=\"success\">\n    //   <AlertTitle>Success</AlertTitle>\n    //   This is a success alert â€” <strong>check it out!</strong>\n    // </Alert>;\n\n\n    history.push(\"/allemployees\");\n  };\n\n  if (single_employee_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h3\",\n          children: \"EMPLOYEE FORM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"p\",\n          children: \"Employee Particulars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.container,\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"row\",\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"name\",\n                  control: control,\n                  defaultValue: name,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  }) => {\n                    return /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Name\",\n                      id: \"margin-normal\",\n                      name: \"name\",\n                      defaultValue: name,\n                      className: classes.textField,\n                      onChange: onChange,\n                      error: !!error,\n                      helperText: error ? error.message : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 25\n                    }, this);\n                  },\n                  rules: {\n                    required: \"Name required\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"email\",\n                  control: control,\n                  defaultValue: email,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  }) => {\n                    return /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Email\",\n                      id: \"margin-normal\",\n                      name: \"email\",\n                      defaultValue: email,\n                      className: classes.textField,\n                      onChange: onChange,\n                      error: !!error,\n                      helperText: error ? error.message : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 25\n                    }, this);\n                  },\n                  rules: {\n                    required: \"Email is required\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"ic_no\",\n                  control: control,\n                  defaultValue: ic_no,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  }) => {\n                    return /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"IC No\",\n                      id: \"margin-normal\",\n                      name: \"ic_no\",\n                      defaultValue: ic_no,\n                      className: classes.textField,\n                      onChange: onChange,\n                      error: !!error,\n                      helperText: error ? error.message : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 25\n                    }, this);\n                  } //rules={{ required: \"IC No required\" }}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"gender\",\n                  control: control,\n                  defaultValue: gender,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  }) => {\n                    return /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Gender\",\n                      id: \"margin-normal\",\n                      name: \"gender\",\n                      defaultValue: gender,\n                      className: classes.textField,\n                      onChange: onChange,\n                      error: !!error,\n                      helperText: error ? error.message : null,\n                      select: true,\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"Male\",\n                        children: \"Male\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"Female\",\n                        children: \"Female\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 188,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 25\n                    }, this);\n                  } //rules={{ required: \"IC No required\" }}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"age\",\n                  control: control,\n                  defaultValue: age,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  }) => {\n                    return /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Age\",\n                      type: \"number\",\n                      id: \"standard-number\",\n                      name: \"age\",\n                      defaultValue: age,\n                      className: classes.textField //onChange={onChange}\n                      ,\n                      onChange: e => {\n                        onChange(parseInt(e.target.value, 10));\n                      },\n                      error: !!error,\n                      helperText: error ? error.message : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 25\n                    }, this);\n                  } //rules={{ required: \"IC No required\" }}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"basic_salary\",\n                  control: control,\n                  defaultValue: basic_salary,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  }) => {\n                    return /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Basic Salary\",\n                      type: \"number\",\n                      id: \"standard-number\",\n                      name: \"basic_pay\",\n                      defaultValue: basic_salary,\n                      className: classes.textField //onChange={onChange}\n                      ,\n                      onChange: e => {\n                        onChange(parseInt(e.target.value, 10));\n                      },\n                      error: !!error,\n                      helperText: error ? error.message : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 25\n                    }, this);\n                  } //rules={{ required: \"IC No required\" }}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"bank_name\",\n                  control: control,\n                  defaultValue: bank_name,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  }) => {\n                    return /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Bank Name\",\n                      id: \"margin-normal\",\n                      name: \"bank_name\",\n                      defaultValue: bank_name,\n                      className: classes.textField,\n                      onChange: onChange,\n                      error: !!error,\n                      helperText: error ? error.message : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 25\n                    }, this);\n                  } //rules={{ required: \"Email is required\" }}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"bank_acno\",\n                  control: control,\n                  defaultValue: bank_acno,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  }) => {\n                    return /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Bank Ac No\",\n                      id: \"margin-normal\",\n                      name: \"bank_acno\",\n                      defaultValue: bank_acno,\n                      className: classes.textField,\n                      onChange: onChange,\n                      error: !!error,\n                      helperText: error ? error.message : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 25\n                    }, this);\n                  } // rules={{ required: \"Email is required\" }}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"tap_acno\",\n                  control: control,\n                  defaultValue: tap_acno,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  }) => {\n                    return /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"TAP Ac No\",\n                      id: \"margin-normal\",\n                      name: \"tap_acno\",\n                      defaultValue: tap_acno,\n                      className: classes.textField,\n                      onChange: onChange,\n                      error: !!error,\n                      helperText: error ? error.message : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 25\n                    }, this);\n                  } //rules={{ required: \"Email is required\" }}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"scp_acno\",\n                  control: control,\n                  defaultValue: scp_acno,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  }) => {\n                    return /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"SCP Ac No\",\n                      id: \"margin-normal\",\n                      name: \"scp_acno\",\n                      defaultValue: scp_acno,\n                      className: classes.textField,\n                      onChange: onChange,\n                      error: !!error,\n                      helperText: error ? error.message : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 25\n                    }, this);\n                  } //rules={{ required: \"Email is required\" }}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              children: [\"Submit \", /*#__PURE__*/_jsxDEV(Icon, {\n                className: classes.rightIcon,\n                children: \"send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(UpdateBatchFamily, {\n        empid: editEmployeeID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(UpdateBatchEducations, {\n        empid: editEmployeeID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(UpdateBatchExperiences, {\n        empid: editEmployeeID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmployeeForm, \"WgkhRCJWbkjYRIlTDyQcuMbmcuM=\", false, function () {\n  return [useHistory, useStyles, useEmployeesContext, useForm];\n});\n\n_c = EmployeeForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 350\n  }\n}));\nexport default EmployeeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeForm\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/EmployeeForm.js"],"names":["React","useState","useReducer","useEffect","Button","Icon","TextField","Paper","Typography","Select","Grid","Divider","Alert","AlertTitle","makeStyles","MenuItem","useEmployeesContext","Controller","useForm","useHistory","UpdateBatchFamily","UpdateBatchEducations","UpdateBatchExperiences","initial_values","name","gender","ic_no","email","age","basic_salary","bank_name","bank_acno","tap_acno","scp_acno","EmployeeForm","history","classes","useStyles","isEditing","single_employee","updateEmployee","addEmployee","editEmployeeID","loadEmployees","single_employee_loading","handleSubmit","control","onSubmit","data","id","push","root","container","field","onChange","value","fieldState","error","textField","message","required","e","parseInt","target","button","rightIcon","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","padding","display","flexDirection","flexWrap","width"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Select,\r\n  Grid,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport UpdateBatchFamily from \"./UpdateBatchFamily\";\r\nimport UpdateBatchEducations from \"./UpdateBatchEducations\";\r\nimport UpdateBatchExperiences from \"./UpdateBatchExperiences\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  gender: \"\",\r\n  ic_no: \"\",\r\n  email: \"\",\r\n  age: 0,\r\n  basic_salary: 0,\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  tap_acno: \"\",\r\n  scp_acno: \"\",\r\n};\r\n\r\nconst EmployeeForm = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const {\r\n    isEditing,\r\n    single_employee,\r\n    updateEmployee,\r\n    addEmployee,\r\n    editEmployeeID,\r\n    loadEmployees,\r\n    single_employee_loading,\r\n  } = useEmployeesContext();\r\n  const {\r\n    name,\r\n    ic_no,\r\n    gender,\r\n    age,\r\n    email,\r\n    basic_salary,\r\n    bank_name,\r\n    bank_acno,\r\n    tap_acno,\r\n    scp_acno,\r\n  } = single_employee || initial_values;\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    if (isEditing) {\r\n      updateEmployee({ id: editEmployeeID, ...data });\r\n    } else {\r\n      addEmployee({ ...data });\r\n    }\r\n    //loadEmployees();\r\n    // <Alert severity=\"success\">\r\n    //   <AlertTitle>Success</AlertTitle>\r\n    //   This is a success alert â€” <strong>check it out!</strong>\r\n    // </Alert>;\r\n    history.push(\"/allemployees\");\r\n  };\r\n\r\n  if (single_employee_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <Grid xs={12}>\r\n        <Paper className={classes.root}>\r\n          <Typography variant=\"h5\" component=\"h3\">\r\n            EMPLOYEE FORM\r\n          </Typography>\r\n          <Typography component=\"p\">Employee Particulars</Typography>\r\n\r\n          <form className={classes.container} onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"row\">\r\n              <div>\r\n                <div class=\"row\">\r\n                  <Controller\r\n                    name=\"name\"\r\n                    control={control}\r\n                    defaultValue={name}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Name\"\r\n                          id=\"margin-normal\"\r\n                          name=\"name\"\r\n                          defaultValue={name}\r\n                          className={classes.textField}\r\n                          onChange={onChange}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: \"Name required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"email\"\r\n                    control={control}\r\n                    defaultValue={email}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Email\"\r\n                          id=\"margin-normal\"\r\n                          name=\"email\"\r\n                          defaultValue={email}\r\n                          className={classes.textField}\r\n                          onChange={onChange}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    rules={{ required: \"Email is required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"ic_no\"\r\n                    control={control}\r\n                    defaultValue={ic_no}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"IC No\"\r\n                          id=\"margin-normal\"\r\n                          name=\"ic_no\"\r\n                          defaultValue={ic_no}\r\n                          className={classes.textField}\r\n                          onChange={onChange}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"gender\"\r\n                    control={control}\r\n                    defaultValue={gender}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Gender\"\r\n                          id=\"margin-normal\"\r\n                          name=\"gender\"\r\n                          defaultValue={gender}\r\n                          className={classes.textField}\r\n                          onChange={onChange}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                          select\r\n                        >\r\n                          <MenuItem value=\"Male\">Male</MenuItem>\r\n                          <MenuItem value=\"Female\">Female</MenuItem>\r\n                        </TextField>\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"age\"\r\n                    control={control}\r\n                    defaultValue={age}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Age\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"age\"\r\n                          defaultValue={age}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Divider />\r\n              <div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"basic_salary\"\r\n                    control={control}\r\n                    defaultValue={basic_salary}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Basic Salary\"\r\n                          type=\"number\"\r\n                          id=\"standard-number\"\r\n                          name=\"basic_pay\"\r\n                          defaultValue={basic_salary}\r\n                          className={classes.textField}\r\n                          //onChange={onChange}\r\n                          onChange={(e) => {\r\n                            onChange(parseInt(e.target.value, 10));\r\n                          }}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"IC No required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"bank_name\"\r\n                    control={control}\r\n                    defaultValue={bank_name}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Bank Name\"\r\n                          id=\"margin-normal\"\r\n                          name=\"bank_name\"\r\n                          defaultValue={bank_name}\r\n                          className={classes.textField}\r\n                          onChange={onChange}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Email is required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"bank_acno\"\r\n                    control={control}\r\n                    defaultValue={bank_acno}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"Bank Ac No\"\r\n                          id=\"margin-normal\"\r\n                          name=\"bank_acno\"\r\n                          defaultValue={bank_acno}\r\n                          className={classes.textField}\r\n                          onChange={onChange}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    // rules={{ required: \"Email is required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"tap_acno\"\r\n                    control={control}\r\n                    defaultValue={tap_acno}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"TAP Ac No\"\r\n                          id=\"margin-normal\"\r\n                          name=\"tap_acno\"\r\n                          defaultValue={tap_acno}\r\n                          className={classes.textField}\r\n                          onChange={onChange}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Email is required\" }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"scp_acno\"\r\n                    control={control}\r\n                    defaultValue={scp_acno}\r\n                    render={({\r\n                      field: { onChange, value },\r\n                      fieldState: { error },\r\n                    }) => {\r\n                      return (\r\n                        <TextField\r\n                          label=\"SCP Ac No\"\r\n                          id=\"margin-normal\"\r\n                          name=\"scp_acno\"\r\n                          defaultValue={scp_acno}\r\n                          className={classes.textField}\r\n                          onChange={onChange}\r\n                          error={!!error}\r\n                          helperText={error ? error.message : null}\r\n                        />\r\n                      );\r\n                    }}\r\n                    //rules={{ required: \"Email is required\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Divider />\r\n            <div>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n              >\r\n                Submit <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid xs={12}>\r\n        <UpdateBatchFamily empid={editEmployeeID} />\r\n      </Grid>\r\n      <Grid xs={12}>\r\n        <UpdateBatchEducations empid={editEmployeeID} />\r\n      </Grid>\r\n      <Grid xs={12}>\r\n        <UpdateBatchExperiences empid={editEmployeeID} />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default EmployeeForm;\r\n"]},"metadata":{},"sourceType":"module"}