{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Example.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Input } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useHistory } from \"react-router-dom\";\nimport { useExpensesContext } from \"../context/expenses_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\" // editComponent: (editProps) => (\n  //   <Input\n  //     autoFocus={true}\n  //     onChange={(e) => editProps.onChange(e.target.value)}\n  //   />\n  // ),\n\n}, {\n  title: \"Description\",\n  field: \"description\"\n}, {\n  title: \"Amount\",\n  field: \"amount\",\n  type: \"numeric\"\n}];\nexport default function Example() {\n  _s();\n\n  let history = useHistory();\n  const [data, setData] = useState([{\n    name: \"Jon\",\n    description: \"Software Dev\",\n    amount: 29\n  }]);\n  const {\n    expenses,\n    addExpense,\n    expenses_loading,\n    updateExpense,\n    deleteExpense,\n    loadExpenses,\n    getSingleExpense,\n    setEditExpenseID,\n    setIsExpenseEditingOn,\n    setIsExpenseEditingOff,\n    resetSingleExpense\n  } = useExpensesContext();\n  useEffect(() => {\n    loadExpenses();\n  }, []); //   const update_expenses = (data) => {\n  //     console.log(data);\n  //     const { id, ...fields } = data;\n  //     updateExpense({ id: id, ...fields });\n  //     loadExpenses();\n  //   };\n\n  const update_Expense = async data => {\n    const {\n      id\n    } = data;\n    setEditExpenseID(id);\n    setIsExpenseEditingOn();\n    getSingleExpense(id);\n    history.push(\"/singleexpense\");\n  };\n\n  const delete_Expense = id => {\n    setEditExpenseID(id);\n    deleteExpense(id);\n    loadExpenses();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Allownaces\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"12px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: expenses,\n        title: \"\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 37\n          }, this)\n        },\n        actions: [{\n          icon: \"edit\",\n          tooltip: \"Save User\",\n          onClick: (event, rowData) => {\n            update_Expense(rowData);\n          }\n        }, {\n          icon: \"delete\",\n          tooltip: \"Delete User\",\n          onClick: (event, rowData) => {\n            delete_Expense();\n          }\n        }] //   editable={{\n        //     onRowAdd: (newData) =>\n        //       new Promise((resolve, reject) => {\n        //         setTimeout(() => {\n        //           //setData([...data, newData]);\n        //           update_expenses(newData);\n        //           resolve();\n        //         }, 1000);\n        //       }),\n        //     onRowUpdate: (newData, oldData) =>\n        //       new Promise((resolve, reject) => {\n        //         setTimeout(() => {\n        //           const dataUpdate = [...data];\n        //           const index = oldData.tableData.id;\n        //           dataUpdate[index] = newData;\n        //           //   setData([...dataUpdate]);\n        //           update_expenses(newData);\n        //           resolve();\n        //         }, 1000);\n        //       }),\n        //     onRowDelete: (oldData) =>\n        //       new Promise((resolve, reject) => {\n        //         setTimeout(() => {\n        //           const dataDelete = [...data];\n        //           const index = oldData.tableData.id;\n        //           dataDelete.splice(index, 1);\n        //           setData([...dataDelete]);\n        //           resolve();\n        //         }, 1000);\n        //       }),\n        //   }}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Example, \"EtMoqWaN0M28oEcTPyoHVhLes2k=\", false, function () {\n  return [useHistory, useExpensesContext];\n});\n\n_c = Example;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    alignItems: \"center\"\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Example.js"],"names":["React","useState","useEffect","MaterialTable","makeStyles","Input","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","useHistory","useExpensesContext","columns","title","field","type","Example","history","data","setData","name","description","amount","expenses","addExpense","expenses_loading","updateExpense","deleteExpense","loadExpenses","getSingleExpense","setEditExpenseID","setIsExpenseEditingOn","setIsExpenseEditingOff","resetSingleExpense","update_Expense","id","push","delete_Expense","maxWidth","paddingTop","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","icon","tooltip","onClick","event","rowData","useStyles","theme","root","alignItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,kBAAT,QAAmC,6BAAnC;;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,KAAK,EAAE,MAFT,CAGE;AACA;AACA;AACA;AACA;AACA;;AARF,CADc,EAWd;AAAED,EAAAA,KAAK,EAAE,aAAT;AAAwBC,EAAAA,KAAK,EAAE;AAA/B,CAXc,EAYd;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE,QAA1B;AAAoCC,EAAAA,IAAI,EAAE;AAA1C,CAZc,CAAhB;AAeA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,MAAIC,OAAO,GAAGP,UAAU,EAAxB;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,CAC/B;AAAEoB,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,WAAW,EAAE,cAA5B;AAA4CC,IAAAA,MAAM,EAAE;AAApD,GAD+B,CAAD,CAAhC;AAGA,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,gBAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA,aALI;AAMJC,IAAAA,YANI;AAOJC,IAAAA,gBAPI;AAQJC,IAAAA,gBARI;AASJC,IAAAA,qBATI;AAUJC,IAAAA,sBAVI;AAWJC,IAAAA;AAXI,MAYFtB,kBAAkB,EAZtB;AAcAV,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT,CAnBgC,CAuBhC;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMM,cAAc,GAAG,MAAOhB,IAAP,IAAgB;AACrC,UAAM;AAAEiB,MAAAA;AAAF,QAASjB,IAAf;AACAY,IAAAA,gBAAgB,CAACK,EAAD,CAAhB;AACAJ,IAAAA,qBAAqB;AACrBF,IAAAA,gBAAgB,CAACM,EAAD,CAAhB;AACAlB,IAAAA,OAAO,CAACmB,IAAR,CAAa,gBAAb;AACD,GAND;;AAQA,QAAMC,cAAc,GAAIF,EAAD,IAAQ;AAC7BL,IAAAA,gBAAgB,CAACK,EAAD,CAAhB;AACAR,IAAAA,aAAa,CAACQ,EAAD,CAAb;AACAP,IAAAA,YAAY;AACb,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,KAAK,EAAE;AAAEU,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAZ;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,OAAO,EAAE3B,OADX;AAEE,QAAA,IAAI,EAAEW,QAFR;AAGE,QAAA,KAAK,EAAC,EAHR;AAIE,QAAA,KAAK,EAAE;AACLiB,UAAAA,GAAG,EAAGC,KAAD,iBAAW,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBADX;AAELC,UAAAA,IAAI,EAAGD,KAAD,iBAAW,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAFZ;AAGLE,UAAAA,MAAM,EAAGF,KAAD,iBAAW,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAHd;AAILG,UAAAA,KAAK,EAAGH,KAAD,iBAAW,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAJb;AAKLI,UAAAA,KAAK,EAAGJ,KAAD,iBAAW,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBALb;AAMLK,UAAAA,MAAM,EAAGL,KAAD,iBAAW,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBANd;AAOLM,UAAAA,WAAW,EAAGN,KAAD,iBAAW,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAPnB,SAJT;AAaE,QAAA,OAAO,EAAE,CACP;AACEO,UAAAA,IAAI,EAAE,MADR;AAEEC,UAAAA,OAAO,EAAE,WAFX;AAGEC,UAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC3BlB,YAAAA,cAAc,CAACkB,OAAD,CAAd;AACD;AALH,SADO,EAQP;AACEJ,UAAAA,IAAI,EAAE,QADR;AAEEC,UAAAA,OAAO,EAAE,aAFX;AAGEC,UAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC3Bf,YAAAA,cAAc;AACf;AALH,SARO,CAbX,CA6BE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA5DF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsED;;GAlHuBrB,O;UACRN,U,EAgBVC,kB;;;KAjBkBK,O;AAoHxB,MAAMqC,SAAS,GAAGlD,UAAU,CAAEmD,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE;AADR;AADiC,CAAZ,CAAD,CAA5B","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    // editComponent: (editProps) => (\r\n    //   <Input\r\n    //     autoFocus={true}\r\n    //     onChange={(e) => editProps.onChange(e.target.value)}\r\n    //   />\r\n    // ),\r\n  },\r\n  { title: \"Description\", field: \"description\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"numeric\" },\r\n];\r\n\r\nexport default function Example() {\r\n  let history = useHistory();\r\n  const [data, setData] = useState([\r\n    { name: \"Jon\", description: \"Software Dev\", amount: 29 },\r\n  ]);\r\n  const {\r\n    expenses,\r\n    addExpense,\r\n    expenses_loading,\r\n    updateExpense,\r\n    deleteExpense,\r\n    loadExpenses,\r\n    getSingleExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n    resetSingleExpense,\r\n  } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    loadExpenses();\r\n  }, []);\r\n\r\n  //   const update_expenses = (data) => {\r\n  //     console.log(data);\r\n  //     const { id, ...fields } = data;\r\n  //     updateExpense({ id: id, ...fields });\r\n  //     loadExpenses();\r\n  //   };\r\n\r\n  const update_Expense = async (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    setIsExpenseEditingOn();\r\n    getSingleExpense(id);\r\n    history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Expense = (id) => {\r\n    setEditExpenseID(id);\r\n    deleteExpense(id);\r\n    loadExpenses();\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Allownaces</h1>\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"12px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expenses}\r\n          title=\"\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Save User\",\r\n              onClick: (event, rowData) => {\r\n                update_Expense(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete User\",\r\n              onClick: (event, rowData) => {\r\n                delete_Expense();\r\n              },\r\n            },\r\n          ]}\r\n          //   editable={{\r\n          //     onRowAdd: (newData) =>\r\n          //       new Promise((resolve, reject) => {\r\n          //         setTimeout(() => {\r\n          //           //setData([...data, newData]);\r\n          //           update_expenses(newData);\r\n          //           resolve();\r\n          //         }, 1000);\r\n          //       }),\r\n          //     onRowUpdate: (newData, oldData) =>\r\n          //       new Promise((resolve, reject) => {\r\n          //         setTimeout(() => {\r\n          //           const dataUpdate = [...data];\r\n          //           const index = oldData.tableData.id;\r\n          //           dataUpdate[index] = newData;\r\n          //           //   setData([...dataUpdate]);\r\n          //           update_expenses(newData);\r\n          //           resolve();\r\n          //         }, 1000);\r\n          //       }),\r\n          //     onRowDelete: (oldData) =>\r\n          //       new Promise((resolve, reject) => {\r\n          //         setTimeout(() => {\r\n          //           const dataDelete = [...data];\r\n          //           const index = oldData.tableData.id;\r\n          //           dataDelete.splice(index, 1);\r\n          //           setData([...dataDelete]);\r\n\r\n          //           resolve();\r\n          //         }, 1000);\r\n          //       }),\r\n          //   }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}