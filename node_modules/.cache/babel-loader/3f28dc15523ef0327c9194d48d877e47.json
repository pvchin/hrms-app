{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\context\\\\tables_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport reducer from \"../reducers/tables_reducer\";\nimport { allowances_url } from \"../utils/constants\";\nimport { deductions_url } from \"../utils/constants\";\nimport { departments_url } from \"../utils/constants\";\nimport { designations_url } from \"../utils/constants\";\nimport { family_url } from \"../utils/constants\";\nimport { educations_url } from \"../utils/constants\";\nimport { experiences_url } from \"../utils/constants\";\nimport { GET_PAYITEMS_BEGIN, GET_PAYITEMS_SUCCESS, GET_PAYITEMS_ERROR, ADD_PAYITEM_BEGIN, ADD_PAYITEM_SUCCESS, ADD_PAYITEM_ERROR, UPDATE_PAYITEM_BEGIN, UPDATE_PAYITEM_SUCCESS, UPDATE_PAYITEM_ERROR, DELETE_PAYITEM_BEGIN, DELETE_PAYITEM_SUCCESS, DELETE_PAYITEM_ERROR, GET_ALLOWANCES_BEGIN, GET_ALLOWANCES_SUCCESS, GET_ALLOWANCES_ERROR, ADD_ALLOWANCE_BEGIN, ADD_ALLOWANCE_SUCCESS, ADD_ALLOWANCE_ERROR, UPDATE_ALLOWANCE_BEGIN, UPDATE_ALLOWANCE_SUCCESS, UPDATE_ALLOWANCE_ERROR, DELETE_ALLOWANCE_BEGIN, DELETE_ALLOWANCE_SUCCESS, DELETE_ALLOWANCE_ERROR, GET_DEDUCTIONS_BEGIN, GET_DEDUCTIONS_SUCCESS, GET_DEDUCTIONS_ERROR, ADD_DEDUCTION_BEGIN, ADD_DEDUCTION_SUCCESS, ADD_DEDUCTION_ERROR, UPDATE_DEDUCTION_BEGIN, UPDATE_DEDUCTION_SUCCESS, UPDATE_DEDUCTION_ERROR, DELETE_DEDUCTION_BEGIN, DELETE_DEDUCTION_SUCCESS, DELETE_DEDUCTION_ERROR, GET_DEPARTMENTS_BEGIN, GET_DEPARTMENTS_SUCCESS, GET_DEPARTMENTS_ERROR, ADD_DEPARTMENT_BEGIN, ADD_DEPARTMENT_SUCCESS, ADD_DEPARTMENT_ERROR, UPDATE_DEPARTMENT_BEGIN, UPDATE_DEPARTMENT_SUCCESS, UPDATE_DEPARTMENT_ERROR, DELETE_DEPARTMENT_BEGIN, DELETE_DEPARTMENT_SUCCESS, DELETE_DEPARTMENT_ERROR, GET_DESIGNATIONS_BEGIN, GET_DESIGNATIONS_SUCCESS, GET_DESIGNATIONS_ERROR, ADD_DESIGNATION_BEGIN, ADD_DESIGNATION_SUCCESS, ADD_DESIGNATION_ERROR, UPDATE_DESIGNATION_BEGIN, UPDATE_DESIGNATION_SUCCESS, UPDATE_DESIGNATION_ERROR, DELETE_DESIGNATION_BEGIN, DELETE_DESIGNATION_SUCCESS, DELETE_DESIGNATION_ERROR, GET_FAMILY_BEGIN, GET_FAMILY_SUCCESS, GET_FAMILY_ERROR, ADD_FAMILY_BEGIN, ADD_FAMILY_SUCCESS, ADD_FAMILY_ERROR, UPDATE_FAMILY_BEGIN, UPDATE_FAMILY_SUCCESS, UPDATE_FAMILY_ERROR, DELETE_FAMILY_BEGIN, DELETE_FAMILY_SUCCESS, DELETE_FAMILY_ERROR, LOAD_SINGLEBATCH_FAMILY_BEGIN, LOAD_SINGLEBATCH_FAMILY_SUCCESS, LOAD_SINGLEBATCH_FAMILY_ERROR // education\n, GET_EDUCATION_BEGIN, GET_EDUCATION_SUCCESS, GET_EDUCATION_ERROR, ADD_EDUCATION_BEGIN, ADD_EDUCATION_SUCCESS, ADD_EDUCATION_ERROR, UPDATE_EDUCATION_BEGIN, UPDATE_EDUCATION_SUCCESS, UPDATE_EDUCATION_ERROR, DELETE_EDUCATION_BEGIN, DELETE_EDUCATION_SUCCESS, DELETE_EDUCATION_ERROR, LOAD_SINGLEBATCH_EDUCATION_BEGIN, LOAD_SINGLEBATCH_EDUCATION_SUCCESS, LOAD_SINGLEBATCH_EDUCATION_ERROR // experience\n, GET_EXPERIENCE_BEGIN, GET_EXPERIENCE_SUCCESS, GET_EXPERIENCE_ERROR, ADD_EXPERIENCE_BEGIN, ADD_EXPERIENCE_SUCCESS, ADD_EXPERIENCE_ERROR, UPDATE_EXPERIENCE_BEGIN, UPDATE_EXPERIENCE_SUCCESS, UPDATE_EXPERIENCE_ERROR, DELETE_EXPERIENCE_BEGIN, DELETE_EXPERIENCE_SUCCESS, DELETE_EXPERIENCE_ERROR, LOAD_SINGLEBATCH_EXPERIENCE_BEGIN, LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS, LOAD_SINGLEBATCH_EXPERIENCE_ERROR // reset\n, RESET_TABLES } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  payitems: [],\n  payitems_loading: false,\n  payitems_error: false,\n  allowances: [],\n  allowances_loading: false,\n  allowances_error: false,\n  deductions: [],\n  deductions_loading: false,\n  deductions_error: false,\n  departments: [],\n  departments_loading: false,\n  departments_error: false,\n  designatons: [],\n  designations_loading: false,\n  designations_error: false,\n  family: [],\n  family_loading: false,\n  family_error: false,\n  singlebatch_family_loading: false,\n  singlebatch_family_error: false,\n  singlebatchfamily: {},\n  single_family: {},\n  education: [],\n  education_loading: false,\n  education_error: false,\n  singlebatch_education_loading: false,\n  singlebatch_education_error: false,\n  singlebatcheducation: {},\n  experience: [],\n  experience_loading: false,\n  experience_error: false,\n  singlebatch_experience_loading: false,\n  singlebatch_experience_error: false,\n  singlebatchexperience: {}\n};\nconst TablesContext = /*#__PURE__*/React.createContext();\nexport const TablesProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState); // payitems\n\n  const loadPayitemss = async () => {\n    dispatch({\n      type: GET_PAYITEMS_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(payitems_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const payitems = await res.json();\n      dispatch({\n        type: GET_PAYITEMS_SUCCESS,\n        payload: payitems\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_PAYITEMS_ERROR\n      });\n    }\n  };\n\n  const addPayitem = async data => {\n    const {\n      id,\n      name\n    } = data; //\n\n    dispatch({\n      type: ADD_PAYITEM_BEGIN\n    });\n\n    try {\n      await fetch(payitems_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_PAYITEM_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_PAYITEM_ERROR\n      });\n    }\n  };\n\n  const updatePayitem = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_PAYITEM_BEGIN\n    });\n\n    try {\n      await fetch(payitems_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_PAYITEM_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_PAYITEM_ERROR\n      });\n    }\n  };\n\n  const deletePayitem = async id => {\n    dispatch({\n      type: DELETE_PAYITEM_BEGIN\n    });\n\n    try {\n      await fetch(payitems_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_PAYITEM_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: DELETE_PAYITEM_ERROR\n      });\n    }\n  }; // Allowances\n\n\n  const loadAllowances = async () => {\n    dispatch({\n      type: GET_ALLOWANCES_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(allowances_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const allowances = await res.json();\n      dispatch({\n        type: GET_ALLOWANCES_SUCCESS,\n        payload: allowances\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_ALLOWANCES_ERROR\n      });\n    }\n  };\n\n  const addAllowance = async data => {\n    const {\n      id,\n      name\n    } = data; //\n\n    dispatch({\n      type: ADD_ALLOWANCE_BEGIN\n    });\n\n    try {\n      await fetch(allowances_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_ALLOWANCE_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_ALLOWANCE_ERROR\n      });\n    }\n  };\n\n  const updateAllowance = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_ALLOWANCE_BEGIN\n    });\n\n    try {\n      await fetch(allowances_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_ALLOWANCE_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_ALLOWANCE_ERROR\n      });\n    }\n  };\n\n  const deleteAllowance = async id => {\n    dispatch({\n      type: DELETE_ALLOWANCE_BEGIN\n    });\n\n    try {\n      await fetch(allowances_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_ALLOWANCE_SUCCESS\n      }); //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_ALLOWANCE_ERROR\n      });\n    }\n  }; // Deductions\n\n\n  const loadDeductions = async () => {\n    dispatch({\n      type: GET_DEDUCTIONS_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(deductions_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const deductions = await res.json();\n      dispatch({\n        type: GET_DEDUCTIONS_SUCCESS,\n        payload: deductions\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_DEDUCTIONS_ERROR\n      });\n    }\n  };\n\n  const addDeduction = async data => {\n    const {\n      id,\n      name\n    } = data; //\n\n    dispatch({\n      type: ADD_DEDUCTION_BEGIN\n    });\n\n    try {\n      await fetch(deductions_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_DEDUCTION_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_DEDUCTION_ERROR\n      });\n    }\n  };\n\n  const updateDeduction = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_DEDUCTION_BEGIN\n    });\n\n    try {\n      await fetch(deductions_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_DEDUCTION_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_DEDUCTION_ERROR\n      });\n    }\n  };\n\n  const deleteDeduction = async id => {\n    dispatch({\n      type: DELETE_DEDUCTION_BEGIN\n    });\n\n    try {\n      await fetch(deductions_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_DEDUCTION_SUCCESS\n      }); //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_DEDUCTION_ERROR\n      });\n    }\n  }; // Departments\n\n\n  const loadDepartments = async () => {\n    dispatch({\n      type: GET_DEPARTMENTS_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(departments_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const departments = await res.json();\n      dispatch({\n        type: GET_DEPARTMENTS_SUCCESS,\n        payload: departments\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_DEPARTMENTS_ERROR\n      });\n    }\n  };\n\n  const addDepartment = async data => {\n    const {\n      id,\n      name\n    } = data; //\n\n    dispatch({\n      type: ADD_DEPARTMENT_BEGIN\n    });\n\n    try {\n      await fetch(departments_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_DEPARTMENT_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_DEPARTMENT_ERROR\n      });\n    }\n  };\n\n  const updateDepartment = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_DEPARTMENT_BEGIN\n    });\n\n    try {\n      await fetch(departments_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_DEPARTMENT_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_DEPARTMENT_ERROR\n      });\n    }\n  };\n\n  const deleteDepartment = async id => {\n    dispatch({\n      type: DELETE_DEPARTMENT_BEGIN\n    });\n\n    try {\n      await fetch(departments_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_DEPARTMENT_SUCCESS\n      }); //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_DEPARTMENT_ERROR\n      });\n    }\n  }; // Designations\n\n\n  const loadDesignations = async () => {\n    dispatch({\n      type: GET_DESIGNATIONS_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(designations_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const designations = await res.json();\n      dispatch({\n        type: GET_DESIGNATIONS_SUCCESS,\n        payload: designations\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_DESIGNATIONS_ERROR\n      });\n    }\n  };\n\n  const addDesignation = async data => {\n    const {\n      id,\n      name\n    } = data; //\n\n    dispatch({\n      type: ADD_DESIGNATION_BEGIN\n    });\n\n    try {\n      await fetch(designations_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_DESIGNATION_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_DESIGNATION_ERROR\n      });\n    }\n  };\n\n  const updateDesignation = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_DESIGNATION_BEGIN\n    });\n\n    try {\n      await fetch(designations_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_DESIGNATION_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_DESIGNATION_ERROR\n      });\n    }\n  };\n\n  const deleteDesignation = async id => {\n    dispatch({\n      type: DELETE_DESIGNATION_BEGIN\n    });\n\n    try {\n      await fetch(designations_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_DESIGNATION_SUCCESS\n      }); //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_DESIGNATION_ERROR\n      });\n    }\n  }; // Family\n\n\n  const loadFamily = async () => {\n    dispatch({\n      type: GET_FAMILY_BEGIN\n    });\n\n    try {\n      const res = await fetch(family_url);\n      const family = await res.json();\n      dispatch({\n        type: GET_FAMILY_SUCCESS,\n        payload: family\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_FAMILY_ERROR\n      });\n    }\n  };\n\n  const loadSingleBatchFamily = async empid => {\n    dispatch({\n      type: LOAD_SINGLEBATCH_FAMILY_BEGIN\n    });\n\n    try {\n      const res = await fetch(`${family_url}?fv=${empid}`); //console.log(`${family_url}?fv=${linkid}`);\n\n      const singlebatchfamily = await res.json();\n      dispatch({\n        type: LOAD_SINGLEBATCH_FAMILY_SUCCESS,\n        payload: singlebatchfamily\n      });\n    } catch (error) {\n      dispatch({\n        type: LOAD_SINGLEBATCH_FAMILY_ERROR\n      });\n    }\n  };\n\n  const addFamily = async data => {\n    const {\n      id,\n      name\n    } = data;\n    dispatch({\n      type: ADD_FAMILY_BEGIN\n    });\n\n    try {\n      await fetch(family_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_FAMILY_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_FAMILY_ERROR\n      });\n    }\n  };\n\n  const updateFamily = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_FAMILY_BEGIN\n    });\n\n    try {\n      await fetch(family_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_FAMILY_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_FAMILY_ERROR\n      });\n    }\n  };\n\n  const deleteFamily = async id => {\n    dispatch({\n      type: DELETE_FAMILY_BEGIN\n    });\n\n    try {\n      await fetch(family_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_FAMILY_SUCCESS\n      }); //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_FAMILY_ERROR\n      });\n    }\n  }; // Education\n\n\n  const loadEducation = async () => {\n    dispatch({\n      type: GET_EDUCATION_BEGIN\n    });\n\n    try {\n      const res = await fetch(educations_url);\n      const education = await res.json();\n      dispatch({\n        type: GET_EDUCATION_SUCCESS,\n        payload: education\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_EDUCATION_ERROR\n      });\n    }\n  };\n\n  const loadSingleBatchEducation = async empid => {\n    dispatch({\n      type: LOAD_SINGLEBATCH_EDUCATION_BEGIN\n    });\n\n    try {\n      const res = await fetch(`${educations_url}?fv=${empid}`);\n      const singlebatcheducation = await res.json();\n      dispatch({\n        type: LOAD_SINGLEBATCH_EDUCATION_SUCCESS,\n        payload: singlebatcheducation\n      });\n    } catch (error) {\n      dispatch({\n        type: LOAD_SINGLEBATCH_EDUCATION_ERROR\n      });\n    }\n  };\n\n  const addEducation = async data => {\n    const {\n      id,\n      name\n    } = data;\n    dispatch({\n      type: ADD_EDUCATION_BEGIN\n    });\n\n    try {\n      await fetch(educations_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_EDUCATION_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_EDUCATION_ERROR\n      });\n    }\n  };\n\n  const updateEducation = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_EDUCATION_BEGIN\n    });\n\n    try {\n      await fetch(educations_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_EDUCATION_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_EDUCATION_ERROR\n      });\n    }\n  };\n\n  const deleteEducation = async id => {\n    dispatch({\n      type: DELETE_EDUCATION_BEGIN\n    });\n\n    try {\n      await fetch(educations_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_EDUCATION_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: DELETE_EDUCATION_ERROR\n      });\n    }\n  }; // Experience\n\n\n  const loadExperience = async () => {\n    dispatch({\n      type: GET_EXPERIENCE_BEGIN\n    });\n\n    try {\n      const res = await fetch(educations_url);\n      const experience = await res.json();\n      dispatch({\n        type: GET_EXPERIENCE_SUCCESS,\n        payload: experience\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_EXPERIENCE_ERROR\n      });\n    }\n  };\n\n  const loadSingleBatchExperience = async empid => {\n    dispatch({\n      type: LOAD_SINGLEBATCH_EXPERIENCE_BEGIN\n    });\n\n    try {\n      const res = await fetch(`${experiences_url}?fv=${empid}`);\n      const singlebatchexperience = await res.json();\n      dispatch({\n        type: LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS,\n        payload: singlebatchexperience\n      });\n    } catch (error) {\n      dispatch({\n        type: LOAD_SINGLEBATCH_EXPERIENCE_ERROR\n      });\n    }\n  };\n\n  const addExperience = async data => {\n    const {\n      id,\n      name\n    } = data;\n    dispatch({\n      type: ADD_EXPERIENCE_BEGIN\n    });\n\n    try {\n      await fetch(experiences_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_EXPERIENCE_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_EXPERIENCE_ERROR\n      });\n    }\n  };\n\n  const updateExperience = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_EXPERIENCE_BEGIN\n    });\n\n    try {\n      await fetch(experiences_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_EXPERIENCE_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_EXPERIENCE_ERROR\n      });\n    }\n  };\n\n  const deleteExperience = async id => {\n    dispatch({\n      type: DELETE_EXPERIENCE_BEGIN\n    });\n\n    try {\n      await fetch(experiences_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_EXPERIENCE_SUCCESS\n      }); //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_EXPERIENCE_ERROR\n      });\n    }\n  };\n\n  const resetTables = () => {\n    dispatch({\n      type: RESET_TABLES\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TablesContext.Provider, {\n    value: { ...state,\n      loadAllowances,\n      addAllowance,\n      deleteAllowance,\n      updateAllowance,\n      loadAllowances,\n      addAllowance,\n      deleteAllowance,\n      updateAllowance,\n      loadDeductions,\n      addDeduction,\n      deleteDeduction,\n      updateDeduction,\n      loadDepartments,\n      addDepartment,\n      deleteDepartment,\n      updateDepartment,\n      loadDesignations,\n      addDesignation,\n      deleteDesignation,\n      updateDesignation,\n      loadFamily,\n      loadSingleBatchFamily,\n      addFamily,\n      deleteFamily,\n      updateFamily,\n      loadEducation,\n      loadSingleBatchEducation,\n      addEducation,\n      deleteEducation,\n      updateEducation,\n      loadExperience,\n      loadSingleBatchExperience,\n      addExperience,\n      deleteExperience,\n      updateExperience,\n      resetTables\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 691,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TablesProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TablesProvider;\nexport const useTablesContext = () => {\n  _s2();\n\n  return useContext(TablesContext);\n};\n\n_s2(useTablesContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TablesProvider\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/context/tables_context.js"],"names":["React","useContext","useEffect","useReducer","axios","reducer","allowances_url","deductions_url","departments_url","designations_url","family_url","educations_url","experiences_url","GET_PAYITEMS_BEGIN","GET_PAYITEMS_SUCCESS","GET_PAYITEMS_ERROR","ADD_PAYITEM_BEGIN","ADD_PAYITEM_SUCCESS","ADD_PAYITEM_ERROR","UPDATE_PAYITEM_BEGIN","UPDATE_PAYITEM_SUCCESS","UPDATE_PAYITEM_ERROR","DELETE_PAYITEM_BEGIN","DELETE_PAYITEM_SUCCESS","DELETE_PAYITEM_ERROR","GET_ALLOWANCES_BEGIN","GET_ALLOWANCES_SUCCESS","GET_ALLOWANCES_ERROR","ADD_ALLOWANCE_BEGIN","ADD_ALLOWANCE_SUCCESS","ADD_ALLOWANCE_ERROR","UPDATE_ALLOWANCE_BEGIN","UPDATE_ALLOWANCE_SUCCESS","UPDATE_ALLOWANCE_ERROR","DELETE_ALLOWANCE_BEGIN","DELETE_ALLOWANCE_SUCCESS","DELETE_ALLOWANCE_ERROR","GET_DEDUCTIONS_BEGIN","GET_DEDUCTIONS_SUCCESS","GET_DEDUCTIONS_ERROR","ADD_DEDUCTION_BEGIN","ADD_DEDUCTION_SUCCESS","ADD_DEDUCTION_ERROR","UPDATE_DEDUCTION_BEGIN","UPDATE_DEDUCTION_SUCCESS","UPDATE_DEDUCTION_ERROR","DELETE_DEDUCTION_BEGIN","DELETE_DEDUCTION_SUCCESS","DELETE_DEDUCTION_ERROR","GET_DEPARTMENTS_BEGIN","GET_DEPARTMENTS_SUCCESS","GET_DEPARTMENTS_ERROR","ADD_DEPARTMENT_BEGIN","ADD_DEPARTMENT_SUCCESS","ADD_DEPARTMENT_ERROR","UPDATE_DEPARTMENT_BEGIN","UPDATE_DEPARTMENT_SUCCESS","UPDATE_DEPARTMENT_ERROR","DELETE_DEPARTMENT_BEGIN","DELETE_DEPARTMENT_SUCCESS","DELETE_DEPARTMENT_ERROR","GET_DESIGNATIONS_BEGIN","GET_DESIGNATIONS_SUCCESS","GET_DESIGNATIONS_ERROR","ADD_DESIGNATION_BEGIN","ADD_DESIGNATION_SUCCESS","ADD_DESIGNATION_ERROR","UPDATE_DESIGNATION_BEGIN","UPDATE_DESIGNATION_SUCCESS","UPDATE_DESIGNATION_ERROR","DELETE_DESIGNATION_BEGIN","DELETE_DESIGNATION_SUCCESS","DELETE_DESIGNATION_ERROR","GET_FAMILY_BEGIN","GET_FAMILY_SUCCESS","GET_FAMILY_ERROR","ADD_FAMILY_BEGIN","ADD_FAMILY_SUCCESS","ADD_FAMILY_ERROR","UPDATE_FAMILY_BEGIN","UPDATE_FAMILY_SUCCESS","UPDATE_FAMILY_ERROR","DELETE_FAMILY_BEGIN","DELETE_FAMILY_SUCCESS","DELETE_FAMILY_ERROR","LOAD_SINGLEBATCH_FAMILY_BEGIN","LOAD_SINGLEBATCH_FAMILY_SUCCESS","LOAD_SINGLEBATCH_FAMILY_ERROR","GET_EDUCATION_BEGIN","GET_EDUCATION_SUCCESS","GET_EDUCATION_ERROR","ADD_EDUCATION_BEGIN","ADD_EDUCATION_SUCCESS","ADD_EDUCATION_ERROR","UPDATE_EDUCATION_BEGIN","UPDATE_EDUCATION_SUCCESS","UPDATE_EDUCATION_ERROR","DELETE_EDUCATION_BEGIN","DELETE_EDUCATION_SUCCESS","DELETE_EDUCATION_ERROR","LOAD_SINGLEBATCH_EDUCATION_BEGIN","LOAD_SINGLEBATCH_EDUCATION_SUCCESS","LOAD_SINGLEBATCH_EDUCATION_ERROR","GET_EXPERIENCE_BEGIN","GET_EXPERIENCE_SUCCESS","GET_EXPERIENCE_ERROR","ADD_EXPERIENCE_BEGIN","ADD_EXPERIENCE_SUCCESS","ADD_EXPERIENCE_ERROR","UPDATE_EXPERIENCE_BEGIN","UPDATE_EXPERIENCE_SUCCESS","UPDATE_EXPERIENCE_ERROR","DELETE_EXPERIENCE_BEGIN","DELETE_EXPERIENCE_SUCCESS","DELETE_EXPERIENCE_ERROR","LOAD_SINGLEBATCH_EXPERIENCE_BEGIN","LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS","LOAD_SINGLEBATCH_EXPERIENCE_ERROR","RESET_TABLES","initialState","payitems","payitems_loading","payitems_error","allowances","allowances_loading","allowances_error","deductions","deductions_loading","deductions_error","departments","departments_loading","departments_error","designatons","designations_loading","designations_error","family","family_loading","family_error","singlebatch_family_loading","singlebatch_family_error","singlebatchfamily","single_family","education","education_loading","education_error","singlebatch_education_loading","singlebatch_education_error","singlebatcheducation","experience","experience_loading","experience_error","singlebatch_experience_loading","singlebatch_experience_error","singlebatchexperience","TablesContext","createContext","TablesProvider","children","state","dispatch","loadPayitemss","type","res","fetch","payitems_url","json","payload","error","addPayitem","data","id","name","method","body","JSON","stringify","err","updatePayitem","fields","deletePayitem","loadAllowances","addAllowance","updateAllowance","deleteAllowance","loadDeductions","addDeduction","updateDeduction","deleteDeduction","loadDepartments","addDepartment","updateDepartment","deleteDepartment","loadDesignations","designations","addDesignation","updateDesignation","deleteDesignation","loadFamily","loadSingleBatchFamily","empid","addFamily","updateFamily","deleteFamily","loadEducation","loadSingleBatchEducation","addEducation","updateEducation","deleteEducation","loadExperience","loadSingleBatchExperience","addExperience","updateExperience","deleteExperience","resetTables","useTablesContext"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/tables_reducer\";\r\nimport { allowances_url } from \"../utils/constants\";\r\nimport { deductions_url } from \"../utils/constants\";\r\nimport { departments_url } from \"../utils/constants\";\r\nimport { designations_url } from \"../utils/constants\";\r\nimport { family_url } from \"../utils/constants\";\r\nimport { educations_url } from \"../utils/constants\";\r\nimport { experiences_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  GET_PAYITEMS_BEGIN,\r\n  GET_PAYITEMS_SUCCESS,\r\n  GET_PAYITEMS_ERROR,\r\n  ADD_PAYITEM_BEGIN,\r\n  ADD_PAYITEM_SUCCESS,\r\n  ADD_PAYITEM_ERROR,\r\n  UPDATE_PAYITEM_BEGIN,\r\n  UPDATE_PAYITEM_SUCCESS,\r\n  UPDATE_PAYITEM_ERROR,\r\n  DELETE_PAYITEM_BEGIN,\r\n  DELETE_PAYITEM_SUCCESS,\r\n  DELETE_PAYITEM_ERROR,\r\n  GET_ALLOWANCES_BEGIN,\r\n  GET_ALLOWANCES_SUCCESS,\r\n  GET_ALLOWANCES_ERROR,\r\n  ADD_ALLOWANCE_BEGIN,\r\n  ADD_ALLOWANCE_SUCCESS,\r\n  ADD_ALLOWANCE_ERROR,\r\n  UPDATE_ALLOWANCE_BEGIN,\r\n  UPDATE_ALLOWANCE_SUCCESS,\r\n  UPDATE_ALLOWANCE_ERROR,\r\n  DELETE_ALLOWANCE_BEGIN,\r\n  DELETE_ALLOWANCE_SUCCESS,\r\n  DELETE_ALLOWANCE_ERROR,\r\n  GET_DEDUCTIONS_BEGIN,\r\n  GET_DEDUCTIONS_SUCCESS,\r\n  GET_DEDUCTIONS_ERROR,\r\n  ADD_DEDUCTION_BEGIN,\r\n  ADD_DEDUCTION_SUCCESS,\r\n  ADD_DEDUCTION_ERROR,\r\n  UPDATE_DEDUCTION_BEGIN,\r\n  UPDATE_DEDUCTION_SUCCESS,\r\n  UPDATE_DEDUCTION_ERROR,\r\n  DELETE_DEDUCTION_BEGIN,\r\n  DELETE_DEDUCTION_SUCCESS,\r\n  DELETE_DEDUCTION_ERROR,\r\n  GET_DEPARTMENTS_BEGIN,\r\n  GET_DEPARTMENTS_SUCCESS,\r\n  GET_DEPARTMENTS_ERROR,\r\n  ADD_DEPARTMENT_BEGIN,\r\n  ADD_DEPARTMENT_SUCCESS,\r\n  ADD_DEPARTMENT_ERROR,\r\n  UPDATE_DEPARTMENT_BEGIN,\r\n  UPDATE_DEPARTMENT_SUCCESS,\r\n  UPDATE_DEPARTMENT_ERROR,\r\n  DELETE_DEPARTMENT_BEGIN,\r\n  DELETE_DEPARTMENT_SUCCESS,\r\n  DELETE_DEPARTMENT_ERROR,\r\n  GET_DESIGNATIONS_BEGIN,\r\n  GET_DESIGNATIONS_SUCCESS,\r\n  GET_DESIGNATIONS_ERROR,\r\n  ADD_DESIGNATION_BEGIN,\r\n  ADD_DESIGNATION_SUCCESS,\r\n  ADD_DESIGNATION_ERROR,\r\n  UPDATE_DESIGNATION_BEGIN,\r\n  UPDATE_DESIGNATION_SUCCESS,\r\n  UPDATE_DESIGNATION_ERROR,\r\n  DELETE_DESIGNATION_BEGIN,\r\n  DELETE_DESIGNATION_SUCCESS,\r\n  DELETE_DESIGNATION_ERROR,\r\n  GET_FAMILY_BEGIN,\r\n  GET_FAMILY_SUCCESS,\r\n  GET_FAMILY_ERROR,\r\n  ADD_FAMILY_BEGIN,\r\n  ADD_FAMILY_SUCCESS,\r\n  ADD_FAMILY_ERROR,\r\n  UPDATE_FAMILY_BEGIN,\r\n  UPDATE_FAMILY_SUCCESS,\r\n  UPDATE_FAMILY_ERROR,\r\n  DELETE_FAMILY_BEGIN,\r\n  DELETE_FAMILY_SUCCESS,\r\n  DELETE_FAMILY_ERROR,\r\n  LOAD_SINGLEBATCH_FAMILY_BEGIN,\r\n  LOAD_SINGLEBATCH_FAMILY_SUCCESS,\r\n  LOAD_SINGLEBATCH_FAMILY_ERROR,\r\n  // education\r\n  GET_EDUCATION_BEGIN,\r\n  GET_EDUCATION_SUCCESS,\r\n  GET_EDUCATION_ERROR,\r\n  ADD_EDUCATION_BEGIN,\r\n  ADD_EDUCATION_SUCCESS,\r\n  ADD_EDUCATION_ERROR,\r\n  UPDATE_EDUCATION_BEGIN,\r\n  UPDATE_EDUCATION_SUCCESS,\r\n  UPDATE_EDUCATION_ERROR,\r\n  DELETE_EDUCATION_BEGIN,\r\n  DELETE_EDUCATION_SUCCESS,\r\n  DELETE_EDUCATION_ERROR,\r\n  LOAD_SINGLEBATCH_EDUCATION_BEGIN,\r\n  LOAD_SINGLEBATCH_EDUCATION_SUCCESS,\r\n  LOAD_SINGLEBATCH_EDUCATION_ERROR,\r\n  // experience\r\n  GET_EXPERIENCE_BEGIN,\r\n  GET_EXPERIENCE_SUCCESS,\r\n  GET_EXPERIENCE_ERROR,\r\n  ADD_EXPERIENCE_BEGIN,\r\n  ADD_EXPERIENCE_SUCCESS,\r\n  ADD_EXPERIENCE_ERROR,\r\n  UPDATE_EXPERIENCE_BEGIN,\r\n  UPDATE_EXPERIENCE_SUCCESS,\r\n  UPDATE_EXPERIENCE_ERROR,\r\n  DELETE_EXPERIENCE_BEGIN,\r\n  DELETE_EXPERIENCE_SUCCESS,\r\n  DELETE_EXPERIENCE_ERROR,\r\n  LOAD_SINGLEBATCH_EXPERIENCE_BEGIN,\r\n  LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS,\r\n  LOAD_SINGLEBATCH_EXPERIENCE_ERROR,\r\n  // reset\r\n  RESET_TABLES,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  payitems: [],\r\n  payitems_loading: false,\r\n  payitems_error: false,\r\n  allowances: [],\r\n  allowances_loading: false,\r\n  allowances_error: false,\r\n  deductions: [],\r\n  deductions_loading: false,\r\n  deductions_error: false,\r\n  departments: [],\r\n  departments_loading: false,\r\n  departments_error: false,\r\n  designatons: [],\r\n  designations_loading: false,\r\n  designations_error: false,\r\n  family: [],\r\n  family_loading: false,\r\n  family_error: false,\r\n  singlebatch_family_loading: false,\r\n  singlebatch_family_error: false,\r\n  singlebatchfamily: {},\r\n  single_family: {},\r\n  education: [],\r\n  education_loading: false,\r\n  education_error: false,\r\n  singlebatch_education_loading: false,\r\n  singlebatch_education_error: false,\r\n  singlebatcheducation: {},\r\n  experience: [],\r\n  experience_loading: false,\r\n  experience_error: false,\r\n  singlebatch_experience_loading: false,\r\n  singlebatch_experience_error: false,\r\n  singlebatchexperience: {},\r\n};\r\n\r\nconst TablesContext = React.createContext();\r\n\r\nexport const TablesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  // payitems\r\n  const loadPayitemss = async () => {\r\n    dispatch({ type: GET_PAYITEMS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(payitems_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const payitems = await res.json();\r\n      dispatch({ type: GET_PAYITEMS_SUCCESS, payload: payitems });\r\n    } catch (error) {\r\n      dispatch({ type: GET_PAYITEMS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addPayitem = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_PAYITEM_BEGIN });\r\n    try {\r\n      await fetch(payitems_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_PAYITEM_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_PAYITEM_ERROR });\r\n    }\r\n  };\r\n\r\n  const updatePayitem = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_PAYITEM_BEGIN });\r\n    try {\r\n      await fetch(payitems_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_PAYITEM_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_PAYITEM_ERROR });\r\n    }\r\n  };\r\n\r\n  const deletePayitem = async (id) => {\r\n    dispatch({ type: DELETE_PAYITEM_BEGIN });\r\n    try {\r\n      await fetch(payitems_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_PAYITEM_SUCCESS });\r\n  \r\n    } catch (err) {\r\n      dispatch({ type: DELETE_PAYITEM_ERROR });\r\n    }\r\n  };\r\n\r\n  // Allowances\r\n  const loadAllowances = async () => {\r\n    dispatch({ type: GET_ALLOWANCES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(allowances_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const allowances = await res.json();\r\n      dispatch({ type: GET_ALLOWANCES_SUCCESS, payload: allowances });\r\n    } catch (error) {\r\n      dispatch({ type: GET_ALLOWANCES_ERROR });\r\n    }\r\n  };\r\n\r\n  const addAllowance = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_ALLOWANCE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateAllowance = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_ALLOWANCE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteAllowance = async (id) => {\r\n    dispatch({ type: DELETE_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_ALLOWANCE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  // Deductions\r\n  const loadDeductions = async () => {\r\n    dispatch({ type: GET_DEDUCTIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(deductions_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const deductions = await res.json();\r\n      dispatch({ type: GET_DEDUCTIONS_SUCCESS, payload: deductions });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DEDUCTIONS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDeduction = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DEDUCTION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDeduction = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DEDUCTION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDeduction = async (id) => {\r\n    dispatch({ type: DELETE_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DEDUCTION_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  // Departments\r\n  const loadDepartments = async () => {\r\n    dispatch({ type: GET_DEPARTMENTS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(departments_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const departments = await res.json();\r\n      dispatch({ type: GET_DEPARTMENTS_SUCCESS, payload: departments });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DEPARTMENTS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDepartment = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DEPARTMENT_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDepartment = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DEPARTMENT_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDepartment = async (id) => {\r\n    dispatch({ type: DELETE_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DEPARTMENT_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  // Designations\r\n  const loadDesignations = async () => {\r\n    dispatch({ type: GET_DESIGNATIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(designations_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const designations = await res.json();\r\n      dispatch({ type: GET_DESIGNATIONS_SUCCESS, payload: designations });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DESIGNATIONS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDesignation = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DESIGNATION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDesignation = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DESIGNATION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDesignation = async (id) => {\r\n    dispatch({ type: DELETE_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DESIGNATION_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  // Family\r\n  const loadFamily = async () => {\r\n    dispatch({ type: GET_FAMILY_BEGIN });\r\n    try {\r\n      const res = await fetch(family_url);\r\n      const family = await res.json();\r\n      dispatch({ type: GET_FAMILY_SUCCESS, payload: family });\r\n    } catch (error) {\r\n      dispatch({ type: GET_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadSingleBatchFamily = async (empid) => {\r\n    dispatch({ type: LOAD_SINGLEBATCH_FAMILY_BEGIN });\r\n    try {\r\n      const res = await fetch(`${family_url}?fv=${empid}`);\r\n      //console.log(`${family_url}?fv=${linkid}`);\r\n      const singlebatchfamily = await res.json();\r\n\r\n      dispatch({\r\n        type: LOAD_SINGLEBATCH_FAMILY_SUCCESS,\r\n        payload: singlebatchfamily,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: LOAD_SINGLEBATCH_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const addFamily = async (data) => {\r\n    const { id, name } = data;\r\n\r\n    dispatch({ type: ADD_FAMILY_BEGIN });\r\n    try {\r\n      await fetch(family_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_FAMILY_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateFamily = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_FAMILY_BEGIN });\r\n    try {\r\n      await fetch(family_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_FAMILY_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteFamily = async (id) => {\r\n    dispatch({ type: DELETE_FAMILY_BEGIN });\r\n    try {\r\n      await fetch(family_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_FAMILY_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  // Education\r\n  const loadEducation = async () => {\r\n    dispatch({ type: GET_EDUCATION_BEGIN });\r\n    try {\r\n      const res = await fetch(educations_url);\r\n\r\n      const education = await res.json();\r\n      dispatch({ type: GET_EDUCATION_SUCCESS, payload: education });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadSingleBatchEducation = async (empid) => {\r\n    dispatch({ type: LOAD_SINGLEBATCH_EDUCATION_BEGIN });\r\n    try {\r\n      const res = await fetch(`${educations_url}?fv=${empid}`);\r\n\r\n      const singlebatcheducation = await res.json();\r\n      dispatch({\r\n        type: LOAD_SINGLEBATCH_EDUCATION_SUCCESS,\r\n        payload: singlebatcheducation,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: LOAD_SINGLEBATCH_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const addEducation = async (data) => {\r\n    const { id, name } = data;\r\n\r\n    dispatch({ type: ADD_EDUCATION_BEGIN });\r\n    try {\r\n      await fetch(educations_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_EDUCATION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateEducation = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_EDUCATION_BEGIN });\r\n    try {\r\n      await fetch(educations_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_EDUCATION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteEducation = async (id) => {\r\n    dispatch({ type: DELETE_EDUCATION_BEGIN });\r\n    try {\r\n      await fetch(educations_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_EDUCATION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_EDUCATION_ERROR });\r\n    }\r\n  };\r\n\r\n  // Experience\r\n  const loadExperience = async () => {\r\n    dispatch({ type: GET_EXPERIENCE_BEGIN });\r\n    try {\r\n      const res = await fetch(educations_url);\r\n\r\n      const experience = await res.json();\r\n      dispatch({ type: GET_EXPERIENCE_SUCCESS, payload: experience });\r\n    } catch (error) {\r\n      dispatch({ type: GET_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadSingleBatchExperience = async (empid) => {\r\n    dispatch({ type: LOAD_SINGLEBATCH_EXPERIENCE_BEGIN });\r\n    try {\r\n      const res = await fetch(`${experiences_url}?fv=${empid}`);\r\n\r\n      const singlebatchexperience = await res.json();\r\n      dispatch({\r\n        type: LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS,\r\n        payload: singlebatchexperience,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: LOAD_SINGLEBATCH_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const addExperience = async (data) => {\r\n    const { id, name } = data;\r\n\r\n    dispatch({ type: ADD_EXPERIENCE_BEGIN });\r\n    try {\r\n      await fetch(experiences_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_EXPERIENCE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateExperience = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_EXPERIENCE_BEGIN });\r\n    try {\r\n      await fetch(experiences_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_EXPERIENCE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteExperience = async (id) => {\r\n    dispatch({ type: DELETE_EXPERIENCE_BEGIN });\r\n    try {\r\n      await fetch(experiences_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_EXPERIENCE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_EXPERIENCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const resetTables = () => {\r\n    dispatch({ type: RESET_TABLES });\r\n  };\r\n\r\n  return (\r\n    <TablesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadAllowances,\r\n        addAllowance,\r\n        deleteAllowance,\r\n        updateAllowance,\r\n        loadAllowances,\r\n        addAllowance,\r\n        deleteAllowance,\r\n        updateAllowance,\r\n        loadDeductions,\r\n        addDeduction,\r\n        deleteDeduction,\r\n        updateDeduction,\r\n        loadDepartments,\r\n        addDepartment,\r\n        deleteDepartment,\r\n        updateDepartment,\r\n        loadDesignations,\r\n        addDesignation,\r\n        deleteDesignation,\r\n        updateDesignation,\r\n        loadFamily,\r\n        loadSingleBatchFamily,\r\n        addFamily,\r\n        deleteFamily,\r\n        updateFamily,\r\n        loadEducation,\r\n        loadSingleBatchEducation,\r\n        addEducation,\r\n        deleteEducation,\r\n        updateEducation,\r\n        loadExperience,\r\n        loadSingleBatchExperience,\r\n        addExperience,\r\n        deleteExperience,\r\n        updateExperience,\r\n        resetTables,\r\n      }}\r\n    >\r\n      {children}\r\n    </TablesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTablesContext = () => {\r\n  return useContext(TablesContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}