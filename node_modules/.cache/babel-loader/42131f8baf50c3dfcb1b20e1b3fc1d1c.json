{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\PayslipForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer, useEffect, useRef } from \"react\";\nimport { Button, Icon, TextField, Paper, Typography, Select, Divider, Grid, Toolbar, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardLayout from \"../helpers/CardLayout\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport Payslip_ViewEarnings from \"./Payslip_ViewEarnings\";\nimport Payslip_ViewDeductions from \"./Payslip_ViewDeductions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_values = {\n  name: \"\",\n  period: \"\",\n  date: \"\",\n  bank_name: \"\",\n  bank_acno: \"\",\n  status: \"Pending\",\n  total_earnings: 0,\n  total_deductions: 0,\n  tap_amount: 0,\n  scp_amount: 0,\n  basic_pay: 0,\n  nett_pay: 0\n};\n\nconst PayslipForm = () => {\n  _s();\n\n  let history = useHistory();\n  const [calc, setCalc] = useState(false);\n  const classes = useStyles();\n  const {\n    isPayslipEditing,\n    single_payslip,\n    updatePayslip,\n    addPayslip,\n    editPayslipID,\n    loadPayslips,\n    getSinglePayslip,\n    single_payslip_loading,\n    single_payslip_error,\n    payslip_period,\n    payslip_earning_amount,\n    payslip_deduction_amount,\n    setPayslipEarningAmount,\n    setPayslipDeductionAmount,\n    payslipearnings,\n    payslipdeductions\n  } = usePayslipsContext();\n  const {\n    loadEmployees,\n    employees\n  } = useEmployeesContext();\n  const {\n    loadAllowances,\n    loadDeductions,\n    allowances,\n    deductions\n  } = useTablesContext(); //const [state, setState] = useState(single_payslip);\n\n  const {\n    handleSubmit,\n    control\n  } = useForm();\n  const {\n    name,\n    period,\n    date,\n    bank_name,\n    bank_acno,\n    status,\n    total_earnings,\n    total_deductions,\n    tap_amount,\n    scp_amount,\n    basic_pay,\n    nett_pay\n  } = single_payslip;\n  useEffect(async () => {\n    getSinglePayslip(editPayslipID);\n  }, []); // useEffect(() => {\n  //   if (calc) {\n  //     setTimeout(() => {\n  //       console.log(\"calc\");\n  //       calc_totals();\n  //       setCalc(false);\n  //     }, 10000);\n  //   }\n  // }, [calc]);\n\n  const handleChange = event => {//const { rec_id, ...fields } = single_payslip;\n    // const value =\n    //   event.target.type === \"number\"\n    //     ? parseInt(event.target.value, 10)\n    //     : event.target.value;\n    // setState({ ...state, [event.target.name]: value });\n  };\n\n  const calc_totals = () => {\n    const totalTAP = Math.ceil(basic_pay * 0.05);\n    const totalSCP = Math.round((basic_pay + Number.EPSILON) * 0.035 * 100) / 100;\n    const totalEarnings = payslipearnings.reduce((a, v) => a = a + v.amount, 0);\n    const totalDeductions = payslipdeductions.reduce((a, v) => a = a + v.amount, 0);\n    const nettPay = basic_pay + totalEarnings - totalDeductions - totalTAP - totalSCP;\n    setPayslipEarningAmount(totalEarnings);\n    setPayslipDeductionAmount(totalDeductions);\n    updatePayslip({\n      id: editPayslipID,\n      total_earnings: totalEarnings,\n      total_deductions: totalDeductions,\n      tap_amount: totalTAP,\n      scp_amount: totalSCP,\n      nett_pay: nettPay\n    });\n    console.log(\"total\", totalEarnings, totalDeductions, totalTAP, totalSCP, nettPay);\n    getSinglePayslip(editPayslipID);\n  };\n\n  const onSubmit = data => {\n    const {\n      rec_id,\n      ...fields\n    } = single_payslip;\n    updatePayslip(...fields); // if (isPayslipEditing) {\n    //   updatePayslip({ id: editPayslipID, ...data });\n    // } else {\n    //   addPayslip({ ...data });\n    // }\n    // loadPayslips();\n    // history.push(\"/batchpayslips\");\n  };\n\n  if (single_payslip_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (single_payslip_error) {\n    history.push(\"/error\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        md: 8,\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"h3\",\n              children: \"PAYSLIP FORM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"p\",\n              children: \"Payslip Preparation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              children: [\"Submit \", /*#__PURE__*/_jsxDEV(Icon, {\n                className: classes.rightIcon,\n                children: \"send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            className: classes.divider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"name\",\n                control: control,\n                defaultValue: name,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Name\",\n                    id: \"margin-normal\",\n                    name: \"name\",\n                    defaultValue: name,\n                    className: classes.textField,\n                    onChange: handleChange // select\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 23\n                  }, this);\n                },\n                rules: {\n                  required: \"Name required\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"period\",\n                control: control,\n                defaultValue: period,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Period\",\n                    id: \"margin-normal\",\n                    name: \"period\",\n                    defaultValue: period,\n                    className: classes.textField,\n                    onChange: handleChange,\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"date\",\n                control: control,\n                defaultValue: date,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Date\",\n                    type: \"date\",\n                    id: \"margin-normal\",\n                    name: \"date\",\n                    defaultValue: date,\n                    className: classes.textField,\n                    onChange: handleChange,\n                    InputLabelProps: {\n                      shrink: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"bank_name\",\n                control: control,\n                defaultValue: bank_name,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Bank Name\",\n                    id: \"margin-normal\",\n                    name: \"bank_name\",\n                    defaultValue: bank_name,\n                    className: classes.textField,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"bank_acno\",\n                control: control,\n                defaultValue: bank_acno,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Bank AC No\",\n                    id: \"margin-normal\",\n                    name: \"bank_acno\",\n                    value: bank_acno,\n                    className: classes.textField,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"tap_amount\",\n                control: control,\n                defaultValue: tap_amount,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"TAP Contrinution\",\n                    type: \"number\",\n                    id: \"standard-number\",\n                    name: \"tap_amount\",\n                    defaultValue: tap_amount,\n                    className: classes.textField //onChange={onChange}\n                    ,\n                    onChange: e => {\n                      handleChange(parseInt(e.target.value, 10));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"scp_amount\",\n                control: control,\n                defaultValue: scp_amount,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"SCP Contribution\",\n                    type: \"number\",\n                    id: \"standard-number\",\n                    name: \"scp_amount\",\n                    defaultValue: scp_amount,\n                    className: classes.textField //onChange={onChange}\n                    ,\n                    onChange: e => {\n                      handleChange(parseInt(e.target.value, 10));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"total_earnings\",\n                control: control,\n                defaultValue: total_earnings,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Total Earnings\",\n                    type: \"number\",\n                    id: \"standard-number\",\n                    name: \"total_earnings\",\n                    value: total_earnings,\n                    className: classes.textField //onChange={onChange}\n                    ,\n                    onChange: e => {\n                      handleChange(parseInt(e.target.value, 10));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"total_deductions\",\n                control: control,\n                defaultValue: total_deductions,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Total Deductions\",\n                    type: \"number\",\n                    id: \"standard-number\",\n                    name: \"total_deductions\",\n                    value: total_deductions,\n                    className: classes.textField //onChange={onChange}\n                    ,\n                    onChange: e => {\n                      handleChange(parseInt(e.target.value, 10));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Controller, {\n                name: \"basic_pay\",\n                control: control,\n                defaultValue: basic_pay,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Basic Pay\",\n                    type: \"number\",\n                    id: \"standard-number\",\n                    name: \"basic_pay\",\n                    value: basic_pay,\n                    className: classes.textField,\n                    onChange: handleChange // onChange={(e) => {\n                    //   handleChange(parseInt(e.target.value, 10));\n                    // }}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"nett_pay\",\n                control: control,\n                defaultValue: nett_pay,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Nett Pay\",\n                    type: \"number\",\n                    id: \"standard-number\",\n                    name: \"nett_pay\",\n                    value: nett_pay,\n                    className: classes.textField //onChange={onChange}\n                    ,\n                    onChange: e => {\n                      handleChange(parseInt(e.target.value, 10));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 23\n                  }, this);\n                } //rules={{ required: \"Name required\" }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              onClick: calc_totals,\n              children: [\"Calc \", /*#__PURE__*/_jsxDEV(Icon, {\n                className: classes.rightIcon,\n                children: \"send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 22\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            className: classes.divider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          className: classes.grid,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            xs: 6,\n            md: 8,\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(CardLayout, {\n                title: \"Earnings\",\n                children: /*#__PURE__*/_jsxDEV(Payslip_ViewEarnings, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            xs: 6,\n            md: 8,\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(CardLayout, {\n                title: \"Deductionss\",\n                children: /*#__PURE__*/_jsxDEV(Payslip_ViewDeductions, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        className: classes.divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PayslipForm, \"eUAKkv5iM5hg5S5FS5dvHQCvg1Y=\", false, function () {\n  return [useHistory, useStyles, usePayslipsContext, useEmployeesContext, useTablesContext, useForm];\n});\n\n_c = PayslipForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  divider: {\n    padding: 4\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 350\n  },\n  grid: {\n    padding: theme.spacing(3, 2) // justifyContent: \"center\",\n\n  },\n  box: {\n    height: 100,\n    display: \"flex\",\n    border: \"1px solid black\",\n    padding: 8\n  }\n}));\nexport default PayslipForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PayslipForm\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/PayslipForm.js"],"names":["React","useState","useReducer","useEffect","useRef","Button","Icon","TextField","Paper","Typography","Select","Divider","Grid","Toolbar","Box","makeStyles","CardLayout","MenuItem","Controller","useForm","useHistory","useEmployeesContext","usePayslipsContext","useTablesContext","Payslip_ViewEarnings","Payslip_ViewDeductions","initial_values","name","period","date","bank_name","bank_acno","status","total_earnings","total_deductions","tap_amount","scp_amount","basic_pay","nett_pay","PayslipForm","history","calc","setCalc","classes","useStyles","isPayslipEditing","single_payslip","updatePayslip","addPayslip","editPayslipID","loadPayslips","getSinglePayslip","single_payslip_loading","single_payslip_error","payslip_period","payslip_earning_amount","payslip_deduction_amount","setPayslipEarningAmount","setPayslipDeductionAmount","payslipearnings","payslipdeductions","loadEmployees","employees","loadAllowances","loadDeductions","allowances","deductions","handleSubmit","control","handleChange","event","calc_totals","totalTAP","Math","ceil","totalSCP","round","Number","EPSILON","totalEarnings","reduce","a","v","amount","totalDeductions","nettPay","id","console","log","onSubmit","data","rec_id","fields","push","root","button","rightIcon","divider","field","onChange","value","fieldState","error","textField","required","readOnly","shrink","e","parseInt","target","grid","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","padding","container","display","flexWrap","width","box","height","border"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Select,\r\n  Divider,\r\n  Grid,\r\n  Toolbar,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardLayout from \"../helpers/CardLayout\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport Payslip_ViewEarnings from \"./Payslip_ViewEarnings\";\r\nimport Payslip_ViewDeductions from \"./Payslip_ViewDeductions\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  period: \"\",\r\n  date: \"\",\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  status: \"Pending\",\r\n  total_earnings: 0,\r\n  total_deductions: 0,\r\n  tap_amount: 0,\r\n  scp_amount: 0,\r\n  basic_pay: 0,\r\n  nett_pay: 0,\r\n};\r\n\r\nconst PayslipForm = () => {\r\n  let history = useHistory();\r\n  const [calc, setCalc] = useState(false);\r\n  const classes = useStyles();\r\n  const {\r\n    isPayslipEditing,\r\n    single_payslip,\r\n    updatePayslip,\r\n    addPayslip,\r\n    editPayslipID,\r\n    loadPayslips,\r\n    getSinglePayslip,\r\n    single_payslip_loading,\r\n    single_payslip_error,\r\n    payslip_period,\r\n    payslip_earning_amount,\r\n    payslip_deduction_amount,\r\n    setPayslipEarningAmount,\r\n    setPayslipDeductionAmount,\r\n    payslipearnings,\r\n    payslipdeductions,\r\n  } = usePayslipsContext();\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const { loadAllowances, loadDeductions, allowances, deductions } =\r\n    useTablesContext();\r\n  //const [state, setState] = useState(single_payslip);\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const {\r\n    name,\r\n    period,\r\n    date,\r\n    bank_name,\r\n    bank_acno,\r\n    status,\r\n    total_earnings,\r\n    total_deductions,\r\n    tap_amount,\r\n    scp_amount,\r\n    basic_pay,\r\n    nett_pay,\r\n  } = single_payslip;\r\n\r\n  useEffect(async () => {\r\n    getSinglePayslip(editPayslipID);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (calc) {\r\n  //     setTimeout(() => {\r\n  //       console.log(\"calc\");\r\n  //       calc_totals();\r\n  //       setCalc(false);\r\n  //     }, 10000);\r\n  //   }\r\n  // }, [calc]);\r\n\r\n  const handleChange = (event) => {\r\n    //const { rec_id, ...fields } = single_payslip;\r\n    // const value =\r\n    //   event.target.type === \"number\"\r\n    //     ? parseInt(event.target.value, 10)\r\n    //     : event.target.value;\r\n    // setState({ ...state, [event.target.name]: value });\r\n  };\r\n\r\n  const calc_totals = () => {\r\n    const totalTAP = Math.ceil(basic_pay * 0.05);\r\n    const totalSCP =\r\n      Math.round((basic_pay + Number.EPSILON) * 0.035 * 100) / 100;\r\n    const totalEarnings = payslipearnings.reduce(\r\n      (a, v) => (a = a + v.amount),\r\n      0\r\n    );\r\n    const totalDeductions = payslipdeductions.reduce(\r\n      (a, v) => (a = a + v.amount),\r\n      0\r\n    );\r\n    const nettPay =\r\n      basic_pay + totalEarnings - totalDeductions - totalTAP - totalSCP;\r\n    setPayslipEarningAmount(totalEarnings);\r\n    setPayslipDeductionAmount(totalDeductions);\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_earnings: totalEarnings,\r\n      total_deductions: totalDeductions,\r\n      tap_amount: totalTAP,\r\n      scp_amount: totalSCP,\r\n      nett_pay: nettPay,\r\n    });\r\n    console.log(\r\n      \"total\",\r\n      totalEarnings,\r\n      totalDeductions,\r\n      totalTAP,\r\n      totalSCP,\r\n      nettPay\r\n    );\r\n    getSinglePayslip(editPayslipID);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    const { rec_id, ...fields } = single_payslip;\r\n    updatePayslip(...fields);\r\n\r\n    // if (isPayslipEditing) {\r\n    //   updatePayslip({ id: editPayslipID, ...data });\r\n    // } else {\r\n    //   addPayslip({ ...data });\r\n    // }\r\n    // loadPayslips();\r\n    // history.push(\"/batchpayslips\");\r\n  };\r\n\r\n  if (single_payslip_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (single_payslip_error) {\r\n    history.push(\"/error\");\r\n  }\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Grid xs={12} md={8} lg={12}>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n           <Grid></Grid>\r\n              <div>\r\n                <Typography variant=\"h5\" component=\"h3\">\r\n                  PAYSLIP FORM\r\n                </Typography>\r\n                <Typography component=\"p\">Payslip Preparation</Typography>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                >\r\n                  Submit <Icon className={classes.rightIcon}>send</Icon>\r\n                </Button>\r\n              </div>\r\n            \r\n            <Divider className={classes.divider} />\r\n            <Grid item xs={12}>\r\n              <div>\r\n                <Controller\r\n                  name=\"name\"\r\n                  control={control}\r\n                  defaultValue={name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Name\"\r\n                        id=\"margin-normal\"\r\n                        name=\"name\"\r\n                        defaultValue={name}\r\n                        className={classes.textField}\r\n                        onChange={handleChange}\r\n                        // select\r\n                      >\r\n                        {/* {employees.map((e) => {\r\n                  return (\r\n                    <MenuItem key={e.name} value={e.name}>\r\n                      {e.name}\r\n                    </MenuItem>\r\n                  );\r\n                })} */}\r\n                      </TextField>\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"period\"\r\n                  control={control}\r\n                  defaultValue={period}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Period\"\r\n                        id=\"margin-normal\"\r\n                        name=\"period\"\r\n                        defaultValue={period}\r\n                        className={classes.textField}\r\n                        onChange={handleChange}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"date\"\r\n                  control={control}\r\n                  defaultValue={date}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Date\"\r\n                        type=\"date\"\r\n                        id=\"margin-normal\"\r\n                        name=\"date\"\r\n                        defaultValue={date}\r\n                        className={classes.textField}\r\n                        onChange={handleChange}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"bank_name\"\r\n                  control={control}\r\n                  defaultValue={bank_name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Bank Name\"\r\n                        id=\"margin-normal\"\r\n                        name=\"bank_name\"\r\n                        defaultValue={bank_name}\r\n                        className={classes.textField}\r\n                        onChange={handleChange}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"bank_acno\"\r\n                  control={control}\r\n                  defaultValue={bank_acno}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Bank AC No\"\r\n                        id=\"margin-normal\"\r\n                        name=\"bank_acno\"\r\n                        value={bank_acno}\r\n                        className={classes.textField}\r\n                        onChange={handleChange}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"tap_amount\"\r\n                  control={control}\r\n                  defaultValue={tap_amount}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"TAP Contrinution\"\r\n                        type=\"number\"\r\n                        id=\"standard-number\"\r\n                        name=\"tap_amount\"\r\n                        defaultValue={tap_amount}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          handleChange(parseInt(e.target.value, 10));\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"scp_amount\"\r\n                  control={control}\r\n                  defaultValue={scp_amount}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"SCP Contribution\"\r\n                        type=\"number\"\r\n                        id=\"standard-number\"\r\n                        name=\"scp_amount\"\r\n                        defaultValue={scp_amount}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          handleChange(parseInt(e.target.value, 10));\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"total_earnings\"\r\n                  control={control}\r\n                  defaultValue={total_earnings}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Total Earnings\"\r\n                        type=\"number\"\r\n                        id=\"standard-number\"\r\n                        name=\"total_earnings\"\r\n                        value={total_earnings}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          handleChange(parseInt(e.target.value, 10));\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"total_deductions\"\r\n                  control={control}\r\n                  defaultValue={total_deductions}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Total Deductions\"\r\n                        type=\"number\"\r\n                        id=\"standard-number\"\r\n                        name=\"total_deductions\"\r\n                        value={total_deductions}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          handleChange(parseInt(e.target.value, 10));\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"basic_pay\"\r\n                  control={control}\r\n                  defaultValue={basic_pay}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Basic Pay\"\r\n                        type=\"number\"\r\n                        id=\"standard-number\"\r\n                        name=\"basic_pay\"\r\n                        value={basic_pay}\r\n                        className={classes.textField}\r\n                        onChange={handleChange}\r\n                        // onChange={(e) => {\r\n                        //   handleChange(parseInt(e.target.value, 10));\r\n                        // }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n                <Controller\r\n                  name=\"nett_pay\"\r\n                  control={control}\r\n                  defaultValue={nett_pay}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Nett Pay\"\r\n                        type=\"number\"\r\n                        id=\"standard-number\"\r\n                        name=\"nett_pay\"\r\n                        value={nett_pay}\r\n                        className={classes.textField}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          handleChange(parseInt(e.target.value, 10));\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={calc_totals}\r\n              >\r\n                Calc <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button>\r\n            </Grid>\r\n            <Divider className={classes.divider} />\r\n          </form>\r\n        </Grid>\r\n        <div>\r\n          <Grid container alignItems=\"center\" className={classes.grid}>\r\n            <Grid xs={6} md={8} lg={6}>\r\n              <div>\r\n                <CardLayout title=\"Earnings\">\r\n                  <Payslip_ViewEarnings />\r\n                </CardLayout>\r\n              </div>\r\n            </Grid>\r\n            <Grid xs={6} md={8} lg={6}>\r\n              <div>\r\n                <CardLayout title=\"Deductionss\">\r\n                  <Payslip_ViewDeductions />\r\n                </CardLayout>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <Divider className={classes.divider} />\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  divider: {\r\n    padding: 4,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n  grid: {\r\n    padding: theme.spacing(3, 2),\r\n    // justifyContent: \"center\",\r\n  },\r\n  box: {\r\n    height: 100,\r\n    display: \"flex\",\r\n    border: \"1px solid black\",\r\n    padding: 8,\r\n  },\r\n}));\r\n\r\nexport default PayslipForm;\r\n"]},"metadata":{},"sourceType":"module"}