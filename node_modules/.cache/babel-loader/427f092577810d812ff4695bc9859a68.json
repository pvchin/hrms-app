{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\LeaveTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { useHistory } from \"react-router-dom\";\nimport { useLeavesContext } from \"../context/leaves_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n    headCells\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: headCell.numeric ? \"right\" : \"left\",\n        padding: headCell.disablePadding ? \"none\" : \"default\",\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : \"asc\",\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.visuallyHidden,\n            children: order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EnhancedTableHead;\n\nconst ToolbarHeader = ({\n  title,\n  add_Leave\n}) => {\n  _s();\n\n  const classes = useToolbarStyles();\n  let history = useHistory();\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"add record\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"filter list\",\n        onClick: add_Leave,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {\n          fontSize: \"large\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToolbarHeader, \"vGr4O15zdPHx/VHq1NC2jcCEtuo=\", false, function () {\n  return [useToolbarStyles, useHistory];\n});\n\n_c2 = ToolbarHeader;\nexport default function LeavesTable({\n  title,\n  headCells\n}) {\n  _s2();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const {\n    leaves,\n    addLeave,\n    leaves_loading,\n    updateLeave,\n    deleteLeave,\n    loadLeaves,\n    getSingleLeave,\n    setEditLeaveID,\n    setIsLeaveEditingOn,\n    setIsLeaveEditingOff,\n    resetSingleLeave\n  } = useLeavesContext();\n  useEffect(() => {\n    loadLeaves();\n  }, []);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = leaves.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, leaves.length - page * rowsPerPage);\n\n  const update_Leave = async id => {\n    setEditLeaveID(id);\n    setIsLeaveEditingOn();\n    getSingleLeave(id);\n    history.push(\"/singleleave\");\n  };\n\n  const add_Leave = async () => {\n    resetSingleLeave();\n    setEditLeaveID(\"\");\n    setIsLeaveEditingOff();\n    history.push(\"/singleleave\");\n  };\n\n  const delete_Leave = id => {\n    setEditLeaveID(id);\n    deleteLeave();\n    loadLeaves();\n  };\n\n  if (leaves_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToolbarHeader, {\n      title: \"Leaves Applications\",\n      add_Leave: add_Leave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: classes.table,\n            \"aria-labelledby\": \"tableTitle\",\n            size: dense ? \"small\" : \"medium\",\n            \"aria-label\": \"enhanced table\",\n            children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n              classes: classes,\n              numSelected: selected.length,\n              order: order,\n              orderBy: orderBy,\n              onSelectAllClick: handleSelectAllClick,\n              onRequestSort: handleRequestSort,\n              rowCount: leaves.length,\n              headCells: headCells\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [stableSort(leaves, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n                const isItemSelected = isSelected(row.name);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  onClick: event => handleClick(event, row.name),\n                  role: \"checkbox\",\n                  \"aria-checked\": isItemSelected,\n                  tabIndex: -1,\n                  selected: isItemSelected,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    padding: \"none\",\n                    children: row.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    padding: \"none\",\n                    children: row.to_date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    padding: \"none\",\n                    children: row.from_date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    padding: \"none\",\n                    children: row.no_of_days\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    padding: \"none\",\n                    children: row.reason\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    padding: \"none\",\n                    children: row.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    padding: \"none\",\n                    children: /*#__PURE__*/_jsxDEV(CreateIcon, {\n                      color: \"primary\",\n                      onClick: () => update_Leave(row.id)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    padding: \"none\",\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      color: \"primary\",\n                      onClick: () => delete_Leave(row.id)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 25\n                  }, this)]\n                }, row.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 23\n                }, this);\n              }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                style: {\n                  height: (dense ? 33 : 53) * emptyRows\n                },\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 6\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 25],\n          component: \"div\",\n          count: leaves.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onChangePage: handleChangePage,\n          onChangeRowsPerPage: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          checked: dense,\n          onChange: handleChangeDense\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 20\n        }, this),\n        label: \"Dense padding\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} // EnhancedTableHead.propTypes = {\n//   classes: PropTypes.object.isRequired,\n//   numSelected: PropTypes.number.isRequired,\n//   onRequestSort: PropTypes.func.isRequired,\n//   onSelectAllClick: PropTypes.func.isRequired,\n//   order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n//   orderBy: PropTypes.string.isRequired,\n//   rowCount: PropTypes.number.isRequired,\n// };\n// ToolbarHeader.propTypes = {\n//   numSelected: PropTypes.number.isRequired,\n// };\n\n_s2(LeavesTable, \"CYcDD7L4ye9a6U4wWip5BkdkKAM=\", false, function () {\n  return [useHistory, useStyles, useLeavesContext];\n});\n\n_c3 = LeavesTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750,\n    marginLeft: 20,\n    height: 350\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  }\n}));\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === \"light\" ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: \"1 1 100%\"\n  }\n}));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"ToolbarHeader\");\n$RefreshReg$(_c3, \"LeavesTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/LeaveTable.js"],"names":["React","useEffect","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","CreateIcon","DeleteIcon","AddIcon","FilterListIcon","useHistory","useLeavesContext","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","headCells","createSortHandler","property","event","headCell","numeric","disablePadding","id","label","visuallyHidden","ToolbarHeader","title","add_Leave","useToolbarStyles","history","LeavesTable","useStyles","setOrder","useState","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","leaves","addLeave","leaves_loading","updateLeave","deleteLeave","loadLeaves","getSingleLeave","setEditLeaveID","setIsLeaveEditingOn","setIsLeaveEditingOff","resetSingleLeave","handleRequestSort","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","name","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","handleChangeDense","isSelected","emptyRows","Math","min","update_Leave","push","delete_Leave","root","paper","table","row","isItemSelected","labelId","to_date","from_date","no_of_days","reason","status","height","theme","width","marginBottom","spacing","minWidth","marginLeft","border","clip","margin","overflow","padding","position","top","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","flex"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n    headCells,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell> */}\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst ToolbarHeader = ({ title, add_Leave }) => {\r\n  const classes = useToolbarStyles();\r\n\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <Toolbar>\r\n      <Typography\r\n        className={classes.title}\r\n        variant=\"h6\"\r\n        id=\"tableTitle\"\r\n        component=\"div\"\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Tooltip title=\"add record\">\r\n        <IconButton aria-label=\"filter list\" onClick={add_Leave}>\r\n          <AddIcon fontSize=\"large\" color=\"primary\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default function LeavesTable({ title, headCells }) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const {\r\n    leaves,\r\n    addLeave,\r\n    leaves_loading,\r\n    updateLeave,\r\n    deleteLeave,\r\n    loadLeaves,\r\n    getSingleLeave,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n    resetSingleLeave,\r\n  } = useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    loadLeaves();\r\n  }, []);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = leaves.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, leaves.length - page * rowsPerPage);\r\n\r\n  const update_Leave = async (id) => {\r\n    setEditLeaveID(id);\r\n    setIsLeaveEditingOn();\r\n    getSingleLeave(id);\r\n    history.push(\"/singleleave\");\r\n  };\r\n\r\n  const add_Leave = async () => {\r\n    resetSingleLeave();\r\n    setEditLeaveID(\"\");\r\n    setIsLeaveEditingOff();\r\n    history.push(\"/singleleave\");\r\n  };\r\n\r\n  const delete_Leave = (id) => {\r\n    setEditLeaveID(id);\r\n    deleteLeave();\r\n    loadLeaves();\r\n  };\r\n  if (leaves_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ToolbarHeader title=\"Leaves Applications\" add_Leave={add_Leave} />\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={leaves.length}\r\n                headCells={headCells}\r\n              />\r\n              <TableBody>\r\n                {stableSort(leaves, getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const isItemSelected = isSelected(row.name);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        onClick={(event) => handleClick(event, row.name)}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={row.name}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        {/* <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            checked={isItemSelected}\r\n                            inputProps={{ \"aria-labelledby\": labelId }}\r\n                          />\r\n                        </TableCell> */}\r\n\r\n                        <TableCell align=\"left\" padding=\"none\">\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\" padding=\"none\">\r\n                          {row.to_date}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\" padding=\"none\">\r\n                          {row.from_date}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\" padding=\"none\">\r\n                          {row.no_of_days}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\" padding=\"none\">\r\n                          {row.reason}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\" padding=\"none\">\r\n                          {row.status}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\" padding=\"none\">\r\n                          <CreateIcon\r\n                            color=\"primary\"\r\n                            onClick={() => update_Leave(row.id)}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell align=\"right\" padding=\"none\">\r\n                          <DeleteIcon\r\n                            color=\"primary\"\r\n                            onClick={() => delete_Leave(row.id)}\r\n                          />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={leaves.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        <FormControlLabel\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Dense padding\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// EnhancedTableHead.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n//   numSelected: PropTypes.number.isRequired,\r\n//   onRequestSort: PropTypes.func.isRequired,\r\n//   onSelectAllClick: PropTypes.func.isRequired,\r\n//   order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n//   orderBy: PropTypes.string.isRequired,\r\n//   rowCount: PropTypes.number.isRequired,\r\n// };\r\n// ToolbarHeader.propTypes = {\r\n//   numSelected: PropTypes.number.isRequired,\r\n// };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n    marginLeft: 20,\r\n    height: 350,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}