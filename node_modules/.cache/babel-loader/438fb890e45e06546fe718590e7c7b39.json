{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Example6.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport axios from \"axios\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst url = \"https://course-api.com/react-tabs-project\"; // const fetchOnLeavesDetails = selector({\n//   key: \"onLeaveDetailsSelector\",\n//   get: async ({ get }) => {\n//     try {\n//       const { data } = await axios.get(onleaves_url);\n//       const onleavesdata = data;\n//       return data;\n//     } catch (error) {\n//       throw error;\n//     }\n//   },\n// });\n\nconst fetchjobs = async () => {\n  const response = await fetch(url);\n  const newJobs = await response.json();\n  setJobs(newJobs);\n  setLoading(false);\n};\n\nconst Example = () => {\n  _s();\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const [empdata, setEmpdata] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [jobs, setJobs] = useState([]);\n  const [value, setValue] = useState[0];\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section loading\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n  const {\n    company,\n    dates,\n    duties,\n    title\n  } = jobs[value];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"experience\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-container\",\n        children: jobs.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setValue(index),\n            className: `job-btn ${index === value && \"active-btn\"} `,\n            children: item.company\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"job-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"job-date\",\n          children: dates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), duties.map((duty, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job-desc\",\n            children: [/*#__PURE__*/_jsxDEV(FaAngleDoubleRight, {\n              className: \"job-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: duty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Example, \"myN44ZBWso9748qTOyZbwftCXk4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Example;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    padding: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"black\"\n  },\n  card: {\n    backgroundColor: \"black\"\n  }\n}));\nexport default Example;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Example6.js"],"names":["React","useState","useEffect","makeStyles","clsx","axios","Paper","FaAngleDoubleRight","drawerWidth","url","fetchjobs","response","fetch","newJobs","json","setJobs","setLoading","Example","classes","useStyles","fixedHeightPaper","paper","fixedHeight","empdata","setEmpdata","loading","jobs","value","setValue","company","dates","duties","title","map","item","index","duty","theme","root","flexGrow","container","margin","padding","width","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","backgroundColor","height","spacing","overflow","flexDirection","border","color","bcakgroundColor","card"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\r\n\r\nconst drawerWidth = 240;\r\nconst url = \"https://course-api.com/react-tabs-project\";\r\n\r\n// const fetchOnLeavesDetails = selector({\r\n//   key: \"onLeaveDetailsSelector\",\r\n//   get: async ({ get }) => {\r\n//     try {\r\n//       const { data } = await axios.get(onleaves_url);\r\n//       const onleavesdata = data;\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// });\r\n\r\nconst fetchjobs = async () => {\r\n  const response = await fetch(url);\r\n  const newJobs = await response.json();\r\n  setJobs(newJobs);\r\n  setLoading(false);\r\n};\r\n\r\nconst Example = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [empdata, setEmpdata] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [value, setValue] = useState[0];\r\n\r\n  if (loading) {\r\n    return (\r\n      <section className=\"section loading\">\r\n        <h1>loading...</h1>\r\n      </section>\r\n    );\r\n  }\r\n  const { company, dates, duties, title } = jobs[value];\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      <div className=\"title\">\r\n        <h2>experience</h2>\r\n        <div className=\"underline\"></div>\r\n      </div>\r\n      <div className=\"jobs-center\">\r\n        {/* btn container */}\r\n        <div className=\"btn-container\">\r\n          {jobs.map((item, index) => {\r\n            return (\r\n              <button\r\n                key={index}\r\n                onClick={() => setValue(index)}\r\n                className={`job-btn ${index === value && \"active-btn\"} `}\r\n              >\r\n                {item.company}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n        <article className=\"job-info\">\r\n          <h3>{title}</h3>\r\n          <h4>{company}</h4>\r\n          <p className=\"job-date\">{dates}</p>\r\n          {duties.map((duty, index) => {\r\n            return (\r\n              <div key={index} className=\"job-desc\">\r\n                <FaAngleDoubleRight className=\"job-icon\"></FaAngleDoubleRight>\r\n                <p>{duty}</p>\r\n              </div>\r\n            );\r\n          })}\r\n        </article>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n}));\r\n\r\nexport default Example;\r\n"]},"metadata":{},"sourceType":"module"}