{"ast":null,"code":"import { SET_EDITEXPENSEID, SET_ISEXPENSEEDITING_ON, SET_ISEXPENSEEDITING_OFF, SET_SINGLEEXPENSE, GET_EXPENSES_BEGIN, GET_EXPENSES_SUCCESS, GET_EXPENSES_ERROR, GET_UNPAIDEXPENSES_BEGIN, GET_UNPAIDEXPENSES_SUCCESS, GET_UNPAIDEXPENSES_ERROR, GET_SINGLE_EXPENSE_BEGIN, GET_SINGLE_EXPENSE_SUCCESS, GET_SINGLE_EXPENSE_ERROR, ADD_EXPENSE_BEGIN, ADD_EXPENSE_SUCCESS, ADD_EXPENSE_ERROR, DELETE_EXPENSE_BEGIN, DELETE_EXPENSE_SUCCESS, DELETE_EXPENSE_ERROR, UPDATE_EXPENSE_BEGIN, UPDATE_EXPENSE_SUCCESS, UPDATE_EXPENSE_ERROR, RESET_SINGLE_EXPENSE } from \"../actions\";\n\nconst expenses_reducer = (state, action) => {\n  // set leaves variables\n  if (action.type === SET_EDITEXPENSEID) {\n    return { ...state,\n      editExpenseID: action.payload\n    };\n  }\n\n  if (action.type === SET_ISEXPENSEEDITING_ON) {\n    return { ...state,\n      isExpenseEditing: true\n    };\n  }\n\n  if (action.type === SET_ISEXPENSEEDITING_OFF) {\n    return { ...state,\n      isExpenseEditing: false\n    };\n  }\n\n  if (action.type === RESET_SINGLE_EXPENSE) {\n    return { ...state,\n      single_expense: {}\n    };\n  } // get employees\n\n\n  if (action.type === GET_EXPENSES_BEGIN) {\n    return { ...state,\n      expenses_loading: true\n    };\n  }\n\n  if (action.type === GET_EXPENSES_SUCCESS) {\n    return { ...state,\n      expenses_loading: false,\n      expenses: action.payload\n    };\n  }\n\n  if (action.type === GET_EXPENSES_ERROR) {\n    return { ...state,\n      expenses_loading: false,\n      expenses_error: true\n    };\n  } // get unpaid expenses\n\n\n  if (action.type === GET_UNPAIDEXPENSES_BEGIN) {\n    return { ...state,\n      unpaid_expenses_loading: true\n    };\n  }\n\n  if (action.type === GET_UNPAIDEXPENSES_SUCCESS) {\n    return { ...state,\n      unpaidexpenses_loading: false,\n      expenses: action.payload\n    };\n  }\n\n  if (action.type === GET_UNPAIDEXPENSES_ERROR) {\n    return { ...state,\n      unpaid_expenses_loading: false,\n      expenses_error: true\n    };\n  } // add employee\n\n\n  if (action.type === ADD_EXPENSE_BEGIN) {\n    return { ...state,\n      add_expense_loading: true\n    };\n  }\n\n  if (action.type === ADD_EXPENSE_SUCCESS) {\n    return { ...state,\n      add_expenses_loading: false,\n      expenses: action.payload\n    };\n  }\n\n  if (action.type === ADD_EXPENSE_ERROR) {\n    return { ...state,\n      expenses_loading: false,\n      add_expense_error: true\n    };\n  } // update employee\n\n\n  if (action.type === UPDATE_EXPENSE_BEGIN) {\n    return { ...state,\n      update_expense_loading: true\n    };\n  }\n\n  if (action.type === UPDATE_EXPENSE_SUCCESS) {\n    return { ...state,\n      expenses_loading: false,\n      single_expense: action.payload\n    };\n  }\n\n  if (action.type === UPDATE_EXPENSE_ERROR) {\n    return { ...state,\n      update_expense_loading: false,\n      update_expense_error: true\n    };\n  } // delete employee\n\n\n  if (action.type === DELETE_EXPENSE_BEGIN) {\n    return { ...state,\n      delete_expense_loading: true,\n      delete_expense_error: false\n    };\n  }\n\n  if (action.type === DELETE_EXPENSE_SUCCESS) {\n    return { ...state,\n      delete_expense_loading: false,\n      delete_expense_error: false\n    };\n  }\n\n  if (action.type === DELETE_EXPENSE_ERROR) {\n    return { ...state,\n      delete_expense_loading: false,\n      delete_expense_error: true\n    };\n  } //single employee\n\n\n  if (action.type === GET_SINGLE_EXPENSE_BEGIN) {\n    return { ...state,\n      single_expense_loading: true,\n      single_expense_error: false\n    };\n  }\n\n  if (action.type === GET_SINGLE_EXPENSE_SUCCESS) {\n    return { ...state,\n      single_expense_loading: false,\n      single_expense: action.payload\n    };\n  }\n\n  if (action.type === GET_SINGLE_EXPENSE_ERROR) {\n    return { ...state,\n      single_expense_loading: false,\n      single_expense_error: true\n    };\n  } // return state;\n\n\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default expenses_reducer;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/reducers/expenses_reducer.js"],"names":["SET_EDITEXPENSEID","SET_ISEXPENSEEDITING_ON","SET_ISEXPENSEEDITING_OFF","SET_SINGLEEXPENSE","GET_EXPENSES_BEGIN","GET_EXPENSES_SUCCESS","GET_EXPENSES_ERROR","GET_UNPAIDEXPENSES_BEGIN","GET_UNPAIDEXPENSES_SUCCESS","GET_UNPAIDEXPENSES_ERROR","GET_SINGLE_EXPENSE_BEGIN","GET_SINGLE_EXPENSE_SUCCESS","GET_SINGLE_EXPENSE_ERROR","ADD_EXPENSE_BEGIN","ADD_EXPENSE_SUCCESS","ADD_EXPENSE_ERROR","DELETE_EXPENSE_BEGIN","DELETE_EXPENSE_SUCCESS","DELETE_EXPENSE_ERROR","UPDATE_EXPENSE_BEGIN","UPDATE_EXPENSE_SUCCESS","UPDATE_EXPENSE_ERROR","RESET_SINGLE_EXPENSE","expenses_reducer","state","action","type","editExpenseID","payload","isExpenseEditing","single_expense","expenses_loading","expenses","expenses_error","unpaid_expenses_loading","unpaidexpenses_loading","add_expense_loading","add_expenses_loading","add_expense_error","update_expense_loading","update_expense_error","delete_expense_loading","delete_expense_error","single_expense_loading","single_expense_error","Error"],"mappings":"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","sourcesContent":["import {\r\n  SET_EDITEXPENSEID,\r\n  SET_ISEXPENSEEDITING_ON,\r\n  SET_ISEXPENSEEDITING_OFF,\r\n  SET_SINGLEEXPENSE,\r\n  GET_EXPENSES_BEGIN,\r\n  GET_EXPENSES_SUCCESS,\r\n  GET_EXPENSES_ERROR,\r\n  GET_UNPAIDEXPENSES_BEGIN,\r\n  GET_UNPAIDEXPENSES_SUCCESS,\r\n  GET_UNPAIDEXPENSES_ERROR,\r\n  GET_SINGLE_EXPENSE_BEGIN,\r\n  GET_SINGLE_EXPENSE_SUCCESS,\r\n  GET_SINGLE_EXPENSE_ERROR,\r\n  ADD_EXPENSE_BEGIN,\r\n  ADD_EXPENSE_SUCCESS,\r\n  ADD_EXPENSE_ERROR,\r\n  DELETE_EXPENSE_BEGIN,\r\n  DELETE_EXPENSE_SUCCESS,\r\n  DELETE_EXPENSE_ERROR,\r\n  UPDATE_EXPENSE_BEGIN,\r\n  UPDATE_EXPENSE_SUCCESS,\r\n  UPDATE_EXPENSE_ERROR,\r\n  RESET_SINGLE_EXPENSE,\r\n} from \"../actions\";\r\n\r\nconst expenses_reducer = (state, action) => {\r\n  // set leaves variables\r\n  if (action.type === SET_EDITEXPENSEID) {\r\n    return { ...state, editExpenseID: action.payload };\r\n  }\r\n\r\n  if (action.type === SET_ISEXPENSEEDITING_ON) {\r\n    return { ...state, isExpenseEditing: true };\r\n  }\r\n  if (action.type === SET_ISEXPENSEEDITING_OFF) {\r\n    return { ...state, isExpenseEditing: false };\r\n  }\r\n  if (action.type === RESET_SINGLE_EXPENSE) {\r\n    return { ...state, single_expense: {} };\r\n  }\r\n  // get employees\r\n  if (action.type === GET_EXPENSES_BEGIN) {\r\n    return { ...state, expenses_loading: true };\r\n  }\r\n  if (action.type === GET_EXPENSES_SUCCESS) {\r\n    return { ...state, expenses_loading: false, expenses: action.payload };\r\n  }\r\n  if (action.type === GET_EXPENSES_ERROR) {\r\n    return { ...state, expenses_loading: false, expenses_error: true };\r\n  }\r\n\r\n  // get unpaid expenses\r\n  if (action.type === GET_UNPAIDEXPENSES_BEGIN) {\r\n    return { ...state, unpaid_expenses_loading: true };\r\n  }\r\n  if (action.type === GET_UNPAIDEXPENSES_SUCCESS) {\r\n    return { ...state, unpaidexpenses_loading: false, expenses: action.payload };\r\n  }\r\n  if (action.type === GET_UNPAIDEXPENSES_ERROR) {\r\n    return { ...state, unpaid_expenses_loading: false, expenses_error: true };\r\n  }\r\n\r\n  // add employee\r\n  if (action.type === ADD_EXPENSE_BEGIN) {\r\n    return { ...state, add_expense_loading: true };\r\n  }\r\n  if (action.type === ADD_EXPENSE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      add_expenses_loading: false,\r\n      expenses: action.payload,\r\n    };\r\n  }\r\n  if (action.type === ADD_EXPENSE_ERROR) {\r\n    return { ...state, expenses_loading: false, add_expense_error: true };\r\n  }\r\n  // update employee\r\n  if (action.type === UPDATE_EXPENSE_BEGIN) {\r\n    return { ...state, update_expense_loading: true };\r\n  }\r\n  if (action.type === UPDATE_EXPENSE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      expenses_loading: false,\r\n      single_expense: action.payload,\r\n    };\r\n  }\r\n  if (action.type === UPDATE_EXPENSE_ERROR) {\r\n    return {\r\n      ...state,\r\n      update_expense_loading: false,\r\n      update_expense_error: true,\r\n    };\r\n  }\r\n\r\n  // delete employee\r\n  if (action.type === DELETE_EXPENSE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      delete_expense_loading: true,\r\n      delete_expense_error: false,\r\n    };\r\n  }\r\n\r\n  if (action.type === DELETE_EXPENSE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      delete_expense_loading: false,\r\n      delete_expense_error: false,\r\n    };\r\n  }\r\n  if (action.type === DELETE_EXPENSE_ERROR) {\r\n    return {\r\n      ...state,\r\n      delete_expense_loading: false,\r\n      delete_expense_error: true,\r\n    };\r\n  }\r\n\r\n  //single employee\r\n  if (action.type === GET_SINGLE_EXPENSE_BEGIN) {\r\n    return {\r\n      ...state,\r\n      single_expense_loading: true,\r\n      single_expense_error: false,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_EXPENSE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      single_expense_loading: false,\r\n      single_expense: action.payload,\r\n    };\r\n  }\r\n  if (action.type === GET_SINGLE_EXPENSE_ERROR) {\r\n    return {\r\n      ...state,\r\n      single_expense_loading: false,\r\n      single_expense_error: true,\r\n    };\r\n  }\r\n\r\n  // return state;\r\n  throw new Error(`No Matching \"${action.type}\" - action type`);\r\n};\r\n\r\nexport default expenses_reducer;\r\n"]},"metadata":{},"sourceType":"module"}