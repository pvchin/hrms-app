{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Payrunbatch.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MaterialTable from \"material-table\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport clsx from \"clsx\";\nimport axios from \"axios\";\nimport { useAsync } from \"react-async\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Checkbox, Paper, Grid, Divider, TextField, MenuItem, ListSubheader } from \"@material-ui/core\";\nimport { employees_url } from \"../utils/constants\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { payslips, usePayslipsContext, updatePayslipsData } from \"../context/payslips_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { payrunState, paydataState } from \"./data/atomdata\";\nimport { RecoilRoot, atom, selector, useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst url = \"https://course-api.com/react-tabs-project\";\n\nconst Payrunbatch = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight); //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\n\n  const {\n    loadEmployees,\n    employees,\n    employees_loading\n  } = useEmployeesContext();\n  const {\n    getPayslipitems,\n    payslipitems,\n    payslipitems_loading,\n    payslipsdata,\n    setPayslipsData,\n    resetPayslipsData,\n    updatePayslipsData,\n    getSingleBatchPayslip,\n    singlebatchpayslip,\n    singlebatch_payslip_loading,\n    singlebatch_payslip_error\n  } = usePayslipsContext();\n  const {\n    loadPayitems,\n    payitems,\n    payitems_loading,\n    payitems_loading_error\n  } = useTablesContext(); //const [payitemsdata] = useRecoilState(paydataState);\n\n  const payrundata = useRecoilValue(payrunState);\n  const [loadFormdata, setLoadFormdata] = useState(false);\n  const [formdata, setFormdata] = useState([]);\n  const [rowindex, setRowIndex] = useState(0);\n\n  function NameForm() {\n    _s();\n\n    const [name, setName] = useState(\"\");\n\n    const handleSubmit = evt => {\n      alert(`Submitting Name ${name}`);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Name\",\n        variant: \"filled\",\n        name: \"name\",\n        value: name,\n        onChange: e => handleSubmit(e) //className={classes.textField}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(NameForm, \"gFPpQ6rgfiGkmgRsh4q2nIO1W+Q=\");\n\n  if (singlebatch_payslip_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (singlebatch_payslip_error) {\n    history.push(\"/error\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: fixedHeightPaper,\n    style: {\n      backgroundColor: \"black\"\n    },\n    children: /*#__PURE__*/_jsxDEV(NameForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Payrunbatch, \"CoL4Lo6W7i6K3yteRVMrGgkdRHA=\", false, function () {\n  return [useHistory, useStyles, useEmployeesContext, usePayslipsContext, useTablesContext, useRecoilValue];\n});\n\n_c = Payrunbatch;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    padding: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"black\"\n  },\n  card: {\n    backgroundColor: \"black\"\n  },\n  section: {\n    width: \"80vw\",\n    margin: \"1rem auto\",\n    maxWidth: \"var(--max-width)\"\n  },\n  underline: {\n    width: \"5rem\",\n    height: \"0.25rem\",\n    marginBottom: \"1.25rem\",\n    background: \"var(--clr-primary-5)\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  title: {\n    marginbottom: \"4rem\",\n    textAlign: \"center\"\n  },\n  jobscenter: {\n    width: \"80vw\",\n    margin: \"0 auto\",\n    maxWidth: \"var(--max-width)\",\n    flexDirection: \"row\"\n  },\n  btncontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: \"4rem\",\n    flexWrap: \"wrap\"\n  },\n  jobbtn: {\n    background: \"transparent\",\n    borderColor: \"transparent\",\n    textTransform: \"capitalize\",\n    fontSize: \"1.25rem\",\n    letterSpacing: \"var(--spacing)\",\n    margin: \"0 0.5rem\",\n    transition: \"var(--transition)\",\n    cursor: \"pointer\",\n    padding: \"0.25rem 0\",\n    lineHeight: \"1\",\n    outlineColor: \"var(--clr-primary-10)\",\n    \"&:hover\": {\n      color: \"var(--clr-primary-5)\",\n      boxShadow: \"0 2px var(--clr-primary-5)\"\n    }\n  },\n  activebtn: {\n    color: \"var(--clr-primary-5)\",\n    boxShadow: \"0 2px var(--clr-primary-5)\"\n  },\n  jobinfo: {\n    fontWeight: \"400\"\n  },\n  divider: {\n    // Theme Color, or use css color in quote\n    background: \"white\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 350\n  }\n}));\nexport default Payrunbatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payrunbatch\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Payrunbatch.js"],"names":["React","useState","useEffect","useMemo","makeStyles","MaterialTable","Controller","useForm","clsx","axios","useAsync","useHistory","Button","Checkbox","Paper","Grid","Divider","TextField","MenuItem","ListSubheader","employees_url","useEmployeesContext","payslips","usePayslipsContext","updatePayslipsData","useTablesContext","payrunState","paydataState","RecoilRoot","atom","selector","useRecoilState","useRecoilValue","useSetRecoilState","drawerWidth","url","Payrunbatch","history","classes","useStyles","fixedHeightPaper","paper","fixedHeight","loadEmployees","employees","employees_loading","getPayslipitems","payslipitems","payslipitems_loading","payslipsdata","setPayslipsData","resetPayslipsData","getSingleBatchPayslip","singlebatchpayslip","singlebatch_payslip_loading","singlebatch_payslip_error","loadPayitems","payitems","payitems_loading","payitems_loading_error","payrundata","loadFormdata","setLoadFormdata","formdata","setFormdata","rowindex","setRowIndex","NameForm","name","setName","handleSubmit","evt","alert","e","push","backgroundColor","theme","root","flexGrow","container","margin","padding","width","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","height","spacing","overflow","flexDirection","border","color","bcakgroundColor","card","section","maxWidth","underline","marginBottom","background","marginLeft","marginRight","title","marginbottom","textAlign","jobscenter","btncontainer","flexWrap","jobbtn","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","jobinfo","fontWeight","divider","textField"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport { useAsync } from \"react-async\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Paper,\r\n  Grid,\r\n  Divider,\r\n  TextField,\r\n  MenuItem,\r\n  ListSubheader,\r\n} from \"@material-ui/core\";\r\nimport { employees_url } from \"../utils/constants\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport {\r\n  payslips,\r\n  usePayslipsContext,\r\n  updatePayslipsData,\r\n} from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { payrunState, paydataState } from \"./data/atomdata\";\r\nimport {\r\n  RecoilRoot,\r\n  atom,\r\n  selector,\r\n  useRecoilState,\r\n  useRecoilValue,\r\n  useSetRecoilState,\r\n} from \"recoil\";\r\n\r\nconst drawerWidth = 240;\r\nconst url = \"https://course-api.com/react-tabs-project\";\r\n\r\nconst Payrunbatch = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  //const { register, handleSubmit, control, setValue, reset, watch } = useForm();\r\n\r\n  const { loadEmployees, employees, employees_loading } = useEmployeesContext();\r\n  const {\r\n    getPayslipitems,\r\n    payslipitems,\r\n    payslipitems_loading,\r\n    payslipsdata,\r\n    setPayslipsData,\r\n    resetPayslipsData,\r\n    updatePayslipsData,\r\n    getSingleBatchPayslip,\r\n    singlebatchpayslip,\r\n    singlebatch_payslip_loading,\r\n    singlebatch_payslip_error,\r\n  } = usePayslipsContext();\r\n  const { loadPayitems, payitems, payitems_loading, payitems_loading_error } =\r\n    useTablesContext();\r\n  //const [payitemsdata] = useRecoilState(paydataState);\r\n  const payrundata = useRecoilValue(payrunState);\r\n  const [loadFormdata, setLoadFormdata] = useState(false);\r\n  const [formdata, setFormdata] = useState([]);\r\n  const [rowindex, setRowIndex] = useState(0);\r\n\r\n  function NameForm() {\r\n    const [name, setName] = useState(\"\");\r\n\r\n    const handleSubmit = (evt) => {\r\n      alert(`Submitting Name ${name}`);\r\n    };\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Name\"\r\n          variant=\"filled\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={(e) => handleSubmit(e)}\r\n          //className={classes.textField}\r\n            />\r\n            <button></button>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  if (singlebatch_payslip_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (singlebatch_payslip_error) {\r\n    history.push(\"/error\");\r\n  }\r\n\r\n  return (\r\n    <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n     <NameForm />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"80vw\",\r\n    margin: \"1rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: \"white\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default Payrunbatch;\r\n"]},"metadata":{},"sourceType":"module"}