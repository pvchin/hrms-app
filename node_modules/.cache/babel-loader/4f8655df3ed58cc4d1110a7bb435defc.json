{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\LeaveTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useLeavesContext } from \"../context/leaves_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\"\n}, {\n  title: \"From Date\",\n  field: \"from_date\"\n}, {\n  title: \"To Date\",\n  field: \"to_date\"\n}, {\n  title: \"No of Days\",\n  field: \"no_of_days\"\n}, {\n  title: \"Status\",\n  field: \"status\"\n}];\nexport default function LeaveTable() {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const {\n    leaves,\n    addLeave,\n    leaves_loading,\n    updateLeave,\n    deleteLeave,\n    loadLeaves,\n    getSingleLeave,\n    setEditLeaveID,\n    setIsLeaveEditingOn,\n    setIsLeaveEditingOff,\n    resetSingleLeave\n  } = useLeavesContext();\n  useEffect(() => {\n    loadLeaves();\n  }, []);\n\n  const update_Leave = async data => {\n    const {\n      id\n    } = data;\n    setEditLeaveID(id);\n    setIsLeaveEditingOn();\n    getSingleLeave(id);\n    history.push(\"/singleleave\");\n  };\n\n  const add_Leave = async data => {\n    const {\n      id\n    } = data;\n    resetSingleLeave();\n    setEditLeaveID(\"\");\n    setIsLeaveEditingOff();\n    history.push(\"/singleleave\");\n  };\n\n  const delete_Leave = data => {\n    const {\n      id\n    } = data;\n    setEditLeaveID(id);\n    deleteLeave(id);\n    loadLeaves();\n  };\n\n  if (leaves_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: leaves,\n        title: \"Leave Application\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 37\n          }, this)\n        },\n        actions: [{\n          icon: \"edit\",\n          tooltip: \"Edit Record\",\n          onClick: (event, rowData) => {\n            update_Leave(rowData);\n          }\n        }, {\n          icon: \"delete\",\n          tooltip: \"Delete Record\",\n          onClick: (event, rowData) => {\n            delete_Leave(rowData);\n          }\n        }, {\n          icon: \"add\",\n          tooltip: \"Add Record\",\n          isFreeAction: true,\n          onClick: (event, rowData) => {\n            add_Leave(rowData);\n          }\n        }],\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"#01579b\" // color: \"#FFF\",\n\n          },\n          showTitle: true\n        } //   components={{\n        //     Toolbar: (props) => (\n        //       <div>\n        //         <MTableToolbar {...props} />\n        //         <Link to=\"/expenses\">\n        //           <div>\n        //             <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\n        //           </div>\n        //         </Link>\n        //       </div>\n        //     ),\n        //   }}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LeaveTable, \"NuW38wUsijdmZZveT2kYyB9awoM=\", false, function () {\n  return [useHistory, useStyles, useLeavesContext];\n});\n\n_c = LeaveTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaveTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/LeaveTable.js"],"names":["React","useState","useEffect","MaterialTable","makeStyles","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","useHistory","Link","useLeavesContext","columns","title","field","LeaveTable","history","classes","useStyles","leaves","addLeave","leaves_loading","updateLeave","deleteLeave","loadLeaves","getSingleLeave","setEditLeaveID","setIsLeaveEditingOn","setIsLeaveEditingOff","resetSingleLeave","update_Leave","data","id","push","add_Leave","delete_Leave","root","maxWidth","paddingTop","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","icon","tooltip","onClick","event","rowData","isFreeAction","filtering","headerStyle","backgroundColor","showTitle","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"From Date\", field: \"from_date\" },\r\n  { title: \"To Date\", field: \"to_date\" },\r\n  { title: \"No of Days\", field: \"no_of_days\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function LeaveTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const {\r\n    leaves,\r\n    addLeave,\r\n    leaves_loading,\r\n    updateLeave,\r\n    deleteLeave,\r\n    loadLeaves,\r\n    getSingleLeave,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n    resetSingleLeave,\r\n  } = useLeavesContext();\r\n\r\n  useEffect(() => {\r\n    loadLeaves();\r\n  }, []);\r\n\r\n  const update_Leave = async (data) => {\r\n    const { id } = data;\r\n    setEditLeaveID(id);\r\n    setIsLeaveEditingOn();\r\n    getSingleLeave(id);\r\n    history.push(\"/singleleave\");\r\n  };\r\n\r\n  const add_Leave = async (data) => {\r\n    const { id } = data;\r\n    resetSingleLeave();\r\n    setEditLeaveID(\"\");\r\n    setIsLeaveEditingOff();\r\n    history.push(\"/singleleave\");\r\n  };\r\n\r\n  const delete_Leave = (data) => {\r\n    const { id } = data;\r\n    setEditLeaveID(id);\r\n    deleteLeave(id);\r\n    loadLeaves();\r\n  };\r\n\r\n  if (leaves_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leaves}\r\n          title=\"Leave Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Leave(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Leave(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Leave(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"#01579b\",\r\n              // color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          //   components={{\r\n          //     Toolbar: (props) => (\r\n          //       <div>\r\n          //         <MTableToolbar {...props} />\r\n          //         <Link to=\"/expenses\">\r\n          //           <div>\r\n          //             <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n          //           </div>\r\n          //         </Link>\r\n          //       </div>\r\n          //     ),\r\n          //   }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}