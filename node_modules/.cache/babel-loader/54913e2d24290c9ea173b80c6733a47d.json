{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Payrun.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MaterialTable from \"material-table\";\nimport clsx from \"clsx\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { format } from \"date-fns\";\nimport axios from \"axios\";\nimport { useAsync } from \"react-async\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { Button, Checkbox, Paper, Grid, Icon, Divider, TextField, MenuItem, FormControlLabel } from \"@material-ui/core\";\nimport { RecoilRoot, atom, selector, useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { employees_url } from \"../utils/constants\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { payrunState, payPeriodIdState, paydataState } from \"./data/atomdata\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst url = \"https://course-api.com/react-tabs-project\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\",\n  editable: \"never\",\n  cellStyle: {\n    width: 280,\n    maxWidth: 280\n  }\n}];\nconst payitemsdata_initial = [{\n  id: 1,\n  item: \"Basic Salary\",\n  amt: 0\n}, {\n  id: 2,\n  item: \"\",\n  amt: 0\n}, {\n  id: 3,\n  item: \"\",\n  amt: 0\n}, {\n  id: 4,\n  item: \"\",\n  amt: 0\n}, {\n  id: 5,\n  item: \"\",\n  amt: 0\n}, {\n  id: 6,\n  item: \"\",\n  amt: 0\n}, {\n  id: 7,\n  item: \"\",\n  amt: 0\n}, {\n  id: 8,\n  item: \"\",\n  amt: 0\n}, {\n  id: 9,\n  item: \"\",\n  amt: 0\n}, {\n  id: 10,\n  item: \"\",\n  amt: 0\n}]; // const loadEmp = async () =>\n//   await fetch(employees_url)\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\n//     .then((res) => res.json());\n\nconst Payrun = () => {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const {\n    loadEmployees,\n    employees\n  } = useEmployeesContext();\n  const {\n    addPayrun,\n    getPayrun,\n    payrun,\n    payrun_loading\n  } = usePayslipsContext();\n  const [input, setInput] = useRecoilState(payrunState);\n  const [paydata, setPaydata] = useRecoilState(paydataState);\n  const [alert, setAlert] = useState(false);\n  const [error, setError] = useState(false);\n  const [tempdata, setTempdata] = useState([]);\n\n  function formatDate(string) {\n    var options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    };\n    return new Date(string).toLocaleDateString(\"en-GB\", options);\n  }\n\n  function formatPayrun() {\n    const yy = input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\n    const mm = input.fromdate.substring(5, 7);\n    const d = input.fromdate;\n    console.log(\"payrun\", yy, mm, d);\n  } // var today = new Date();\n  // console.log(yyyymmdd(today));\n\n\n  const handleChange = e => {\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handlePayrunSubmit = e => {\n    e.preventDefault();\n    const period = formatDate(input.fromdate) + \" - \" + formatDate(input.todate);\n    const payrun = input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\n    setInput({ ...input,\n      period: period,\n      payrun: payrun\n    });\n    formatPayrun();\n    checkSelectedEmployees();\n  };\n\n  const checkSelectedEmployees = () => {\n    let items = [];\n    let payitems = [];\n    employees.forEach((item, index) => {\n      const {\n        id,\n        name,\n        basic_salary\n      } = item;\n\n      if (item.tableData.checked) {\n        const newData = [{\n          empid: id,\n          empname: name,\n          basic_salary: basic_salary,\n          wages: 0,\n          allowances: 0,\n          deductions: 0,\n          nettpay: 0,\n          rowindex: index\n        }];\n        items.push(newData);\n\n        for (var i = 0; i < 10; i++) {\n          /*#__PURE__*/\n          _jsxDEV(ObjectRow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this);\n        }\n      }\n    });\n    setPaydata({\n      pay: items,\n      payitems: payitems\n    });\n    console.log(\"items\", items, paydata.pay, paydata.payitems);\n  };\n\n  const handleNext = () => {\n    //loadEmployees();\n    history.push(\"/payrunbatch\");\n  };\n\n  const add_Payrun = () => {\n    //update payrun\n    addPayrun({\n      pay_freq: input.payfreq,\n      from_date: input.fromdate,\n      to_date: input.todate,\n      pay_date: input.paydate,\n      period: input.period,\n      payrun: input.payrun\n    });\n    getPayrun();\n  };\n\n  useEffect(() => {\n    loadEmployees();\n    getPayrun();\n  }, []);\n  useEffect(() => {\n    if (input.period && input.payrun) {\n      add_Payrun();\n      setAlert(true);\n    }\n  }, [input]);\n\n  if (payrun_loading) {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: fixedHeightPaper,\n    style: {\n      backgroundColor: \"black\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.section,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        direction: \"row\",\n        container: true,\n        spacing: 1,\n        style: {\n          border: \"1px solid white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          sm: 3,\n          direction: \"column\",\n          align: \"left\",\n          children: /*#__PURE__*/_jsxDEV(\"article\", {\n            className: classes.jobinfo,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Pay Run\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handlePayrunSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Pay Frequency\",\n                  variant: \"filled\",\n                  required: true,\n                  style: {\n                    width: 250\n                  },\n                  name: \"payfreq\",\n                  value: input.payfreq,\n                  onChange: e => handleChange(e),\n                  select: true,\n                  children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Monthly\",\n                    children: \"Monthly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"From Date\",\n                  variant: \"filled\",\n                  name: \"fromdate\",\n                  type: \"date\",\n                  value: input.fromdate,\n                  required: true,\n                  style: {\n                    width: 250\n                  },\n                  onChange: e => handleChange(e),\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"To Date\",\n                  variant: \"filled\",\n                  type: \"date\",\n                  name: \"todate\",\n                  value: input.todate,\n                  required: true,\n                  onChange: e => handleChange(e),\n                  style: {\n                    width: 250\n                  },\n                  onChange: handleChange,\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Payment Date\",\n                  variant: \"filled\",\n                  type: \"date\",\n                  name: \"paydate\",\n                  value: input.paydate,\n                  required: true,\n                  style: {\n                    width: 250\n                  },\n                  onChange: e => handleChange(e),\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  className: classes.button,\n                  children: [\"Submit \", /*#__PURE__*/_jsxDEV(Icon, {\n                    className: classes.rightIcon,\n                    children: \"send\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 28\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 19\n                }, this), alert && /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  className: classes.button,\n                  onClick: handleNext,\n                  children: [\"Next \", /*#__PURE__*/_jsxDEV(Icon, {\n                    className: classes.rightIcon,\n                    children: \"send\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 28\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: alert && /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"New Payrun being added!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 32\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: error && /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"This Payrun period already existed!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          flexItem: true,\n          style: {\n            background: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          sm: 8,\n          align: \"right\",\n          children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n            columns: columns,\n            data: employees,\n            title: \"Payrun History\",\n            options: {\n              filtering: false,\n              search: false,\n              toolbar: false,\n              selection: true,\n              headerStyle: {\n                backgroundColor: \"orange\",\n                color: \"primary\"\n              },\n              showTitle: false\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payrun, \"P338e+yyaBiY2J6oczAzSmFZfBo=\", false, function () {\n  return [useHistory, useStyles, useEmployeesContext, usePayslipsContext, useRecoilState, useRecoilState];\n});\n\n_c = Payrun;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    padding: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"black\"\n  },\n  card: {\n    backgroundColor: \"black\"\n  },\n  section: {\n    width: \"95vw\",\n    margin: \"5rem auto\",\n    maxWidth: \"var(--max-width)\"\n  },\n  underline: {\n    width: \"5rem\",\n    height: \"0.25rem\",\n    marginBottom: \"1.25rem\",\n    background: \"var(--clr-primary-5)\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  title: {\n    marginbottom: \"4rem\",\n    textAlign: \"center\"\n  },\n  jobscenter: {\n    width: \"80vw\",\n    margin: \"0 auto\",\n    maxWidth: \"var(--max-width)\",\n    flexDirection: \"row\"\n  },\n  btncontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: \"4rem\",\n    flexWrap: \"wrap\"\n  },\n  jobbtn: {\n    background: \"transparent\",\n    borderColor: \"transparent\",\n    textTransform: \"capitalize\",\n    fontSize: \"1.25rem\",\n    letterSpacing: \"var(--spacing)\",\n    margin: \"0 0.5rem\",\n    transition: \"var(--transition)\",\n    cursor: \"pointer\",\n    padding: \"0.25rem 0\",\n    lineHeight: \"1\",\n    outlineColor: \"var(--clr-primary-10)\",\n    \"&:hover\": {\n      color: \"var(--clr-primary-5)\",\n      boxShadow: \"0 2px var(--clr-primary-5)\"\n    }\n  },\n  activebtn: {\n    color: \"var(--clr-primary-5)\",\n    boxShadow: \"0 2px var(--clr-primary-5)\"\n  },\n  jobinfo: {\n    fontWeight: \"400\"\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\nexport default Payrun;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payrun\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Payrun.js"],"names":["React","useState","useEffect","makeStyles","MaterialTable","clsx","useHistory","moment","format","axios","useAsync","Alert","Button","Checkbox","Paper","Grid","Icon","Divider","TextField","MenuItem","FormControlLabel","RecoilRoot","atom","selector","useRecoilState","useRecoilValue","useSetRecoilState","employees_url","useEmployeesContext","usePayslipsContext","payrunState","payPeriodIdState","paydataState","drawerWidth","url","columns","title","field","editable","cellStyle","width","maxWidth","payitemsdata_initial","id","item","amt","Payrun","history","classes","useStyles","fixedHeightPaper","paper","fixedHeight","loadEmployees","employees","addPayrun","getPayrun","payrun","payrun_loading","input","setInput","paydata","setPaydata","alert","setAlert","error","setError","tempdata","setTempdata","formatDate","string","options","year","month","day","Date","toLocaleDateString","formatPayrun","yy","fromdate","substring","mm","d","console","log","handleChange","e","target","name","value","handlePayrunSubmit","preventDefault","period","todate","checkSelectedEmployees","items","payitems","forEach","index","basic_salary","tableData","checked","newData","empid","empname","wages","allowances","deductions","nettpay","rowindex","push","i","pay","handleNext","add_Payrun","pay_freq","payfreq","from_date","to_date","pay_date","paydate","backgroundColor","section","border","jobinfo","shrink","button","rightIcon","background","filtering","search","toolbar","selection","headerStyle","color","showTitle","theme","root","flexGrow","margin","spacing","container","padding","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","height","overflow","flexDirection","bcakgroundColor","card","underline","marginBottom","marginLeft","marginRight","marginbottom","textAlign","jobscenter","btncontainer","flexWrap","jobbtn","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { format } from \"date-fns\";\r\nimport axios from \"axios\";\r\nimport { useAsync } from \"react-async\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Paper,\r\n  Grid,\r\n  Icon,\r\n  Divider,\r\n  TextField,\r\n  MenuItem,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  RecoilRoot,\r\n  atom,\r\n  selector,\r\n  useRecoilState,\r\n  useRecoilValue,\r\n  useSetRecoilState,\r\n} from \"recoil\";\r\n\r\nimport { employees_url } from \"../utils/constants\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { payrunState, payPeriodIdState, paydataState } from \"./data/atomdata\";\r\n\r\nconst drawerWidth = 240;\r\nconst url = \"https://course-api.com/react-tabs-project\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 280,\r\n      maxWidth: 280,\r\n    },\r\n  },\r\n];\r\n\r\nconst payitemsdata_initial = [\r\n  { id: 1, item: \"Basic Salary\", amt: 0 },\r\n  { id: 2, item: \"\", amt: 0 },\r\n  { id: 3, item: \"\", amt: 0 },\r\n  { id: 4, item: \"\", amt: 0 },\r\n  { id: 5, item: \"\", amt: 0 },\r\n  { id: 6, item: \"\", amt: 0 },\r\n  { id: 7, item: \"\", amt: 0 },\r\n  { id: 8, item: \"\", amt: 0 },\r\n  { id: 9, item: \"\", amt: 0 },\r\n  { id: 10, item: \"\", amt: 0 },\r\n];\r\n\r\n// const loadEmp = async () =>\r\n//   await fetch(employees_url)\r\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\r\n//     .then((res) => res.json());\r\n\r\nconst Payrun = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const { addPayrun, getPayrun, payrun, payrun_loading } = usePayslipsContext();\r\n  const [input, setInput] = useRecoilState(payrunState);\r\n  const [paydata, setPaydata] = useRecoilState(paydataState);\r\n  const [alert, setAlert] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [tempdata, setTempdata] = useState([]);\r\n\r\n  function formatDate(string) {\r\n    var options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n    return new Date(string).toLocaleDateString(\"en-GB\", options);\r\n  }\r\n\r\n  function formatPayrun() {\r\n    const yy =\r\n      input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\r\n    const mm = input.fromdate.substring(5, 7);\r\n    const d = input.fromdate;\r\n    console.log(\"payrun\", yy, mm, d);\r\n  }\r\n\r\n  // var today = new Date();\r\n  // console.log(yyyymmdd(today));\r\n\r\n  const handleChange = (e) => {\r\n    setInput({ ...input, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handlePayrunSubmit = (e) => {\r\n    e.preventDefault();\r\n    const period =\r\n      formatDate(input.fromdate) + \" - \" + formatDate(input.todate);\r\n    const payrun =\r\n      input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\r\n    setInput({ ...input, period: period, payrun: payrun });\r\n    formatPayrun();\r\n    checkSelectedEmployees();\r\n  };\r\n\r\n  const checkSelectedEmployees = () => {\r\n    let items = [];\r\n    let payitems = [];\r\n    employees.forEach((item, index) => {\r\n      const { id, name, basic_salary } = item;\r\n      if (item.tableData.checked) {\r\n        const newData = [\r\n          {\r\n            empid: id,\r\n            empname: name,\r\n            basic_salary: basic_salary,\r\n            wages: 0,\r\n            allowances: 0,\r\n            deductions: 0,\r\n            nettpay: 0,\r\n            rowindex: index,\r\n          },\r\n        ];\r\n        items.push(newData);\r\n          for (var i = 0; i < 10; i++) {\r\n            <ObjectRow />;\r\n          } \r\n      }\r\n    });\r\n\r\n    setPaydata({ pay: items, payitems: payitems });\r\n    console.log(\"items\", items, paydata.pay, paydata.payitems);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    //loadEmployees();\r\n    history.push(\"/payrunbatch\");\r\n  };\r\n\r\n  const add_Payrun = () => {\r\n    //update payrun\r\n    addPayrun({\r\n      pay_freq: input.payfreq,\r\n      from_date: input.fromdate,\r\n      to_date: input.todate,\r\n      pay_date: input.paydate,\r\n      period: input.period,\r\n      payrun: input.payrun,\r\n    });\r\n    getPayrun();\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployees();\r\n    getPayrun();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (input.period && input.payrun) {\r\n      add_Payrun();\r\n      setAlert(true);\r\n    }\r\n  }, [input]);\r\n\r\n  if (payrun_loading) {\r\n    <div>\r\n      <h2>Loading....</h2>\r\n    </div>;\r\n  }\r\n\r\n  return (\r\n    <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n      <section className={classes.section}>\r\n        <Grid\r\n          direction=\"row\"\r\n          container\r\n          spacing={1}\r\n          style={{ border: \"1px solid white\" }}\r\n        >\r\n          <Grid container item sm={3} direction=\"column\" align=\"left\">\r\n            <article className={classes.jobinfo}>\r\n              <h2>Pay Run</h2>\r\n              <form onSubmit={handlePayrunSubmit}>\r\n                <div>\r\n                  <TextField\r\n                    label=\"Pay Frequency\"\r\n                    variant=\"filled\"\r\n                    required\r\n                    style={{ width: 250 }}\r\n                    name=\"payfreq\"\r\n                    value={input.payfreq}\r\n                    onChange={(e) => handleChange(e)}\r\n                    select\r\n                  >\r\n                    {/* <MenuItem value=\"Weekly\">Weekly</MenuItem> */}\r\n                    <MenuItem value=\"Monthly\">Monthly</MenuItem>\r\n                  </TextField>\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"From Date\"\r\n                    variant=\"filled\"\r\n                    name=\"fromdate\"\r\n                    type=\"date\"\r\n                    value={input.fromdate}\r\n                    required\r\n                    style={{ width: 250 }}\r\n                    onChange={(e) => handleChange(e)}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"To Date\"\r\n                    variant=\"filled\"\r\n                    type=\"date\"\r\n                    name=\"todate\"\r\n                    value={input.todate}\r\n                    required\r\n                    onChange={(e) => handleChange(e)}\r\n                    style={{ width: 250 }}\r\n                    onChange={handleChange}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"Payment Date\"\r\n                    variant=\"filled\"\r\n                    type=\"date\"\r\n                    name=\"paydate\"\r\n                    value={input.paydate}\r\n                    required\r\n                    style={{ width: 250 }}\r\n                    onChange={(e) => handleChange(e)}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                  >\r\n                    Submit <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  {alert && (\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      onClick={handleNext}\r\n                    >\r\n                      Next <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n                <div>{alert && <h3>New Payrun being added!</h3>}</div>\r\n                <div>\r\n                  {error && <h3>This Payrun period already existed!</h3>}\r\n                </div>\r\n              </form>\r\n            </article>\r\n          </Grid>\r\n          <Divider\r\n            orientation=\"vertical\"\r\n            flexItem\r\n            style={{ background: \"white\" }}\r\n          />\r\n          <Grid container item sm={8} align=\"right\">\r\n            <MaterialTable\r\n              columns={columns}\r\n              data={employees}\r\n              title=\"Payrun History\"\r\n              options={{\r\n                filtering: false,\r\n                search: false,\r\n                toolbar: false,\r\n                selection: true,\r\n                headerStyle: {\r\n                  backgroundColor: \"orange\",\r\n                  color: \"primary\",\r\n                },\r\n                showTitle: false,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"95vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default Payrun;\r\n"]},"metadata":{},"sourceType":"module"}