{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\PayslipTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\nimport { payrunState, payrunIdState } from \"./data/atomdata\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Period\",\n  field: \"period\"\n}, {\n  title: \"Payrun Batch\",\n  field: \"payrun\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  }\n}, {\n  title: \"Pay Date\",\n  field: \"pay_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  }\n}, {\n  title: \"Status\",\n  field: \"status\"\n}];\nexport default function PayslipTable() {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const [input, setInput] = useRecoilState(payrunState);\n  const [isLoadInput, setIsLoadInput] = useState(false);\n  const [payrunId, setPayrunId] = useRecoilState(payrunIdState);\n  const {\n    payrun,\n    getPayrun,\n    payrun_loading,\n    payrun_error,\n    getSinglePayslip,\n    setEditPayslipID,\n    setIsPayslipEditingOn,\n    single_payslip\n  } = usePayslipsContext();\n  useEffect(() => {\n    getPayrun();\n  }, []);\n  useEffect(() => {\n    if (single_payslip) {\n      console.log(\"single_payslip\", single_payslip);\n    }\n  }, [single_payslip]);\n\n  const update_Payslip = async data => {\n    console.log(\"data\", data);\n    const {\n      id,\n      payrun\n    } = data;\n    setPayrunId(payrun); //save to recoil\n\n    setEditPayslipID(id);\n    setIsPayslipEditingOn();\n    getSinglePayslip(id);\n    setInput({ ...input,\n      payfreq: data.payfreq,\n      fromdate: data.fromdate,\n      todate: data.todate,\n      paydate: data.paydate,\n      period: data.period,\n      payrun: data.payrun,\n      totalwages: 0,\n      totaltap: 0,\n      totalscp: 0,\n      totalallows: 0,\n      totaldeducts: 0,\n      totalpayroll: 0\n    });\n    console.log(\"payrun\", payrunId, input);\n    history.push(\"/payrunbatch\");\n  }; // const add_Payslip = async (data) => {\n  //   const { id } = data;\n  //   resetSinglePayslip();\n  //   setEditPayslipID(\"\");\n  //   setIsPayslipEditingOff();\n  //   history.push(\"/singlepayslip\");\n  // };\n  // const delete_Payslip = (data) => {\n  //   const { id } = data;\n  //   setEditPayslipID(id);\n  //   deletePayslip(id);\n  //   loadPayslips();\n  // };\n\n\n  if (payrun_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading.....Payslips\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (payrun_error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Internet connection problem!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: payrun,\n        title: \"Payroll\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 37\n          }, this),\n          Build: props => /*#__PURE__*/_jsxDEV(BuildOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 31\n          }, this)\n        },\n        actions: [{\n          icon: \"edit\",\n          tooltip: \"Edit Record\",\n          onClick: (event, rowData) => {\n            update_Payslip(rowData);\n          }\n        } // {\n        //   icon: \"delete\",\n        //   tooltip: \"Delete Record\",\n        //   onClick: (event, rowData) => {\n        //     delete_Payslip(rowData);\n        //   },\n        // },\n        // {\n        //   icon: \"add\",\n        //   tooltip: \"Add Record\",\n        //   isFreeAction: true,\n        //   onClick: (event, rowData) => {\n        //     add_Payslip(rowData);\n        //   },\n        // },\n        ],\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"#FFF\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                paddingLeft: 22\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/payslip\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n                  fontSize: \"large\",\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PayslipTable, \"nbnfE+miNJipYG22bB2Gcxs9zh4=\", false, function () {\n  return [useHistory, useStyles, useRecoilState, useRecoilState, usePayslipsContext];\n});\n\n_c = PayslipTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"PayslipTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/PayslipTable.js"],"names":["React","useState","useEffect","MaterialTable","MTableToolbar","makeStyles","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","ArrowBackIcon","BuildOutlinedIcon","useHistory","Link","useSetRecoilState","useRecoilState","payrunState","payrunIdState","usePayslipsContext","columns","title","field","type","dateSetting","locale","PayslipTable","history","classes","useStyles","input","setInput","isLoadInput","setIsLoadInput","payrunId","setPayrunId","payrun","getPayrun","payrun_loading","payrun_error","getSinglePayslip","setEditPayslipID","setIsPayslipEditingOn","single_payslip","console","log","update_Payslip","data","id","payfreq","fromdate","todate","paydate","period","totalwages","totaltap","totalscp","totalallows","totaldeducts","totalpayroll","push","root","maxWidth","paddingTop","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","Build","icon","tooltip","onClick","event","rowData","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","paddingLeft","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport { payrunState, payrunIdState } from \"./data/atomdata\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n\r\nconst columns = [\r\n  { title: \"Period\", field: \"period\" },\r\n  {\r\n    title: \"Payrun Batch\",\r\n    field: \"payrun\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n  {\r\n    title: \"Pay Date\",\r\n    field: \"pay_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n  },\r\n\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function PayslipTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [input, setInput] = useRecoilState(payrunState);\r\n  const [isLoadInput, setIsLoadInput] = useState(false);\r\n  const [payrunId,setPayrunId] = useRecoilState(payrunIdState);\r\n  const {\r\n    payrun,\r\n    getPayrun,\r\n    payrun_loading,\r\n    payrun_error,\r\n    getSinglePayslip,\r\n    setEditPayslipID,\r\n    setIsPayslipEditingOn,\r\n    single_payslip,\r\n  } = usePayslipsContext();\r\n\r\n  useEffect(() => {\r\n    getPayrun();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (single_payslip) {\r\n      console.log(\"single_payslip\",single_payslip)\r\n    }\r\n  },[single_payslip])\r\n\r\n  const update_Payslip = async (data) => {\r\n    console.log(\"data\", data);\r\n    const { id, payrun } = data;\r\n    setPayrunId(payrun); //save to recoil\r\n    setEditPayslipID(id);\r\n    setIsPayslipEditingOn();\r\n    getSinglePayslip(id);\r\n\r\n    setInput({\r\n      ...input,\r\n      payfreq: data.payfreq,\r\n      fromdate: data.fromdate,\r\n      todate: data.todate,\r\n      paydate: data.paydate,\r\n      period: data.period,\r\n      payrun: data.payrun,\r\n      totalwages: 0,\r\n      totaltap: 0,\r\n      totalscp: 0,\r\n      totalallows: 0,\r\n      totaldeducts: 0,\r\n      totalpayroll: 0,\r\n    });\r\n\r\n    console.log(\"payrun\", payrunId, input, );\r\n    history.push(\"/payrunbatch\");\r\n  };\r\n\r\n  // const add_Payslip = async (data) => {\r\n  //   const { id } = data;\r\n  //   resetSinglePayslip();\r\n  //   setEditPayslipID(\"\");\r\n  //   setIsPayslipEditingOff();\r\n  //   history.push(\"/singlepayslip\");\r\n  // };\r\n\r\n  // const delete_Payslip = (data) => {\r\n  //   const { id } = data;\r\n  //   setEditPayslipID(id);\r\n  //   deletePayslip(id);\r\n  //   loadPayslips();\r\n  // };\r\n\r\n  if (payrun_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.....Payslips</h2>\r\n      </div>\r\n    );\r\n  }\r\n  if (payrun_error) {\r\n    return (\r\n      <div>\r\n        <h2>Internet connection problem!</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payrun}\r\n          title=\"Payroll\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Payslip(rowData);\r\n              },\r\n            },\r\n            // {\r\n            //   icon: \"delete\",\r\n            //   tooltip: \"Delete Record\",\r\n            //   onClick: (event, rowData) => {\r\n            //     delete_Payslip(rowData);\r\n            //   },\r\n            // },\r\n            // {\r\n            //   icon: \"add\",\r\n            //   tooltip: \"Add Record\",\r\n            //   isFreeAction: true,\r\n            //   onClick: (event, rowData) => {\r\n            //     add_Payslip(rowData);\r\n            //   },\r\n            // },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ paddingLeft: 22 }}>\r\n                  {/* <h3>{`Batch: ${payslip_period}      End Month: ${payslip_endmonthdate}`}</h3> */}\r\n                </div>\r\n                {/* <div style={{ paddingLeft: 22 }}>\r\n                  <h3>{`End Month: ${payslip_endmonthdate}`}</h3>\r\n                </div> */}\r\n                <Link to=\"/payslip\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}