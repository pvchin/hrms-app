{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Example7.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport axios from \"axios\";\nimport { useAsync } from \"react-async\";\nimport { Paper, Grid, Divider, TextField } from \"@material-ui/core\";\nimport { employees_url } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst url = \"https://course-api.com/react-tabs-project\";\n\nconst loadEmp = async ({\n  employees_url\n}) => await fetch().then(res => res.ok ? res : Promise.reject(res)).then(res => res.json());\n\nconst PayForm = () => {\n  /*#__PURE__*/\n  _jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Name\",\n      variant: \"filled\",\n      type: \"name\",\n      required: true,\n      style: {\n        width: 350\n      },\n      value: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this);\n};\n\n_c = PayForm;\n\nconst Example = () => {\n  _s();\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const [empdata, setEmpdata] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [jobs, setJobs] = useState([]);\n  const [value, setValue] = useState(0);\n\n  const fetchjobs = async () => {\n    const response = await fetch(url);\n    const newJobs = await response.json();\n    setJobs(newJobs);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchjobs();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section loading\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n  const {\n    company,\n    dates,\n    duties,\n    title\n  } = jobs[value];\n  return /*#__PURE__*/_jsxDEV(\"paper\", {\n    className: fixedHeightPaper,\n    style: {\n      backgroundColor: \"black\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.section,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        direction: \"row\",\n        container: true,\n        spacing: 1,\n        style: {\n          border: \"1px solid white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          sm: 1,\n          direction: \"column\",\n          align: \"left\",\n          children: jobs.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setValue(index),\n              className: `classes.jobbtn` // ${index === value && \"activebtn\"} `}\n              ,\n              children: item.company\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          flexItem: true,\n          style: {\n            background: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          sm: 8,\n          children: /*#__PURE__*/_jsxDEV(\"article\", {\n            className: classes.jobinfo,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"jobdate\",\n              children: dates\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), duties.map((duty, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"jobdesc\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: duty\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Example, \"Iw8nFaJnqtnRSFkaOZWGYBEeCWU=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Example;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    padding: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"black\"\n  },\n  card: {\n    backgroundColor: \"black\"\n  },\n  section: {\n    width: \"70vw\",\n    margin: \"5rem auto\",\n    maxWidth: \"var(--max-width)\"\n  },\n  underline: {\n    width: \"5rem\",\n    height: \"0.25rem\",\n    marginBottom: \"1.25rem\",\n    background: \"var(--clr-primary-5)\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  title: {\n    marginbottom: \"4rem\",\n    textAlign: \"center\"\n  },\n  jobscenter: {\n    width: \"80vw\",\n    margin: \"0 auto\",\n    maxWidth: \"var(--max-width)\",\n    flexDirection: \"row\"\n  },\n  btncontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: \"4rem\",\n    flexWrap: \"wrap\"\n  },\n  jobbtn: {\n    background: \"transparent\",\n    borderColor: \"transparent\",\n    textTransform: \"capitalize\",\n    fontSize: \"1.25rem\",\n    letterSpacing: \"var(--spacing)\",\n    margin: \"0 0.5rem\",\n    transition: \"var(--transition)\",\n    cursor: \"pointer\",\n    padding: \"0.25rem 0\",\n    lineHeight: \"1\",\n    outlineColor: \"var(--clr-primary-10)\",\n    \"&:hover\": {\n      color: \"var(--clr-primary-5)\",\n      boxShadow: \"0 2px var(--clr-primary-5)\"\n    }\n  },\n  activebtn: {\n    color: \"var(--clr-primary-5)\",\n    boxShadow: \"0 2px var(--clr-primary-5)\"\n  },\n  jobinfo: {\n    fontWeight: \"400\"\n  }\n}));\nexport default Example;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PayForm\");\n$RefreshReg$(_c2, \"Example\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Example7.js"],"names":["React","useState","useEffect","makeStyles","clsx","axios","useAsync","Paper","Grid","Divider","TextField","employees_url","drawerWidth","url","loadEmp","fetch","then","res","ok","Promise","reject","json","PayForm","width","name","Example","classes","useStyles","fixedHeightPaper","paper","fixedHeight","empdata","setEmpdata","loading","setLoading","jobs","setJobs","value","setValue","fetchjobs","response","newJobs","company","dates","duties","title","backgroundColor","section","border","map","item","index","background","jobinfo","duty","theme","root","flexGrow","container","margin","padding","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","height","spacing","overflow","flexDirection","color","bcakgroundColor","card","maxWidth","underline","marginBottom","marginLeft","marginRight","marginbottom","textAlign","jobscenter","btncontainer","flexWrap","jobbtn","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport { useAsync } from \"react-async\";\r\nimport { Paper, Grid, Divider, TextField } from \"@material-ui/core\";\r\nimport { employees_url } from \"../utils/constants\";\r\n\r\nconst drawerWidth = 240;\r\nconst url = \"https://course-api.com/react-tabs-project\";\r\n\r\nconst loadEmp = async ({employees_url}) =>\r\n  await fetch()\r\n    .then((res) => (res.ok ? res : Promise.reject(res)))\r\n    .then((res) => res.json());\r\n\r\nconst PayForm = () => {\r\n  <form>\r\n    <TextField\r\n      label=\"Name\"\r\n      variant=\"filled\"\r\n      type=\"name\"\r\n      required\r\n      style={{ width: 350 }}\r\n      value={name}\r\n    />\r\n  </form>;\r\n};\r\n\r\nconst Example = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [empdata, setEmpdata] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [value, setValue] = useState(0);\r\n\r\n  const fetchjobs = async () => {\r\n    const response = await fetch(url);\r\n    const newJobs = await response.json();\r\n    setJobs(newJobs);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchjobs();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <section className=\"section loading\">\r\n        <h1>loading...</h1>\r\n      </section>\r\n    );\r\n  }\r\n  const { company, dates, duties, title } = jobs[value];\r\n\r\n  return (\r\n    <paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n      <section className={classes.section}>\r\n        <Grid\r\n          direction=\"row\"\r\n          container\r\n          spacing={1}\r\n          style={{ border: \"1px solid white\" }}\r\n        >\r\n          <Grid container item sm={1} direction=\"column\" align=\"left\">\r\n            {jobs.map((item, index) => {\r\n              return (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => setValue(index)}\r\n                  className={`classes.jobbtn`}\r\n                  // ${index === value && \"activebtn\"} `}\r\n                >\r\n                  {item.company}\r\n                </button>\r\n              );\r\n            })}\r\n          </Grid>\r\n          <Divider\r\n            orientation=\"vertical\"\r\n            flexItem\r\n            style={{ background: \"white\" }}\r\n          />\r\n          <Grid container item sm={8}>\r\n            <article className={classes.jobinfo}>\r\n              <h3>{title}</h3>\r\n              <h4>{company}</h4>\r\n              <p className=\"jobdate\">{dates}</p>\r\n              {duties.map((duty, index) => {\r\n                return (\r\n                  <div key={index} className=\"jobdesc\">\r\n                    <p>{duty}</p>\r\n                  </div>\r\n                );\r\n              })}\r\n            </article>\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n    </paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"70vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n}));\r\n\r\nexport default Example;\r\n"]},"metadata":{},"sourceType":"module"}