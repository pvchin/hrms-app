{"ast":null,"code":"import _regeneratorRuntime from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _toConsumableArray from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{useState,useEffect}from\"react\";import MaterialTable from\"material-table\";import{makeStyles}from\"@material-ui/core/styles\";import AddIcon from\"@material-ui/icons/Add\";import EditIcon from\"@material-ui/icons/Edit\";import DeleteIcon from\"@material-ui/icons/Delete\";import CheckIcon from\"@material-ui/icons/Check\";import SearchIcon from\"@material-ui/icons/Search\";import{useHistory,Link}from\"react-router-dom\";import{usePayslipsContext}from\"../context/payslips_context\";import{jsx as _jsx}from\"react/jsx-runtime\";var columns=[{title:\"Name\",field:\"description\"},{title:\"Amount\",field:\"amount\",type:\"numeric\"}];export default function Payslip_Earnings(){var history=useHistory();var classes=useStyles();var _usePayslipsContext=usePayslipsContext(),payslipearnings=_usePayslipsContext.payslipearnings,payslip_earning_amount=_usePayslipsContext.payslip_earning_amount,setPayslipEarningAmount=_usePayslipsContext.setPayslipEarningAmount,addPayslipEarning=_usePayslipsContext.addPayslipEarning,payslipearnings_loading=_usePayslipsContext.payslipearnings_loading,updatePayslipEarning=_usePayslipsContext.updatePayslipEarning,deletePayslipEarning=_usePayslipsContext.deletePayslipEarning,updatePayslip=_usePayslipsContext.updatePayslip,editPayslipID=_usePayslipsContext.editPayslipID,single_payslip=_usePayslipsContext.single_payslip,payslip_period=_usePayslipsContext.payslip_period,getSingleBatchPayslipEarnings=_usePayslipsContext.getSingleBatchPayslipEarnings;var name=payslipearnings.name,amount=payslipearnings.amount;useEffect(function(){getSingleBatchPayslipEarnings(single_payslip.empid,payslip_period);calc_Earning();},[]);var calc_Earning=function calc_Earning(){var data=_toConsumableArray(payslipearnings);var total=data.reduce(function(total,amount){return total+setPayslipEarningAmount;},0);console.log(total);//setPayslipEarningAmount();\n};var update_Payslip=function update_Payslip(){var rec_id=single_payslip.rec_id,id=single_payslip.id,total_earnings=single_payslip.total_earnings,paydata=_objectWithoutProperties(single_payslip,[\"rec_id\",\"id\",\"total_earnings\"]);updatePayslip(_objectSpread({id:editPayslipID,total_earnings:payslip_earning_amount},paydata));};var update_PayslipEarning=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var id,rec_id,empid,fields;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:id=data.id,rec_id=data.rec_id,empid=data.empid,fields=_objectWithoutProperties(data,[\"id\",\"rec_id\",\"empid\"]);updatePayslipEarning(_objectSpread({id:data.id,empid:empid},fields));update_Payslip();getSingleBatchPayslipEarnings(single_payslip.empid,payslip_period);case 4:case\"end\":return _context.stop();}}},_callee);}));return function update_PayslipEarning(_x){return _ref.apply(this,arguments);};}();var add_PayslipEarning=function add_PayslipEarning(data){console.log(\"add\",data);var description=data.description,amount=data.amount;addPayslipEarning({description:description,amount:amount,name:single_payslip.name,empid:single_payslip.empid,period:single_payslip.period});getSingleBatchPayslipEarnings(single_payslip.empid,payslip_period);};var delete_PayslipEarning=function delete_PayslipEarning(data){var id=data.id;deletePayslipEarning(id);getSingleBatchPayslipEarnings(single_payslip.empid,payslip_period);};if(payslipearnings_loading){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Loading... Incomes.\"})});}return/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:\"100%\",paddingTop:\"5px\"},children:/*#__PURE__*/_jsx(MaterialTable,{columns:columns,data:payslipearnings,title:\"Income\",editable:{onRowAdd:function onRowAdd(newData){return new Promise(function(resolve,reject){setTimeout(function(){// setData([...data, newData]);\nadd_PayslipEarning(newData);resolve();},1000);});},onRowUpdate:function onRowUpdate(newData,oldData){return new Promise(function(resolve,reject){setTimeout(function(){// const dataUpdate = [...payslipearnings];\n// const index = oldData.tableData.id;\n// dataUpdate[index] = newData;\n// setData([...dataUpdate]);\nupdate_PayslipEarning(newData);// calc_Earning(newData);\nresolve();},1000);});},onRowDelete:function onRowDelete(oldData){return new Promise(function(resolve,reject){setTimeout(function(){// const dataDelete = [...data];\n// const index = oldData.tableData.id;\n// dataDelete.splice(index, 1);\n// setData([...dataDelete]);\ndelete_PayslipEarning(oldData);resolve();},1000);});}}})})});}var useStyles=makeStyles(function(theme){return{root:{padding:0}};});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Payslip_Earnings.js"],"names":["React","useState","useEffect","MaterialTable","makeStyles","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","useHistory","Link","usePayslipsContext","columns","title","field","type","Payslip_Earnings","history","classes","useStyles","payslipearnings","payslip_earning_amount","setPayslipEarningAmount","addPayslipEarning","payslipearnings_loading","updatePayslipEarning","deletePayslipEarning","updatePayslip","editPayslipID","single_payslip","payslip_period","getSingleBatchPayslipEarnings","name","amount","empid","calc_Earning","data","total","reduce","console","log","update_Payslip","rec_id","id","total_earnings","paydata","update_PayslipEarning","fields","add_PayslipEarning","description","period","delete_PayslipEarning","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","onRowDelete","theme","padding"],"mappings":"gxBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,MAAOC,CAAAA,aAAP,KAA0B,gBAA1B,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,OAASC,UAAT,CAAqBC,IAArB,KAAiC,kBAAjC,CAEA,OAASC,kBAAT,KAAmC,6BAAnC,C,2CAEA,GAAMC,CAAAA,OAAO,CAAG,CACd,CACEC,KAAK,CAAE,MADT,CAEEC,KAAK,CAAE,aAFT,CADc,CAKd,CAAED,KAAK,CAAE,QAAT,CAAmBC,KAAK,CAAE,QAA1B,CAAoCC,IAAI,CAAE,SAA1C,CALc,CAAhB,CAQA,cAAe,SAASC,CAAAA,gBAAT,EAA4B,CACzC,GAAIC,CAAAA,OAAO,CAAGR,UAAU,EAAxB,CACA,GAAMS,CAAAA,OAAO,CAAGC,SAAS,EAAzB,CAFyC,wBAgBrCR,kBAAkB,EAhBmB,CAIvCS,eAJuC,qBAIvCA,eAJuC,CAKvCC,sBALuC,qBAKvCA,sBALuC,CAMvCC,uBANuC,qBAMvCA,uBANuC,CAOvCC,iBAPuC,qBAOvCA,iBAPuC,CAQvCC,uBARuC,qBAQvCA,uBARuC,CASvCC,oBATuC,qBASvCA,oBATuC,CAUvCC,oBAVuC,qBAUvCA,oBAVuC,CAWvCC,aAXuC,qBAWvCA,aAXuC,CAYvCC,aAZuC,qBAYvCA,aAZuC,CAavCC,cAbuC,qBAavCA,cAbuC,CAcvCC,cAduC,qBAcvCA,cAduC,CAevCC,6BAfuC,qBAevCA,6BAfuC,IAiBjCC,CAAAA,IAjBiC,CAiBhBZ,eAjBgB,CAiBjCY,IAjBiC,CAiB3BC,MAjB2B,CAiBhBb,eAjBgB,CAiB3Ba,MAjB2B,CAmBzChC,SAAS,CAAC,UAAM,CACd8B,6BAA6B,CAACF,cAAc,CAACK,KAAhB,CAAuBJ,cAAvB,CAA7B,CACAK,YAAY,GACb,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAMC,CAAAA,IAAI,oBAAOhB,eAAP,CAAV,CACA,GAAMiB,CAAAA,KAAK,CAAGD,IAAI,CAACE,MAAL,CACZ,SAACD,KAAD,CAAQJ,MAAR,QAAmBI,CAAAA,KAAK,CAAGf,uBAA3B,EADY,CAEZ,CAFY,CAAd,CAIAiB,OAAO,CAACC,GAAR,CAAYH,KAAZ,EACA;AACD,CARD,CAUA,GAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,IACnBC,CAAAA,MADmB,CACwBb,cADxB,CACnBa,MADmB,CACXC,EADW,CACwBd,cADxB,CACXc,EADW,CACPC,cADO,CACwBf,cADxB,CACPe,cADO,CACYC,OADZ,0BACwBhB,cADxB,mCAE3BF,aAAa,gBACXgB,EAAE,CAAEf,aADO,CAEXgB,cAAc,CAAEvB,sBAFL,EAGRwB,OAHQ,EAAb,CAKD,CAPD,CASA,GAAMC,CAAAA,qBAAqB,0FAAG,iBAAOV,IAAP,6IACpBO,EADoB,CACaP,IADb,CACpBO,EADoB,CAChBD,MADgB,CACaN,IADb,CAChBM,MADgB,CACRR,KADQ,CACaE,IADb,CACRF,KADQ,CACEa,MADF,0BACaX,IADb,0BAG5BX,oBAAoB,gBAAGkB,EAAE,CAAEP,IAAI,CAACO,EAAZ,CAAgBT,KAAK,CAAEA,KAAvB,EAAiCa,MAAjC,EAApB,CACAN,cAAc,GACdV,6BAA6B,CAACF,cAAc,CAACK,KAAhB,CAAuBJ,cAAvB,CAA7B,CAL4B,sDAAH,kBAArBgB,CAAAA,qBAAqB,4CAA3B,CAQA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACZ,IAAD,CAAU,CACnCG,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAmBJ,IAAnB,EADmC,GAE3Ba,CAAAA,WAF2B,CAEHb,IAFG,CAE3Ba,WAF2B,CAEdhB,MAFc,CAEHG,IAFG,CAEdH,MAFc,CAGnCV,iBAAiB,CAAC,CAChB0B,WAAW,CAAEA,WADG,CAEhBhB,MAAM,CAAEA,MAFQ,CAGhBD,IAAI,CAAEH,cAAc,CAACG,IAHL,CAIhBE,KAAK,CAAEL,cAAc,CAACK,KAJN,CAKhBgB,MAAM,CAAErB,cAAc,CAACqB,MALP,CAAD,CAAjB,CAOAnB,6BAA6B,CAACF,cAAc,CAACK,KAAhB,CAAuBJ,cAAvB,CAA7B,CACD,CAXD,CAaA,GAAMqB,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACf,IAAD,CAAU,IAC9BO,CAAAA,EAD8B,CACvBP,IADuB,CAC9BO,EAD8B,CAEtCjB,oBAAoB,CAACiB,EAAD,CAApB,CACAZ,6BAA6B,CAACF,cAAc,CAACK,KAAhB,CAAuBJ,cAAvB,CAA7B,CACD,CAJD,CAMA,GAAIN,uBAAJ,CAA6B,CAC3B,mBACE,kCACE,2CADF,EADF,CAKD,CAED,mBACE,YAAK,SAAS,CAAEN,OAAO,CAACkC,IAAxB,uBAGE,YAAK,KAAK,CAAE,CAAEC,QAAQ,CAAE,MAAZ,CAAoBC,UAAU,CAAE,KAAhC,CAAZ,uBACE,KAAC,aAAD,EACE,OAAO,CAAE1C,OADX,CAEE,IAAI,CAAEQ,eAFR,CAGE,KAAK,CAAC,QAHR,CAIE,QAAQ,CAAE,CACRmC,QAAQ,CAAE,kBAACC,OAAD,QACR,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CAC/BC,UAAU,CAAC,UAAM,CACf;AACAZ,kBAAkB,CAACQ,OAAD,CAAlB,CAEAE,OAAO,GACR,CALS,CAKP,IALO,CAAV,CAMD,CAPD,CADQ,EADF,CAURG,WAAW,CAAE,qBAACL,OAAD,CAAUM,OAAV,QACX,IAAIL,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CAC/BC,UAAU,CAAC,UAAM,CACf;AACA;AACA;AACA;AACAd,qBAAqB,CAACU,OAAD,CAArB,CACA;AAEAE,OAAO,GACR,CATS,CASP,IATO,CAAV,CAUD,CAXD,CADW,EAVL,CAuBRK,WAAW,CAAE,qBAACD,OAAD,QACX,IAAIL,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CAC/BC,UAAU,CAAC,UAAM,CACf;AACA;AACA;AACA;AACAT,qBAAqB,CAACW,OAAD,CAArB,CAEAJ,OAAO,GACR,CARS,CAQP,IARO,CAAV,CASD,CAVD,CADW,EAvBL,CAJZ,EADF,EAHF,EADF,CAiDD,CAED,GAAMvC,CAAAA,SAAS,CAAGhB,UAAU,CAAC,SAAC6D,KAAD,QAAY,CACvCZ,IAAI,CAAE,CACJa,OAAO,CAAE,CADL,CADiC,CAAZ,EAAD,CAA5B","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"description\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"numeric\" },\r\n];\r\n\r\nexport default function Payslip_Earnings() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const {\r\n    payslipearnings,\r\n    payslip_earning_amount,\r\n    setPayslipEarningAmount,\r\n    addPayslipEarning,\r\n    payslipearnings_loading,\r\n    updatePayslipEarning,\r\n    deletePayslipEarning,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipEarnings,\r\n  } = usePayslipsContext();\r\n  const { name, amount } = payslipearnings;\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n    calc_Earning();\r\n  }, []);\r\n\r\n  const calc_Earning = () => {\r\n    const data = [...payslipearnings];\r\n    const total = data.reduce(\r\n      (total, amount) => total + setPayslipEarningAmount,\r\n      0\r\n    );\r\n    console.log(total);\r\n    //setPayslipEarningAmount();\r\n  };\r\n\r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_earnings, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_earnings: payslip_earning_amount,\r\n      ...paydata,\r\n    });\r\n  };\r\n\r\n  const update_PayslipEarning = async (data) => {\r\n    const { id, rec_id, empid, ...fields } = data;\r\n\r\n    updatePayslipEarning({ id: data.id, empid: empid, ...fields });\r\n    update_Payslip();\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const add_PayslipEarning = (data) => {\r\n    console.log(\"add\", data);\r\n    const { description, amount } = data;\r\n    addPayslipEarning({\r\n      description: description,\r\n      amount: amount,\r\n      name: single_payslip.name,\r\n      empid: single_payslip.empid,\r\n      period: single_payslip.period,\r\n    });\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const delete_PayslipEarning = (data) => {\r\n    const { id } = data;\r\n    deletePayslipEarning(id);\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  if (payslipearnings_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Incomes.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipearnings}\r\n          title=\"Income\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // setData([...data, newData]);\r\n                  add_PayslipEarning(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // const dataUpdate = [...payslipearnings];\r\n                  // const index = oldData.tableData.id;\r\n                  // dataUpdate[index] = newData;\r\n                  // setData([...dataUpdate]);\r\n                  update_PayslipEarning(newData);\r\n                  // calc_Earning(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // const dataDelete = [...data];\r\n                  // const index = oldData.tableData.id;\r\n                  // dataDelete.splice(index, 1);\r\n                  // setData([...dataDelete]);\r\n                  delete_PayslipEarning(oldData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}