{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Example.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useTable } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Example() {\n  _s();\n\n  const data = React.useMemo(() => [{\n    col1: \"Minsk\",\n    col2: \"27\",\n    col3: \"rain\"\n  }, {\n    col1: \"Vilnius\",\n    col2: \"30\",\n    col3: \"rain\"\n  }, {\n    col1: \"London\",\n    col2: \"23\",\n    col3: \"rain\"\n  }], []);\n  const columns = React.useMemo(() => [{\n    Header: \"City\",\n    accessor: \"col1\" // accessor is the \"key\" in the data\n\n  }, {\n    Header: \"Temperature\",\n    accessor: \"col2\"\n  }, {\n    Header: \"Weather Forecast\",\n    accessor: \"col3\" // accessor is the \"key\" in the data\n\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      style: {\n        border: \"solid 1px black\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            style: {\n              borderBottom: \"solid 3px red\",\n              color: \"black\"\n            },\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                style: {\n                  padding: \"10px\",\n                  border: \"solid 1px gray\"\n                },\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Example, \"2M+cEGJjZRLIqxt38XQe/AMxJJk=\", false, function () {\n  return [useTable];\n});\n\n_c = Example;\nexport default Example;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Example.js"],"names":["React","useState","useEffect","useTable","Example","data","useMemo","col1","col2","col3","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","border","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","color","render","row","getRowProps","cells","cell","getCellProps","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAMC,IAAI,GAAGL,KAAK,CAACM,OAAN,CACX,MAAM,CACJ;AACEC,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EAAE,IAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADI,EAMJ;AACEF,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,IAAI,EAAE,IAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GANI,EAWJ;AACEF,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,IAAI,EAAE,IAFR;AAGEC,IAAAA,IAAI,EAAE;AAHR,GAXI,CADK,EAkBX,EAlBW,CAAb;AAqBA,QAAMC,OAAO,GAAGV,KAAK,CAACM,OAAN,CACd,MAAM,CACJ;AACEK,IAAAA,MAAM,EAAE,MADV;AAEEC,IAAAA,QAAQ,EAAE,MAFZ,CAEoB;;AAFpB,GADI,EAKJ;AACED,IAAAA,MAAM,EAAE,aADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GALI,EASJ;AACED,IAAAA,MAAM,EAAE,kBADV;AAEEC,IAAAA,QAAQ,EAAE,MAFZ,CAEoB;;AAFpB,GATI,CADQ,EAed,EAfc,CAAhB;AAkBA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA,YAApC;AAAkDC,IAAAA,IAAlD;AAAwDC,IAAAA;AAAxD,MACJd,QAAQ,CAAC;AAAEO,IAAAA,OAAF;AAAWL,IAAAA;AAAX,GAAD,CADV;AAGA,sBACE;AAAA,2BACE,sBAAWQ,aAAa,EAAxB;AAA4B,MAAA,KAAK,EAAE;AAAEK,QAAAA,MAAM,EAAE;AAAV,OAAnC;AAAA,8BACE;AAAA,kBACGH,YAAY,CAACI,GAAb,CAAkBC,WAAD,iBAChB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,oBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACvB,mBACMA,MAAM,CAACC,cAAP,EADN;AAEE,YAAA,KAAK,EAAE;AACLC,cAAAA,YAAY,EAAE,eADT;AAELC,cAAAA,KAAK,EAAE;AAFF,aAFT;AAAA,sBAOGH,MAAM,CAACI,MAAP,CAAc,QAAd;AAPH;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAkBE,sBAAWb,iBAAiB,EAA5B;AAAA,kBACGE,IAAI,CAACG,GAAL,CAAUS,GAAD,IAAS;AACjBX,UAAAA,UAAU,CAACW,GAAD,CAAV;AACA,8BACE,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,sBACGD,GAAG,CAACE,KAAJ,CAAUX,GAAV,CAAeY,IAAD,IAAU;AACvB,kCACE,mBACMA,IAAI,CAACC,YAAL,EADN;AAEE,gBAAA,KAAK,EAAE;AACLC,kBAAAA,OAAO,EAAE,MADJ;AAELf,kBAAAA,MAAM,EAAE;AAFH,iBAFT;AAAA,0BAOGa,IAAI,CAACJ,MAAL,CAAY,MAAZ;AAPH;AAAA;AAAA;AAAA;AAAA,sBADF;AAWD,aAZA;AADH;AAAA;AAAA;AAAA;AAAA,kBADF;AAiBD,SAnBA;AADH;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD;;GAxFQvB,O;UAyCLD,Q;;;KAzCKC,O;AA0FT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useTable } from \"react-table\";\r\n\r\nfunction Example() {\r\n  const data = React.useMemo(\r\n    () => [\r\n      {\r\n        col1: \"Minsk\",\r\n        col2: \"27\",\r\n        col3: \"rain\",\r\n      },\r\n      {\r\n        col1: \"Vilnius\",\r\n        col2: \"30\",\r\n        col3: \"rain\",\r\n      },\r\n      {\r\n        col1: \"London\",\r\n        col2: \"23\",\r\n        col3: \"rain\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"City\",\r\n        accessor: \"col1\", // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"Temperature\",\r\n        accessor: \"col2\",\r\n      },\r\n      {\r\n        Header: \"Weather Forecast\",\r\n        accessor: \"col3\", // accessor is the \"key\" in the data\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable({ columns, data });\r\n\r\n  return (\r\n    <div>\r\n      <table {...getTableProps()} style={{ border: \"solid 1px black\" }}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th\r\n                  {...column.getHeaderProps()}\r\n                  style={{\r\n                    borderBottom: \"solid 3px red\",\r\n                    color: \"black\",\r\n                  }}\r\n                >\r\n                  {column.render(\"Header\")}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td\r\n                      {...cell.getCellProps()}\r\n                      style={{\r\n                        padding: \"10px\",\r\n                        border: \"solid 1px gray\",\r\n                      }}\r\n                    >\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Example;\r\n"]},"metadata":{},"sourceType":"module"}