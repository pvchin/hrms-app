{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Payslip_Deductions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Name\",\n  field: \"description\"\n}, {\n  title: \"Amount\",\n  field: \"amount\",\n  type: \"numeric\"\n}];\nexport default function Payslip_Deductions() {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const {\n    payslipdeductions,\n    payslip_deduction_amount,\n    setPayslipDeductionAmount,\n    loadPayslipDeductions,\n    addPayslipDeduction,\n    payslipdeductions_loading,\n    updatePayslipDeduction,\n    deletePayslipDeduction,\n    updatePayslip,\n    editPayslipID,\n    single_payslip,\n    payslip_period,\n    getSingleBatchPayslipDeductions\n  } = usePayslipsContext();\n  const {\n    name,\n    amount\n  } = payslipdeductions;\n\n  const calc_Deduction = data => {\n    const sum = data.reduce((a, v) => a = a + v.amount, 0);\n    setPayslipDeductionAmount(sum);\n  };\n\n  useEffect(() => {\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\n  }, []);\n\n  const update_Payslip = () => {\n    const {\n      rec_id,\n      id,\n      total_deductions,\n      ...paydata\n    } = single_payslip;\n    updatePayslip({\n      id: editPayslipID,\n      total_deductions: payslip_deduction_amount,\n      ...paydata\n    });\n  };\n\n  const update_PayslipDeduction = async data => {\n    const {\n      id,\n      rec_id,\n      empid,\n      ...fields\n    } = data;\n    console.log(fields);\n    updatePayslipDeduction({\n      id: data.id,\n      empid: empid,\n      ...fields\n    });\n    update_Payslip();\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\n  };\n\n  const add_PayslipDeduction = data => {\n    const {\n      description,\n      amount\n    } = data;\n    addPayslipDeduction({\n      description: description,\n      amount: amount,\n      name: single_payslip.name,\n      empid: single_payslip.empid,\n      period: single_payslip.period\n    });\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\n  };\n\n  const delete_PayslipDeduction = data => {\n    const {\n      id\n    } = data;\n    deletePayslipDeduction(id);\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\n  };\n\n  if (payslipdeductions_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading... Expenses.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: payslipdeductions,\n        title: \"Expense\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              // setData([...data, newData]);\n              add_PayslipDeduction(newData);\n              calc_Deduction([...payslipdeductions, newData]);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...payslipdeductions];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData; //setData([...dataUpdate]);\n\n              update_PayslipDeduction(newData);\n              calc_Deduction(dataUpdate);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...payslipdeductions];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1); // setData([...dataDelete]);\n\n              delete_PayslipDeduction(oldData);\n              calc_Deduction(dataDelete);\n              resolve();\n            }, 1000);\n          })\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Payslip_Deductions, \"0Ou3GNL4MNnLoG7o6JYzVsZFtt0=\", false, function () {\n  return [useHistory, useStyles, usePayslipsContext];\n});\n\n_c = Payslip_Deductions;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Payslip_Deductions\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Payslip_Deductions.js"],"names":["React","useState","useEffect","MaterialTable","makeStyles","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","useHistory","Link","usePayslipsContext","columns","title","field","type","Payslip_Deductions","history","classes","useStyles","payslipdeductions","payslip_deduction_amount","setPayslipDeductionAmount","loadPayslipDeductions","addPayslipDeduction","payslipdeductions_loading","updatePayslipDeduction","deletePayslipDeduction","updatePayslip","editPayslipID","single_payslip","payslip_period","getSingleBatchPayslipDeductions","name","amount","calc_Deduction","data","sum","reduce","a","v","empid","update_Payslip","rec_id","id","total_deductions","paydata","update_PayslipDeduction","fields","console","log","add_PayslipDeduction","description","period","delete_PayslipDeduction","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","onRowDelete","dataDelete","splice","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"description\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"numeric\" },\r\n];\r\n\r\nexport default function Payslip_Deductions() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    payslipdeductions,\r\n    payslip_deduction_amount,\r\n    setPayslipDeductionAmount,\r\n    loadPayslipDeductions,\r\n    addPayslipDeduction,\r\n    payslipdeductions_loading,\r\n    updatePayslipDeduction,\r\n    deletePayslipDeduction,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipDeductions,\r\n  } = usePayslipsContext();\r\n  const { name, amount } = payslipdeductions;\r\n\r\n  const calc_Deduction = (data) => {\r\n    const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n    setPayslipDeductionAmount(sum);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  }, []);\r\n\r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_deductions, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_deductions: payslip_deduction_amount,\r\n      ...paydata,\r\n    });\r\n  };\r\n\r\n  const update_PayslipDeduction = async (data) => {\r\n    const { id, rec_id, empid, ...fields } = data;\r\n\r\n    console.log(fields);\r\n    updatePayslipDeduction({ id: data.id, empid: empid, ...fields });\r\n    update_Payslip();\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const add_PayslipDeduction = (data) => {\r\n    const { description, amount } = data;\r\n    addPayslipDeduction({\r\n      description: description,\r\n      amount: amount,\r\n      name: single_payslip.name,\r\n      empid: single_payslip.empid,\r\n      period: single_payslip.period,\r\n    });\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const delete_PayslipDeduction = (data) => {\r\n    const { id } = data;\r\n    deletePayslipDeduction(id);\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  if (payslipdeductions_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Expenses.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipdeductions}\r\n          title=\"Expense\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // setData([...data, newData]);\r\n                  add_PayslipDeduction(newData);\r\n                  calc_Deduction([...payslipdeductions, newData]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...payslipdeductions];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  //setData([...dataUpdate]);\r\n                  update_PayslipDeduction(newData);\r\n                  calc_Deduction(dataUpdate);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...payslipdeductions];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  // setData([...dataDelete]);\r\n                  delete_PayslipDeduction(oldData);\r\n                  calc_Deduction(dataDelete);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}