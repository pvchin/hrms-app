{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\PayslipTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\"\n}, {\n  title: \"Period\",\n  field: \"period\"\n}, {\n  title: \"Date\",\n  field: \"date\",\n  type: \"date\"\n}, {\n  title: \"Nett Pay\",\n  field: \"nett_pay\",\n  type: \"numeric\"\n}, {\n  title: \"Bank Name\",\n  field: \"bank_name\"\n}, {\n  title: \"Bank AC No\",\n  field: \"bank_accno\"\n}, {\n  title: \"Status\",\n  field: \"status\"\n}];\nexport default function AllEmployeesTable() {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const {\n    payslips,\n    addPayslip,\n    payslips_loading,\n    updatePayslip,\n    deletePayslip,\n    loadPayslips,\n    getSinglePayslip,\n    getSingleBatchPayslip,\n    setEditPayslipID,\n    setIsPayslipEditingOn,\n    setIsPayslipEditingOff,\n    resetSinglePayslip,\n    payslip_period,\n    singlebatchpayslip,\n    singlebatch_payslip_loading,\n    singlebatch_payslip_error\n  } = usePayslipsContext();\n  const {\n    loadEmployees,\n    employees\n  } = useEmployeesContext();\n  useEffect(() => {\n    getSingleBatchPayslip(payslip_period);\n    console.log(singlebatchpayslip);\n  }, []);\n\n  const update_Payslip = async data => {\n    const {\n      id\n    } = data;\n    setEditPayslipID(id);\n    setIsPayslipEditingOn();\n    getSinglePayslip(id);\n    history.push(\"/singlepayslip\");\n  };\n\n  const add_Payslip = async data => {\n    const {\n      id\n    } = data;\n    resetSinglePayslip();\n    setEditPayslipID(\"\");\n    setIsPayslipEditingOff();\n    history.push(\"/singlepayslip\");\n  };\n\n  const delete_Payslip = data => {\n    const {\n      id\n    } = data;\n    setEditPayslipID(id);\n    deletePayslip(id);\n    loadPayslips();\n  };\n\n  const build_Payslip = () => {\n    console.log(\"build\");\n    loadEmployees();\n    loadPayslips();\n    const paydata = payslips.map(e => e.name);\n    console.log(paydata.length);\n    {\n      employees.map(emp => {\n        const {\n          id,\n          name,\n          bank_name,\n          bank_acno,\n          basic_salary,\n          tap_acno,\n          scp_acno\n        } = emp;\n        const data = {\n          name: name,\n          period: {\n            payslip_period\n          },\n          date: \"\",\n          basic_pay: {\n            basic_salary\n          },\n          nett_pay: 0,\n          bank_name: {\n            bank_name\n          },\n          bank_acno: {\n            bank_acno\n          },\n          tap_acno: {\n            tap_acno\n          },\n          scp_acno: {\n            scp_acno\n          },\n          empid: {\n            id\n          },\n          status: \"Pending\"\n        };\n        const res = paydata.includes(emp.name);\n\n        if (!res) {\n          console.log(\"add\");\n          addPayslip({ ...data\n          });\n        }\n      });\n    } //loadDailyAllowances();\n  };\n\n  if (singlebatch_payslip_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading.....Payslips\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: singlebatchpayslip,\n        title: `Payslips Batch ${payslip_period}`,\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 37\n          }, this),\n          Build: props => /*#__PURE__*/_jsxDEV(BuildOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 31\n          }, this)\n        },\n        actions: [{\n          icon: \"edit\",\n          tooltip: \"Edit Record\",\n          onClick: (event, rowData) => {\n            update_Payslip(rowData);\n          }\n        }, {\n          icon: \"delete\",\n          tooltip: \"Delete Record\",\n          onClick: (event, rowData) => {\n            delete_Payslip(rowData);\n          }\n        }, {\n          icon: \"add\",\n          tooltip: \"Add Record\",\n          isFreeAction: true,\n          onClick: (event, rowData) => {\n            add_Payslip(rowData);\n          }\n        }, {\n          icon: \"build\",\n          tooltip: \"Build Records\",\n          isFreeAction: true,\n          onClick: (event, rowData) => {\n            build_Payslip();\n          }\n        }],\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"#01579b\",\n            color: \"#FFF\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/payslip\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n                  fontSize: \"large\",\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllEmployeesTable, \"y4EBTPI/4R6VtI6rdZcWasPATrc=\", false, function () {\n  return [useHistory, useStyles, usePayslipsContext, useEmployeesContext];\n});\n\n_c = AllEmployeesTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"AllEmployeesTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/PayslipTable.js"],"names":["React","useState","useEffect","MaterialTable","MTableToolbar","makeStyles","Button","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","ArrowBackIcon","BuildOutlinedIcon","useHistory","Link","usePayslipsContext","useEmployeesContext","columns","title","field","type","AllEmployeesTable","history","classes","useStyles","payslips","addPayslip","payslips_loading","updatePayslip","deletePayslip","loadPayslips","getSinglePayslip","getSingleBatchPayslip","setEditPayslipID","setIsPayslipEditingOn","setIsPayslipEditingOff","resetSinglePayslip","payslip_period","singlebatchpayslip","singlebatch_payslip_loading","singlebatch_payslip_error","loadEmployees","employees","console","log","update_Payslip","data","id","push","add_Payslip","delete_Payslip","build_Payslip","paydata","map","e","name","length","emp","bank_name","bank_acno","basic_salary","tap_acno","scp_acno","period","date","basic_pay","nett_pay","empid","status","res","includes","root","maxWidth","paddingTop","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","Build","icon","tooltip","onClick","event","rowData","isFreeAction","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","theme","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,aAAP,IAAwBC,aAAxB,QAA6C,gBAA7C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AAEA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,mBAAT,QAAoC,8BAApC;;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADc,EAKd;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CALc,EAMd;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE,MAAxB;AAAgCC,EAAAA,IAAI,EAAE;AAAtC,CANc,EAOd;AAAEF,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,KAAK,EAAE,UAA5B;AAAwCC,EAAAA,IAAI,EAAE;AAA9C,CAPc,EAQd;AAAEF,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CARc,EASd;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CATc,EAUd;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAVc,CAAhB;AAaA,eAAe,SAASE,iBAAT,GAA6B;AAAA;;AAC1C,MAAIC,OAAO,GAAGT,UAAU,EAAxB;AACA,QAAMU,OAAO,GAAGC,SAAS,EAAzB;AACA,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,gBAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA,aALI;AAMJC,IAAAA,YANI;AAOJC,IAAAA,gBAPI;AAQJC,IAAAA,qBARI;AASJC,IAAAA,gBATI;AAUJC,IAAAA,qBAVI;AAWJC,IAAAA,sBAXI;AAYJC,IAAAA,kBAZI;AAaJC,IAAAA,cAbI;AAcJC,IAAAA,kBAdI;AAeJC,IAAAA,2BAfI;AAgBJC,IAAAA;AAhBI,MAiBFzB,kBAAkB,EAjBtB;AAkBA,QAAM;AAAE0B,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAA+B1B,mBAAmB,EAAxD;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACd+B,IAAAA,qBAAqB,CAACK,cAAD,CAArB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYN,kBAAZ;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMO,cAAc,GAAG,MAAOC,IAAP,IAAgB;AACrC,UAAM;AAAEC,MAAAA;AAAF,QAASD,IAAf;AACAb,IAAAA,gBAAgB,CAACc,EAAD,CAAhB;AACAb,IAAAA,qBAAqB;AACrBH,IAAAA,gBAAgB,CAACgB,EAAD,CAAhB;AACAzB,IAAAA,OAAO,CAAC0B,IAAR,CAAa,gBAAb;AACD,GAND;;AAQA,QAAMC,WAAW,GAAG,MAAOH,IAAP,IAAgB;AAClC,UAAM;AAAEC,MAAAA;AAAF,QAASD,IAAf;AACAV,IAAAA,kBAAkB;AAClBH,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAE,IAAAA,sBAAsB;AACtBb,IAAAA,OAAO,CAAC0B,IAAR,CAAa,gBAAb;AACD,GAND;;AAQA,QAAME,cAAc,GAAIJ,IAAD,IAAU;AAC/B,UAAM;AAAEC,MAAAA;AAAF,QAASD,IAAf;AACAb,IAAAA,gBAAgB,CAACc,EAAD,CAAhB;AACAlB,IAAAA,aAAa,CAACkB,EAAD,CAAb;AACAjB,IAAAA,YAAY;AACb,GALD;;AAOA,QAAMqB,aAAa,GAAG,MAAM;AAC1BR,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAH,IAAAA,aAAa;AACbX,IAAAA,YAAY;AACZ,UAAMsB,OAAO,GAAG3B,QAAQ,CAAC4B,GAAT,CAAcC,CAAD,IAAOA,CAAC,CAACC,IAAtB,CAAhB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAO,CAACI,MAApB;AACA;AACEd,MAAAA,SAAS,CAACW,GAAV,CAAeI,GAAD,IAAS;AACrB,cAAM;AAAEV,UAAAA,EAAF;AAAMQ,UAAAA,IAAN;AAAYG,UAAAA,SAAZ;AAAuBC,UAAAA,SAAvB;AAAkCC,UAAAA,YAAlC;AAA+CC,UAAAA,QAA/C;AAAwDC,UAAAA;AAAxD,YAAqEL,GAA3E;AACA,cAAMX,IAAI,GAAG;AACXS,UAAAA,IAAI,EAAEA,IADK;AAEXQ,UAAAA,MAAM,EAAE;AAAE1B,YAAAA;AAAF,WAFG;AAGX2B,UAAAA,IAAI,EAAE,EAHK;AAIXC,UAAAA,SAAS,EAAE;AAAEL,YAAAA;AAAF,WAJA;AAKXM,UAAAA,QAAQ,EAAE,CALC;AAMXR,UAAAA,SAAS,EAAE;AAAEA,YAAAA;AAAF,WANA;AAOXC,UAAAA,SAAS,EAAE;AAAEA,YAAAA;AAAF,WAPA;AAQXE,UAAAA,QAAQ,EAAE;AAAEA,YAAAA;AAAF,WARC;AASXC,UAAAA,QAAQ,EAAE;AAACA,YAAAA;AAAD,WATC;AAUXK,UAAAA,KAAK,EAAE;AAAEpB,YAAAA;AAAF,WAVI;AAWXqB,UAAAA,MAAM,EAAE;AAXG,SAAb;AAaA,cAAMC,GAAG,GAAGjB,OAAO,CAACkB,QAAR,CAAiBb,GAAG,CAACF,IAArB,CAAZ;;AACA,YAAI,CAACc,GAAL,EAAU;AACR1B,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAlB,UAAAA,UAAU,CAAC,EAAE,GAAGoB;AAAL,WAAD,CAAV;AACD;AACF,OApBD;AAqBD,KA5ByB,CA6B1B;AACD,GA9BD;;AAgCA,MAAIP,2BAAJ,EAAiC;AAC/B,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAACgD,IAAxB;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,UAAU,EAAE;AAAhC,OAAZ;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,OAAO,EAAExD,OADX;AAEE,QAAA,IAAI,EAAEqB,kBAFR;AAGE,QAAA,KAAK,EAAG,kBAAiBD,cAAe,EAH1C;AAIE,QAAA,KAAK,EAAE;AACLqC,UAAAA,GAAG,EAAGC,KAAD,iBAAW,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBADX;AAELC,UAAAA,IAAI,EAAGD,KAAD,iBAAW,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAFZ;AAGLE,UAAAA,MAAM,EAAGF,KAAD,iBAAW,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAHd;AAILG,UAAAA,KAAK,EAAGH,KAAD,iBAAW,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAJb;AAKLI,UAAAA,KAAK,EAAGJ,KAAD,iBAAW,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBALb;AAMLK,UAAAA,MAAM,EAAGL,KAAD,iBAAW,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBANd;AAOLM,UAAAA,WAAW,EAAGN,KAAD,iBAAW,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBAPnB;AAQLO,UAAAA,KAAK,EAAGP,KAAD,iBAAW,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AARb,SAJT;AAcE,QAAA,OAAO,EAAE,CACP;AACEQ,UAAAA,IAAI,EAAE,MADR;AAEEC,UAAAA,OAAO,EAAE,aAFX;AAGEC,UAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC3B1C,YAAAA,cAAc,CAAC0C,OAAD,CAAd;AACD;AALH,SADO,EAQP;AACEJ,UAAAA,IAAI,EAAE,QADR;AAEEC,UAAAA,OAAO,EAAE,eAFX;AAGEC,UAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC3BrC,YAAAA,cAAc,CAACqC,OAAD,CAAd;AACD;AALH,SARO,EAeP;AACEJ,UAAAA,IAAI,EAAE,KADR;AAEEC,UAAAA,OAAO,EAAE,YAFX;AAGEI,UAAAA,YAAY,EAAE,IAHhB;AAIEH,UAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC3BtC,YAAAA,WAAW,CAACsC,OAAD,CAAX;AACD;AANH,SAfO,EAuBP;AACEJ,UAAAA,IAAI,EAAE,OADR;AAEEC,UAAAA,OAAO,EAAE,eAFX;AAGEI,UAAAA,YAAY,EAAE,IAHhB;AAIEH,UAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC3BpC,YAAAA,aAAa;AACd;AANH,SAvBO,CAdX;AA8CE,QAAA,OAAO,EAAE;AACPsC,UAAAA,SAAS,EAAE,IADJ;AAEPC,UAAAA,WAAW,EAAE;AACXC,YAAAA,eAAe,EAAE,SADN;AAEXC,YAAAA,KAAK,EAAE;AAFI,WAFN;AAMPC,UAAAA,SAAS,EAAE;AANJ,SA9CX;AAsDE,QAAA,UAAU,EAAE;AACVC,UAAAA,OAAO,EAAGnB,KAAD,iBACP;AAAA,oCACE,QAAC,aAAD,OAAmBA;AAAnB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,UAAT;AAAA,qCACE;AAAA,uCACE,QAAC,aAAD;AAAe,kBAAA,QAAQ,EAAC,OAAxB;AAAgC,kBAAA,KAAK,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFQ;AAtDd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyED;;GAnKuBtD,iB;UACRR,U,EACEW,S,EAkBZT,kB,EACiCC,mB;;;KArBfK,iB;AAqKxB,MAAMG,SAAS,GAAGpB,UAAU,CAAE2F,KAAD,KAAY;AACvCxB,EAAAA,IAAI,EAAE;AACJyB,IAAAA,OAAO,EAAE;AADL;AADiC,CAAZ,CAAD,CAA5B","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport BuildOutlinedIcon from \"@material-ui/icons/BuildOutlined\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  { title: \"Period\", field: \"period\" },\r\n  { title: \"Date\", field: \"date\", type: \"date\" },\r\n  { title: \"Nett Pay\", field: \"nett_pay\", type: \"numeric\" },\r\n  { title: \"Bank Name\", field: \"bank_name\" },\r\n  { title: \"Bank AC No\", field: \"bank_accno\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function AllEmployeesTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const {\r\n    payslips,\r\n    addPayslip,\r\n    payslips_loading,\r\n    updatePayslip,\r\n    deletePayslip,\r\n    loadPayslips,\r\n    getSinglePayslip,\r\n    getSingleBatchPayslip,\r\n    setEditPayslipID,\r\n    setIsPayslipEditingOn,\r\n    setIsPayslipEditingOff,\r\n    resetSinglePayslip,\r\n    payslip_period,\r\n    singlebatchpayslip,\r\n    singlebatch_payslip_loading,\r\n    singlebatch_payslip_error,\r\n  } = usePayslipsContext();\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslip(payslip_period);\r\n    console.log(singlebatchpayslip);\r\n  }, []);\r\n\r\n  const update_Payslip = async (data) => {\r\n    const { id } = data;\r\n    setEditPayslipID(id);\r\n    setIsPayslipEditingOn();\r\n    getSinglePayslip(id);\r\n    history.push(\"/singlepayslip\");\r\n  };\r\n\r\n  const add_Payslip = async (data) => {\r\n    const { id } = data;\r\n    resetSinglePayslip();\r\n    setEditPayslipID(\"\");\r\n    setIsPayslipEditingOff();\r\n    history.push(\"/singlepayslip\");\r\n  };\r\n\r\n  const delete_Payslip = (data) => {\r\n    const { id } = data;\r\n    setEditPayslipID(id);\r\n    deletePayslip(id);\r\n    loadPayslips();\r\n  };\r\n\r\n  const build_Payslip = () => {\r\n    console.log(\"build\")\r\n    loadEmployees();\r\n    loadPayslips();\r\n    const paydata = payslips.map((e) => e.name);\r\n    console.log(paydata.length);\r\n    {\r\n      employees.map((emp) => {\r\n        const { id, name, bank_name, bank_acno, basic_salary,tap_acno,scp_acno } = emp;\r\n        const data = {\r\n          name: name,\r\n          period: { payslip_period },\r\n          date: \"\",\r\n          basic_pay: { basic_salary },\r\n          nett_pay: 0,\r\n          bank_name: { bank_name },\r\n          bank_acno: { bank_acno },\r\n          tap_acno: { tap_acno },\r\n          scp_acno: {scp_acno},\r\n          empid: { id },\r\n          status: \"Pending\",\r\n        };\r\n        const res = paydata.includes(emp.name);\r\n        if (!res) {\r\n          console.log(\"add\");\r\n          addPayslip({ ...data });\r\n        }\r\n      });\r\n    }\r\n    //loadDailyAllowances();\r\n  };\r\n\r\n  if (singlebatch_payslip_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading.....Payslips</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={singlebatchpayslip}\r\n          title={`Payslips Batch ${payslip_period}`}\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n            Build: (props) => <BuildOutlinedIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Payslip(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Payslip(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Payslip(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"build\",\r\n              tooltip: \"Build Records\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                build_Payslip();\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"#01579b\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <Link to=\"/payslip\">\r\n                  <div>\r\n                    <ArrowBackIcon fontSize=\"large\" color=\"primary\" />\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}