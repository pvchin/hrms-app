{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Emp_Family.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Icon, TextField, MenuItem } from \"@material-ui/core\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\"\n}, {\n  title: \"Relationship\",\n  field: \"relationship\",\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField, {\n    defaultValue: props.value || null,\n    onChange: e => props.onChange(e.target.value),\n    style: {\n      width: 100\n    },\n    select: true,\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Father\",\n      children: \"Father\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Mother\",\n      children: \"Mother\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Mother\",\n      children: \"Daughter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Mother\",\n      children: \"Son\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Mother\",\n      children: \"Son-in-law\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Mother\",\n      children: \"Daughter-in-law\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this)\n}, {\n  title: \"BIrth Date\",\n  field: \"birth_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField, {\n    defaultValue: props.value || null,\n    onChange: e => props.onChange(e.target.value),\n    type: \"date\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this)\n}, {\n  title: \"Phone\",\n  field: \"phone\"\n}, {\n  title: \"Age\",\n  field: \"age\",\n  type: \"numeric\"\n}];\nexport default function Emp_Family({\n  familydata,\n  setFamilydata,\n  handleDialogClose\n}) {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const {\n    editEmployeeID\n  } = useEmployeesContext();\n  const {\n    loadSingleBatchFamily,\n    loadFamily,\n    singlebatchfamily,\n    addFamily,\n    deleteFamily,\n    updateFamily,\n    singlebatch_family_loading,\n    singlebatch_family_error\n  } = useTablesContext();\n  useEffect(() => {}, [familydata]);\n\n  const Save_FamilyData = () => {\n    console.log(\"family\", familydata);\n    console.log(\"batch\", singlebatchfamily); // delete unwanted data\n\n    singlebatchfamily.map(row => {\n      const {\n        recid,\n        name\n      } = row;\n      const res = familydata.includes(recid);\n\n      if (!res) {\n        console.log(\"del\", recid, name); //deleteFamily(id);\n      }\n    }); //add or update new data    \n\n    {\n      familydata.map(data => {\n        const {\n          id,\n          name,\n          relationship,\n          birth_date,\n          phone,\n          age\n        } = data;\n\n        if (id) {\n          const {\n            id,\n            rec_id,\n            tableData,\n            ...fields\n          } = data;\n          updateFamily({\n            id,\n            ...fields\n          });\n        } else {\n          addFamily({\n            name,\n            relationship,\n            birth_date,\n            phone,\n            age,\n            empid: editEmployeeID\n          });\n        }\n      });\n    }\n    handleDialogClose();\n  };\n\n  const update_Family = data => {\n    const {\n      id,\n      rec_id,\n      tableData,\n      ...fields\n    } = data;\n    setTimeout(() => {}, 1000);\n    updateFamily({\n      id,\n      ...fields\n    }); //loadSingleBatchFamily(editEmployeeID);\n    //loadSingleBatchFamily(editEmployeeID);\n  };\n\n  const add_Family = data => {\n    addFamily({ ...data,\n      empid: editEmployeeID\n    }); //loadSingleBatchFamily(editEmployeeID);\n  };\n\n  const delete_Family = data => {\n    const {\n      id\n    } = data;\n    deleteFamily(id); //loadSingleBatchFamily(editEmployeeID);\n  };\n\n  if (singlebatch_family_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...Family\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: familydata,\n        title: \"Family\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              setFamilydata([...familydata, newData]);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...familydata];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData;\n              setFamilydata([...dataUpdate]);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...familydata];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1);\n              setFamilydata([...dataDelete]);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"primary\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px 10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Save_FamilyData,\n                children: [\"Update \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)\n        } // localization={{\n        //   body: {\n        //     dateTimePickerLocalization: enGB,\n        //   },\n        // }}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Emp_Family, \"kmNtpDQTt3cfqJuyP9ma4zmie28=\", false, function () {\n  return [useHistory, useStyles, useEmployeesContext, useTablesContext];\n});\n\n_c = Emp_Family;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Emp_Family\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Emp_Family.js"],"names":["React","useState","useEffect","MaterialTable","MTableToolbar","makeStyles","Button","Icon","TextField","MenuItem","useHistory","Link","useEmployeesContext","useTablesContext","columns","title","field","editComponent","props","value","e","onChange","target","width","type","dateSetting","locale","Emp_Family","familydata","setFamilydata","handleDialogClose","history","classes","useStyles","editEmployeeID","loadSingleBatchFamily","loadFamily","singlebatchfamily","addFamily","deleteFamily","updateFamily","singlebatch_family_loading","singlebatch_family_error","Save_FamilyData","console","log","map","row","recid","name","res","includes","data","id","relationship","birth_date","phone","age","rec_id","tableData","fields","empid","update_Family","setTimeout","add_Family","delete_Family","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","onRowUpdate","oldData","dataUpdate","index","onRowDelete","dataDelete","splice","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","padding","button","rightIcon","theme"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Icon, TextField, MenuItem } from \"@material-ui/core\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Relationship\",\r\n    field: \"relationship\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        select\r\n      >\r\n        <MenuItem value=\"Father\">Father</MenuItem>\r\n        <MenuItem value=\"Mother\">Mother</MenuItem>\r\n        <MenuItem value=\"Mother\">Daughter</MenuItem>\r\n        <MenuItem value=\"Mother\">Son</MenuItem>\r\n        <MenuItem value=\"Mother\">Son-in-law</MenuItem>\r\n        <MenuItem value=\"Mother\">Daughter-in-law</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n  {\r\n    title: \"BIrth Date\",\r\n    field: \"birth_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: \"Phone\",\r\n    field: \"phone\",\r\n  },\r\n  { title: \"Age\", field: \"age\", type: \"numeric\" },\r\n];\r\n\r\nexport default function Emp_Family({\r\n  familydata,\r\n  setFamilydata,\r\n  handleDialogClose,\r\n}) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    loadSingleBatchFamily,\r\n    loadFamily,\r\n    singlebatchfamily,\r\n    addFamily,\r\n    deleteFamily,\r\n    updateFamily,\r\n    singlebatch_family_loading,\r\n    singlebatch_family_error,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {}, [familydata]);\r\n\r\n  const Save_FamilyData = () => {\r\n    console.log(\"family\",familydata);\r\n    console.log(\"batch\", singlebatchfamily)\r\n\r\n    // delete unwanted data\r\n    singlebatchfamily.map((row) => {\r\n      const { recid, name } = row\r\n      const res = familydata.includes(recid);\r\n      if (!res) {\r\n        console.log(\"del\", recid, name)\r\n         //deleteFamily(id);\r\n      }\r\n    })\r\n    //add or update new data    \r\n    {\r\n      familydata.map((data) => {\r\n        const { id, name, relationship, birth_date, phone, age } = data;\r\n        if (id) {\r\n          const { id, rec_id, tableData, ...fields } = data;\r\n          updateFamily({ id, ...fields });\r\n        } else {\r\n          addFamily({\r\n            name,\r\n            relationship,\r\n            birth_date,\r\n            phone,\r\n            age,\r\n            empid: editEmployeeID,\r\n          });\r\n        }\r\n      });\r\n    }\r\n    handleDialogClose();\r\n  };\r\n\r\n  const update_Family = (data) => {\r\n    const { id, rec_id, tableData, ...fields } = data;\r\n    setTimeout(() => {}, 1000);\r\n\r\n    updateFamily({ id, ...fields });\r\n    //loadSingleBatchFamily(editEmployeeID);\r\n    //loadSingleBatchFamily(editEmployeeID);\r\n  };\r\n\r\n  const add_Family = (data) => {\r\n    addFamily({ ...data, empid: editEmployeeID });\r\n    //loadSingleBatchFamily(editEmployeeID);\r\n  };\r\n\r\n  const delete_Family = (data) => {\r\n    const { id } = data;\r\n    deleteFamily(id);\r\n    //loadSingleBatchFamily(editEmployeeID);\r\n  };\r\n\r\n  if (singlebatch_family_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Family</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={familydata}\r\n          title=\"Family\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setFamilydata([...familydata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...familydata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setFamilydata([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...familydata];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setFamilydata([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_FamilyData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n          // localization={{\r\n          //   body: {\r\n          //     dateTimePickerLocalization: enGB,\r\n          //   },\r\n          // }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}