{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Example4.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport MaterialTable from \"material-table\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { atom, selector, useRecoilValue, useRecoilState, useSetRecoilState, useRecoilValueLoadable, useRecoilStateLoadable } from \"recoil\"; // import { useRecoilValue, useSetRecoilState, useRecoilState } from \"recoil\";\n// import { departmentsSelector } from \"../helpers/Recoilhelpers\";\n\nimport { departments_url } from \"../utils/constants\";\nimport { fetchDepartmentsSelector } from \"./data/selectordata\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = `https://reqres.in/api/users?page=1`;\nconst drawerWidth = 240;\nconst columns = [{\n  title: \"Name\",\n  field: \"name\",\n  filtering: false\n}, {\n  title: \"Relationship\",\n  field: \"relationship\"\n}, {\n  title: \"BIrth Date\",\n  field: \"birth_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  filtering: false\n}, {\n  title: \"Phone\",\n  field: \"phone\"\n}];\nexport const userdatastate = atom({\n  key: \"userdata\",\n  default: [],\n  dangerouslyAllowMutability: true\n});\nconst fetchUserDetails = selector({\n  key: \"userDetailsSelector\",\n  get: async ({\n    get\n  }) => {\n    try {\n      const res = await fetch(departments_url);\n      const data = await res.json();\n      console.log(data);\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n});\n\nconst Example = () => {\n  _s();\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const [userdata, setUserdata] = useRecoilState(userdatastate);\n  const [userDetails, setUserDetails] = useRecoilState(fetchDepartmentsSelector); //const { state, contents } = userDetails;\n\n  console.log(userDetails);\n  return /*#__PURE__*/_jsxDEV(\"paper\", {\n    className: fixedHeightPaper,\n    style: {\n      backgroundColor: \"black\"\n    },\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      columns: columns,\n      data: userdata,\n      title: \"Family\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}; // const DetailsWithSuspense = () => {\n//   const userDetails = useRecoilValue(fetchUserDetails);\n//   const { data } = userDetails;\n//   return data.map((item) => (\n//     <div key={item.id}>\n//       <p>{`Email: ${item.email} Name: ${item.first_name} ${item.last_name}`}</p>\n//     </div>\n//   ));\n// };\n// const Example = () => {\n//   const classes = useStyles();\n//   const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n//   const departsdata = useRecoilValue(departmentsSelector);\n//   return (\n//     <div>\n//       <DetailsWithoutSuspense />\n//     </div>\n//   );\n// };\n\n\n_s(Example, \"pwNgNsSTVrfYrdEpYZ6ULBrqo7Q=\", false, function () {\n  return [useStyles, useRecoilState, useRecoilState];\n});\n\n_c = Example;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    padding: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"black\"\n  },\n  card: {\n    backgroundColor: \"black\"\n  }\n}));\nexport default Example;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Example4.js"],"names":["React","useEffect","makeStyles","clsx","MaterialTable","Paper","atom","selector","useRecoilValue","useRecoilState","useSetRecoilState","useRecoilValueLoadable","useRecoilStateLoadable","departments_url","fetchDepartmentsSelector","url","drawerWidth","columns","title","field","filtering","type","dateSetting","locale","userdatastate","key","default","dangerouslyAllowMutability","fetchUserDetails","get","res","fetch","data","json","console","log","error","Example","classes","useStyles","fixedHeightPaper","paper","fixedHeight","userdata","setUserdata","userDetails","setUserDetails","backgroundColor","theme","root","flexGrow","container","margin","padding","width","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","height","spacing","overflow","flexDirection","border","color","bcakgroundColor","card"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport MaterialTable from \"material-table\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  atom,\r\n  selector,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useSetRecoilState,\r\n  useRecoilValueLoadable,\r\n  useRecoilStateLoadable,\r\n} from \"recoil\";\r\n// import { useRecoilValue, useSetRecoilState, useRecoilState } from \"recoil\";\r\n// import { departmentsSelector } from \"../helpers/Recoilhelpers\";\r\nimport { departments_url } from \"../utils/constants\";\r\nimport { fetchDepartmentsSelector } from \"./data/selectordata\";\r\n\r\nconst url = `https://reqres.in/api/users?page=1`;\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    filtering: false,\r\n  },\r\n  {\r\n    title: \"Relationship\",\r\n    field: \"relationship\",\r\n  },\r\n  {\r\n    title: \"BIrth Date\",\r\n    field: \"birth_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    filtering: false,\r\n  },\r\n  {\r\n    title: \"Phone\",\r\n    field: \"phone\",\r\n  },\r\n];\r\n\r\nexport const userdatastate = atom({\r\n  key: \"userdata\",\r\n  default: [],\r\n  dangerouslyAllowMutability: true,\r\n});\r\n\r\nconst fetchUserDetails = selector({\r\n  key: \"userDetailsSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const res = await fetch(departments_url);\r\n      const data = await res.json();\r\n      console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n\r\nconst Example = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const [userdata, setUserdata] = useRecoilState(userdatastate);\r\n  const [userDetails, setUserDetails] = useRecoilState(\r\n    fetchDepartmentsSelector\r\n  );\r\n  //const { state, contents } = userDetails;\r\n\r\n  console.log(userDetails);\r\n\r\n  return (\r\n    <paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n      <MaterialTable columns={columns} data={userdata} title=\"Family\" />\r\n    </paper>\r\n  );\r\n};\r\n\r\n// const DetailsWithSuspense = () => {\r\n//   const userDetails = useRecoilValue(fetchUserDetails);\r\n//   const { data } = userDetails;\r\n\r\n//   return data.map((item) => (\r\n//     <div key={item.id}>\r\n//       <p>{`Email: ${item.email} Name: ${item.first_name} ${item.last_name}`}</p>\r\n//     </div>\r\n//   ));\r\n// };\r\n\r\n// const Example = () => {\r\n//   const classes = useStyles();\r\n//   const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n//   const departsdata = useRecoilValue(departmentsSelector);\r\n\r\n//   return (\r\n//     <div>\r\n//       <DetailsWithoutSuspense />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n}));\r\n\r\nexport default Example;\r\n"]},"metadata":{},"sourceType":"module"}