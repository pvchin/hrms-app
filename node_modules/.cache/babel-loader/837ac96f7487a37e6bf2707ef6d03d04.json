{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Payslip_Earnings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Name\",\n  field: \"description\"\n}, {\n  title: \"Amount\",\n  field: \"amount\",\n  type: \"numeric\"\n}];\nexport default function Payslip_Earnings({\n  setCalc\n}) {\n  _s();\n\n  let history = useHistory();\n  let mounted = useRef(true);\n  const classes = useStyles();\n  const {\n    payslipearnings,\n    payslip_earning_amount,\n    setPayslipEarningAmount,\n    addPayslipEarning,\n    payslipearnings_loading,\n    updatePayslipEarning,\n    deletePayslipEarning,\n    updatePayslip,\n    editPayslipID,\n    single_payslip,\n    payslip_period,\n    getSingleBatchPayslipEarnings\n  } = usePayslipsContext();\n  const {\n    name,\n    amount\n  } = payslipearnings;\n  useEffect(() => {\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period).then(e => {\n      if (payslipearnings) {\n        console.log(\"earning\", payslipearnings);\n      }\n    });\n    return () => mounted.current = false;\n  }, []);\n\n  const calc_Earning = data => {\n    const sum = data.reduce((a, v) => a = a + v.amount, 0);\n    console.log(\"Earning\", data);\n    setPayslipEarningAmount(sum);\n  };\n\n  const update_Payslip = () => {\n    const {\n      rec_id,\n      id,\n      total_earnings,\n      ...paydata\n    } = single_payslip;\n    updatePayslip({\n      id: editPayslipID,\n      total_earnings: payslip_earning_amount,\n      ...paydata\n    });\n    setCalc(true);\n  };\n\n  const update_PayslipEarning = async data => {\n    const {\n      id,\n      rec_id,\n      empid,\n      ...fields\n    } = data;\n    console.log(\"update\", data);\n    updatePayslipEarning({\n      id: data.id,\n      empid: empid,\n      ...fields\n    });\n    update_Payslip();\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\n  };\n\n  const add_PayslipEarning = data => {\n    console.log(\"add\", data);\n    const {\n      description,\n      amount\n    } = data;\n    addPayslipEarning({\n      description: description,\n      amount: amount,\n      name: single_payslip.name,\n      empid: single_payslip.empid,\n      period: single_payslip.period\n    });\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\n  };\n\n  const delete_PayslipEarning = data => {\n    const {\n      id\n    } = data;\n    deletePayslipEarning(id);\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\n  };\n\n  if (payslipearnings_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading... Incomes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: payslipearnings,\n        title: \"Income\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              // setData([...data, newData]);\n              add_PayslipEarning(newData);\n              calc_Earning([...payslipearnings, newData]);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...payslipearnings];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData; //setData([...dataUpdate]);\n\n              update_PayslipEarning(newData);\n              calc_Earning(dataUpdate);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...payslipearnings];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1); // setData([...dataDelete]);\n\n              delete_PayslipEarning(oldData);\n              calc_Earning(dataDelete);\n              resolve();\n            }, 1000);\n          })\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Payslip_Earnings, \"ioEYv9tJxtTvrDfDf9DaDiS7eTY=\", false, function () {\n  return [useHistory, useStyles, usePayslipsContext];\n});\n\n_c = Payslip_Earnings;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Payslip_Earnings\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Payslip_Earnings.js"],"names":["React","useState","useEffect","useRef","MaterialTable","makeStyles","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","useHistory","Link","usePayslipsContext","useTablesContext","columns","title","field","type","Payslip_Earnings","setCalc","history","mounted","classes","useStyles","payslipearnings","payslip_earning_amount","setPayslipEarningAmount","addPayslipEarning","payslipearnings_loading","updatePayslipEarning","deletePayslipEarning","updatePayslip","editPayslipID","single_payslip","payslip_period","getSingleBatchPayslipEarnings","name","amount","empid","then","e","console","log","current","calc_Earning","data","sum","reduce","a","v","update_Payslip","rec_id","id","total_earnings","paydata","update_PayslipEarning","fields","add_PayslipEarning","description","period","delete_PayslipEarning","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","onRowDelete","dataDelete","splice","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"description\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"numeric\" },\r\n];\r\n\r\nexport default function Payslip_Earnings({ setCalc }) {\r\n  let history = useHistory();\r\n  let mounted = useRef(true);\r\n  const classes = useStyles();\r\n  const {\r\n    payslipearnings,\r\n    payslip_earning_amount,\r\n    setPayslipEarningAmount,\r\n    addPayslipEarning,\r\n    payslipearnings_loading,\r\n    updatePayslipEarning,\r\n    deletePayslipEarning,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipEarnings,\r\n  } = usePayslipsContext();\r\n  const { name, amount } = payslipearnings;\r\n  \r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period).then(\r\n      (e) => {\r\n        if (payslipearnings) {\r\n          console.log(\"earning\", payslipearnings);\r\n        }\r\n      }\r\n    );\r\n    return () => (mounted.current = false);\r\n  }, []);\r\n\r\n  \r\n\r\n  const calc_Earning = (data) => {\r\n    const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n    console.log(\"Earning\", data);\r\n    setPayslipEarningAmount(sum);\r\n  };\r\n\r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_earnings, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_earnings: payslip_earning_amount,\r\n      ...paydata,\r\n    });\r\n    setCalc(true);\r\n  };\r\n\r\n  const update_PayslipEarning = async (data) => {\r\n    const { id, rec_id, empid, ...fields } = data;\r\n    console.log(\"update\", data);\r\n    updatePayslipEarning({ id: data.id, empid: empid, ...fields });\r\n\r\n    update_Payslip();\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const add_PayslipEarning = (data) => {\r\n    console.log(\"add\", data);\r\n    const { description, amount } = data;\r\n    addPayslipEarning({\r\n      description: description,\r\n      amount: amount,\r\n      name: single_payslip.name,\r\n      empid: single_payslip.empid,\r\n      period: single_payslip.period,\r\n    });\r\n\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const delete_PayslipEarning = (data) => {\r\n    const { id } = data;\r\n    deletePayslipEarning(id);\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  if (payslipearnings_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Incomes.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipearnings}\r\n          title=\"Income\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // setData([...data, newData]);\r\n                  add_PayslipEarning(newData);\r\n                  calc_Earning([...payslipearnings, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...payslipearnings];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  //setData([...dataUpdate]);\r\n                  update_PayslipEarning(newData);\r\n                  calc_Earning(dataUpdate);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...payslipearnings];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  // setData([...dataDelete]);\r\n                  delete_PayslipEarning(oldData);\r\n                  calc_Earning(dataDelete);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}