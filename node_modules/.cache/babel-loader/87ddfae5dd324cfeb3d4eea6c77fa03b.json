{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Payrunbatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MaterialTable from \"material-table\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport clsx from \"clsx\";\nimport axios from \"axios\";\nimport { useAsync } from \"react-async\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Checkbox, Paper, Grid, Divider, TextField, MenuItem, ListSubheader } from \"@material-ui/core\";\nimport { employees_url } from \"../utils/constants\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { usePayslipsContext, updatePayslipsData } from \"../context/payslips_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { payrunState, paydataState } from \"./data/atomdata\";\nimport { RecoilRoot, atom, selector, useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst url = \"https://course-api.com/react-tabs-project\";\n\nconst Payrunbatch = () => {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const {\n    register,\n    handleSubmit,\n    control\n  } = useForm();\n  const {\n    loadEmployees,\n    employees,\n    employees_loading\n  } = useEmployeesContext();\n  const {\n    getPayslipitems,\n    payslipitems,\n    payslipitems_loading,\n    payslipsdata,\n    setPayslipsData,\n    resetPayslipsData,\n    updatePayslipsData\n  } = usePayslipsContext();\n  const {\n    loadPayitems,\n    payitems,\n    payitems_loading,\n    payitems_loading_error\n  } = useTablesContext(); //const [payitemsdata] = useRecoilState(paydataState);\n\n  const payrundata = useRecoilValue(payrunState);\n  const [loadFormdata, setLoadFormdata] = useState(false);\n  const [formdata, setFormdata] = useState([]);\n  const [rowindex, setRowIndex] = useState(0);\n\n  const handleClick = () => {};\n\n  let i = -1;\n\n  const handleButtonClick = (item, index) => {};\n\n  useEffect(() => {\n    loadPayitems();\n  }, []);\n\n  const onFormSubmit = () => {};\n\n  const handleEmpButtonClick = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: fixedHeightPaper,\n    style: {\n      backgroundColor: \"black\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.section,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        direction: \"row\",\n        container: true,\n        spacing: 1,\n        style: {\n          border: \"1px solid white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Employees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Pay Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 3,\n          align: \"center\",\n          style: {\n            border: \"1px solid white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Pay Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onFormSubmit),\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          direction: \"row\",\n          container: true,\n          spacing: 1,\n          style: {\n            border: \"1px solid white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 3,\n            align: \"left\",\n            style: {\n              border: \"1px solid white\"\n            },\n            children: [payslips.pay.map((items, index) => {\n              return items.map((subItems, sIndex) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    onClick: e => {\n                      setRowIndex(index);\n                      handleEmpButtonClick(); //handleSubmit(onFormSubmit);\n                    },\n                    className: `classes.jobbtn` // ${index === value && \"activebtn\"} `}\n                    ,\n                    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: subItems.empname\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 25\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, this);\n              });\n            }), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 3,\n            align: \"left\",\n            style: {\n              border: \"1px solid white\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 3,\n            align: \"center\",\n            style: {\n              border: \"1px solid white\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"payitem2amt\",\n                  control: control,\n                  defaultValue: payslipsdata.pay[rowindex][0].payitem2amt,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    }\n                  }) => /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"filled\",\n                    type: \"currency\",\n                    style: {\n                      width: 100\n                    },\n                    value: value,\n                    onChange: onChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"payitem3amt\",\n                  control: control,\n                  defaultValue: payslipsdata.pay[rowindex][0].payitem3amt,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    }\n                  }) => /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"filled\",\n                    type: \"currency\",\n                    style: {\n                      width: 100\n                    },\n                    value: value,\n                    onChange: onChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"payitem4amt\",\n                  control: control,\n                  defaultValue: payslipsdata.pay[rowindex][0].payitem4amt,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    }\n                  }) => /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"filled\",\n                    type: \"currency\",\n                    style: {\n                      width: 100\n                    },\n                    value: value,\n                    onChange: onChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"payitem5amt\",\n                  control: control,\n                  defaultValue: payslipsdata.pay[rowindex][0].payitem5amt,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    }\n                  }) => /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"filled\",\n                    type: \"currency\",\n                    style: {\n                      width: 100\n                    },\n                    value: value,\n                    onChange: onChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"payitem6amt\",\n                  control: control,\n                  defaultValue: payslipsdata.pay[rowindex][0].payitem6amt,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    }\n                  }) => /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"filled\",\n                    type: \"currency\",\n                    style: {\n                      width: 100\n                    },\n                    value: value,\n                    onChange: onChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"payitem7amt\",\n                  control: control,\n                  defaultValue: payslipsdata.pay[rowindex][0].payitem7amt,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    }\n                  }) => /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"filled\",\n                    type: \"currency\",\n                    style: {\n                      width: 100\n                    },\n                    value: value,\n                    onChange: onChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"payitem8amt\",\n                  control: control,\n                  defaultValue: payslipsdata.pay[rowindex][0].payitem8amt,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    }\n                  }) => /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"filled\",\n                    type: \"currency\",\n                    style: {\n                      width: 100\n                    },\n                    value: value,\n                    onChange: onChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 3,\n            align: \"left\",\n            style: {\n              border: \"1px solid white\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"payrun\",\n                  control: control,\n                  defaultValue: payrundata.payrun,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    }\n                  }) => /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Pay Run\",\n                    variant: \"filled\",\n                    type: \"currency\",\n                    style: {\n                      width: 100\n                    },\n                    value: value,\n                    onChange: onChange,\n                    className: classes.textField,\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"payperiod\",\n                  control: control,\n                  defaultValue: payrundata.period,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    }\n                  }) => /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Pay Period\",\n                    variant: \"filled\",\n                    type: \"currency\",\n                    style: {\n                      width: 100\n                    },\n                    value: value,\n                    onChange: onChange,\n                    className: classes.textField,\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Name\",\n                  variant: \"filled\",\n                  name: \"empname\",\n                  type: \"text\",\n                  style: {\n                    width: 100\n                  },\n                  value: formdata.empname,\n                  className: classes.textField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Divider, {\n                  variant: \"fullWidth\",\n                  className: classes.divider\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Wages\",\n                  variant: \"filled\",\n                  name: \"wages\",\n                  type: \"numeric\",\n                  style: {\n                    width: 100\n                  },\n                  value: formdata.wages,\n                  className: classes.textField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"tapamount\",\n                  control: control,\n                  defaultValue: payslipsdata.pay[rowindex][0].tapamount,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    }\n                  }) => /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"TAP Amount\",\n                    variant: \"filled\",\n                    type: \"currency\",\n                    style: {\n                      width: 100\n                    },\n                    value: value,\n                    onChange: onChange,\n                    className: classes.textField,\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"scpamount\",\n                  control: control,\n                  defaultValue: payslipsdata.pay[rowindex][0].scpamount,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    }\n                  }) => /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"SCP Amount\",\n                    variant: \"filled\",\n                    type: \"currency\",\n                    style: {\n                      width: 100\n                    },\n                    value: value,\n                    onChange: onChange,\n                    className: classes.textField,\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"allowances\",\n                  control: control,\n                  defaultValue: payslipsdata.pay[rowindex][0].allowances,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    }\n                  }) => /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Total Allowances\",\n                    variant: \"filled\",\n                    type: \"currency\",\n                    style: {\n                      width: 100\n                    },\n                    value: value,\n                    onChange: onChange,\n                    className: classes.textField,\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"deductions\",\n                  control: control,\n                  defaultValue: payslipsdata.pay[rowindex][0].deductions,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    }\n                  }) => /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Total Deductions\",\n                    variant: \"filled\",\n                    type: \"currency\",\n                    style: {\n                      width: 100\n                    },\n                    value: value,\n                    onChange: onChange,\n                    className: classes.textField,\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Divider, {\n                  variant: \"fullWidth\",\n                  className: classes.divider\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                  name: \"nettpay\",\n                  control: control,\n                  defaultValue: payslipsdata.pay[rowindex][0].nettpay,\n                  render: ({\n                    field: {\n                      onChange,\n                      value\n                    }\n                  }) => /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Nett Pay\",\n                    variant: \"filled\",\n                    type: \"currency\",\n                    style: {\n                      width: 100\n                    },\n                    value: value,\n                    onChange: onChange,\n                    className: classes.textField,\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payrunbatch, \"/WTM1xqYbJb67B8JsLCLiUX5PE8=\", false, function () {\n  return [useHistory, useStyles, useForm, useEmployeesContext, usePayslipsContext, useTablesContext, useRecoilValue];\n});\n\n_c = Payrunbatch;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    padding: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"black\"\n  },\n  card: {\n    backgroundColor: \"black\"\n  },\n  section: {\n    width: \"80vw\",\n    margin: \"1rem auto\",\n    maxWidth: \"var(--max-width)\"\n  },\n  underline: {\n    width: \"5rem\",\n    height: \"0.25rem\",\n    marginBottom: \"1.25rem\",\n    background: \"var(--clr-primary-5)\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  title: {\n    marginbottom: \"4rem\",\n    textAlign: \"center\"\n  },\n  jobscenter: {\n    width: \"80vw\",\n    margin: \"0 auto\",\n    maxWidth: \"var(--max-width)\",\n    flexDirection: \"row\"\n  },\n  btncontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: \"4rem\",\n    flexWrap: \"wrap\"\n  },\n  jobbtn: {\n    background: \"transparent\",\n    borderColor: \"transparent\",\n    textTransform: \"capitalize\",\n    fontSize: \"1.25rem\",\n    letterSpacing: \"var(--spacing)\",\n    margin: \"0 0.5rem\",\n    transition: \"var(--transition)\",\n    cursor: \"pointer\",\n    padding: \"0.25rem 0\",\n    lineHeight: \"1\",\n    outlineColor: \"var(--clr-primary-10)\",\n    \"&:hover\": {\n      color: \"var(--clr-primary-5)\",\n      boxShadow: \"0 2px var(--clr-primary-5)\"\n    }\n  },\n  activebtn: {\n    color: \"var(--clr-primary-5)\",\n    boxShadow: \"0 2px var(--clr-primary-5)\"\n  },\n  jobinfo: {\n    fontWeight: \"400\"\n  },\n  divider: {\n    // Theme Color, or use css color in quote\n    background: \"white\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 350\n  }\n}));\nexport default Payrunbatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payrunbatch\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Payrunbatch.js"],"names":["React","useState","useEffect","makeStyles","MaterialTable","Controller","useForm","clsx","axios","useAsync","useHistory","Button","Checkbox","Paper","Grid","Divider","TextField","MenuItem","ListSubheader","employees_url","useEmployeesContext","usePayslipsContext","updatePayslipsData","useTablesContext","payrunState","paydataState","RecoilRoot","atom","selector","useRecoilState","useRecoilValue","useSetRecoilState","drawerWidth","url","Payrunbatch","history","classes","useStyles","fixedHeightPaper","paper","fixedHeight","register","handleSubmit","control","loadEmployees","employees","employees_loading","getPayslipitems","payslipitems","payslipitems_loading","payslipsdata","setPayslipsData","resetPayslipsData","loadPayitems","payitems","payitems_loading","payitems_loading_error","payrundata","loadFormdata","setLoadFormdata","formdata","setFormdata","rowindex","setRowIndex","handleClick","i","handleButtonClick","item","index","onFormSubmit","handleEmpButtonClick","backgroundColor","section","border","payslips","pay","map","items","subItems","sIndex","e","empname","payitem2amt","field","onChange","value","width","payitem3amt","payitem4amt","payitem5amt","payitem6amt","payitem7amt","payitem8amt","payrun","textField","readOnly","period","divider","wages","tapamount","scpamount","allowances","deductions","nettpay","theme","root","flexGrow","container","margin","padding","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","height","spacing","overflow","flexDirection","color","bcakgroundColor","card","maxWidth","underline","marginBottom","background","marginLeft","marginRight","title","marginbottom","textAlign","jobscenter","btncontainer","flexWrap","jobbtn","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","jobinfo","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport clsx from \"clsx\";\r\nimport axios from \"axios\";\r\nimport { useAsync } from \"react-async\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Paper,\r\n  Grid,\r\n  Divider,\r\n  TextField,\r\n  MenuItem,\r\n  ListSubheader,\r\n} from \"@material-ui/core\";\r\nimport { employees_url } from \"../utils/constants\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport {\r\n  usePayslipsContext,\r\n  updatePayslipsData,\r\n} from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\nimport { payrunState, paydataState } from \"./data/atomdata\";\r\nimport {\r\n  RecoilRoot,\r\n  atom,\r\n  selector,\r\n  useRecoilState,\r\n  useRecoilValue,\r\n  useSetRecoilState,\r\n} from \"recoil\";\r\n\r\nconst drawerWidth = 240;\r\nconst url = \"https://course-api.com/react-tabs-project\";\r\n\r\nconst Payrunbatch = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { register, handleSubmit, control } = useForm();\r\n  const { loadEmployees, employees, employees_loading } = useEmployeesContext();\r\n  const {\r\n    getPayslipitems,\r\n    payslipitems,\r\n    payslipitems_loading,\r\n    payslipsdata,\r\n    setPayslipsData,\r\n    resetPayslipsData,\r\n    updatePayslipsData,\r\n  } = usePayslipsContext();\r\n  const { loadPayitems, payitems, payitems_loading, payitems_loading_error } =\r\n    useTablesContext();\r\n  //const [payitemsdata] = useRecoilState(paydataState);\r\n  const payrundata = useRecoilValue(payrunState);\r\n  const [loadFormdata, setLoadFormdata] = useState(false);\r\n  const [formdata, setFormdata] = useState([]);\r\n  const [rowindex, setRowIndex] = useState(0);\r\n  const handleClick = () => {};\r\n  let i = -1;\r\n\r\n  const handleButtonClick = (item, index) => {};\r\n\r\n  useEffect(() => {\r\n    loadPayitems();\r\n  }, []);\r\n\r\n  const onFormSubmit = () => {};\r\n  const handleEmpButtonClick = () => {};\r\n\r\n  return (\r\n    <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n      <section className={classes.section}>\r\n        <Grid\r\n          direction=\"row\"\r\n          container\r\n          spacing={1}\r\n          style={{ border: \"1px solid white\" }}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <h2>Employees</h2>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <h2>Pay Items</h2>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <h2>Amount</h2>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            sm={3}\r\n            align=\"center\"\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <h2>Pay Details</h2>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* employees column */}\r\n        {/* <form onSubmit={handleSubmit(onFormSubmit)}></form> */}\r\n        <form onSubmit={handleSubmit(onFormSubmit)}>\r\n          <Grid\r\n            direction=\"row\"\r\n            container\r\n            spacing={1}\r\n            style={{ border: \"1px solid white\" }}\r\n          >\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              sm={3}\r\n              align=\"left\"\r\n              style={{ border: \"1px solid white\" }}\r\n            >\r\n              {payslips.pay.map((items, index) => {\r\n                return items.map((subItems, sIndex) => {\r\n                  return (\r\n                    <div>\r\n                      <Button\r\n                        key={index}\r\n                        type=\"submit\"\r\n                        onClick={(e) => {\r\n                          setRowIndex(index);\r\n                          handleEmpButtonClick();\r\n                          //handleSubmit(onFormSubmit);\r\n                        }}\r\n                        className={`classes.jobbtn`}\r\n                        // ${index === value && \"activebtn\"} `}\r\n                      >\r\n                        <h3>{subItems.empname}</h3>\r\n                      </Button>\r\n                    </div>\r\n                  );\r\n                });\r\n              })}\r\n              <button >Update</button>\r\n            </Grid>\r\n\r\n            {/* payitems columns */}\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              sm={3}\r\n              align=\"left\"\r\n              style={{ border: \"1px solid white\" }}\r\n            >\r\n              <form>\r\n               \r\n              </form>\r\n            </Grid>\r\n            {/* amount column */}\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              sm={3}\r\n              align=\"center\"\r\n              style={{ border: \"1px solid white\" }}\r\n            >\r\n              <ul>\r\n                <div>\r\n                  {/* <TextField\r\n                    variant=\"filled\"\r\n                    type=\"currency\"\r\n                    ref={register}\r\n                    style={{ width: 100 }}\r\n                    defaultValue={payslipsdata.pay[rowindex][0].payitem1amt}\r\n                    //value={value}\r\n                    //onChange={onChange}\r\n                  /> */}\r\n                  {/* <Controller\r\n                    name=\"payitem1amt\"\r\n                    control={control}\r\n                    defaultValue={payslipsdata.pay[rowindex][0].payitem1amt}\r\n                    render={({ field: { onChange, value } }) => (\r\n                      <TextField\r\n                        variant=\"filled\"\r\n                        type=\"currency\"\r\n                        style={{ width: 100 }}\r\n                        defaultValue={payslipsdata.pay[rowindex][0].payitem1amt}\r\n                        //value={value}\r\n                        onChange={onChange}\r\n                      />\r\n                    )}\r\n                  /> */}\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"payitem2amt\"\r\n                    control={control}\r\n                    defaultValue={payslipsdata.pay[rowindex][0].payitem2amt}\r\n                    render={({ field: { onChange, value } }) => (\r\n                      <TextField\r\n                        variant=\"filled\"\r\n                        type=\"currency\"\r\n                        style={{ width: 100 }}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"payitem3amt\"\r\n                    control={control}\r\n                    defaultValue={payslipsdata.pay[rowindex][0].payitem3amt}\r\n                    render={({ field: { onChange, value } }) => (\r\n                      <TextField\r\n                        variant=\"filled\"\r\n                        type=\"currency\"\r\n                        style={{ width: 100 }}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"payitem4amt\"\r\n                    control={control}\r\n                    defaultValue={payslipsdata.pay[rowindex][0].payitem4amt}\r\n                    render={({ field: { onChange, value } }) => (\r\n                      <TextField\r\n                        variant=\"filled\"\r\n                        type=\"currency\"\r\n                        style={{ width: 100 }}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"payitem5amt\"\r\n                    control={control}\r\n                    defaultValue={payslipsdata.pay[rowindex][0].payitem5amt}\r\n                    render={({ field: { onChange, value } }) => (\r\n                      <TextField\r\n                        variant=\"filled\"\r\n                        type=\"currency\"\r\n                        style={{ width: 100 }}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"payitem6amt\"\r\n                    control={control}\r\n                    defaultValue={payslipsdata.pay[rowindex][0].payitem6amt}\r\n                    render={({ field: { onChange, value } }) => (\r\n                      <TextField\r\n                        variant=\"filled\"\r\n                        type=\"currency\"\r\n                        style={{ width: 100 }}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"payitem7amt\"\r\n                    control={control}\r\n                    defaultValue={payslipsdata.pay[rowindex][0].payitem7amt}\r\n                    render={({ field: { onChange, value } }) => (\r\n                      <TextField\r\n                        variant=\"filled\"\r\n                        type=\"currency\"\r\n                        style={{ width: 100 }}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"payitem8amt\"\r\n                    control={control}\r\n                    defaultValue={payslipsdata.pay[rowindex][0].payitem8amt}\r\n                    render={({ field: { onChange, value } }) => (\r\n                      <TextField\r\n                        variant=\"filled\"\r\n                        type=\"currency\"\r\n                        style={{ width: 100 }}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n              </ul>\r\n            </Grid>\r\n            {/* pay details */}\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              sm={3}\r\n              align=\"left\"\r\n              style={{ border: \"1px solid white\" }}\r\n            >\r\n              <div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"payrun\"\r\n                    control={control}\r\n                    defaultValue={payrundata.payrun}\r\n                    render={({ field: { onChange, value } }) => (\r\n                      <TextField\r\n                        label=\"Pay Run\"\r\n                        variant=\"filled\"\r\n                        type=\"currency\"\r\n                        style={{ width: 100 }}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        className={classes.textField}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"payperiod\"\r\n                    control={control}\r\n                    defaultValue={payrundata.period}\r\n                    render={({ field: { onChange, value } }) => (\r\n                      <TextField\r\n                        label=\"Pay Period\"\r\n                        variant=\"filled\"\r\n                        type=\"currency\"\r\n                        style={{ width: 100 }}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        className={classes.textField}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  {/* <h3>Name: {formdata.empname}</h3> */}\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    variant=\"filled\"\r\n                    name=\"empname\"\r\n                    type=\"text\"\r\n                    style={{ width: 100 }}\r\n                    value={formdata.empname}\r\n                    className={classes.textField}\r\n                   \r\n                  />\r\n                  {/* <Controller\r\n                    name=\"empname\"\r\n                    control={control}\r\n                    defaultValue={formdata.empname}\r\n                    render={({ field: { onChange, value } }) => (\r\n                      <TextField\r\n                        label=\"Name\"\r\n                        variant=\"filled\"\r\n                        type=\"currency\"\r\n                        style={{ width: 100 }}\r\n                        //defaultValue={formdata.empname}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        className={classes.textField}\r\n                       \r\n                      />\r\n                    )}\r\n                  /> */}\r\n                </div>\r\n\r\n                <div>\r\n                  <Divider variant=\"fullWidth\" className={classes.divider} />\r\n                  <TextField\r\n                    label=\"Wages\"\r\n                    variant=\"filled\"\r\n                    name=\"wages\"\r\n                    type=\"numeric\"\r\n                    style={{ width: 100 }}\r\n                    value={formdata.wages}\r\n                    className={classes.textField}\r\n                   \r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"tapamount\"\r\n                    control={control}\r\n                    defaultValue={payslipsdata.pay[rowindex][0].tapamount}\r\n                    render={({ field: { onChange, value } }) => (\r\n                      <TextField\r\n                        label=\"TAP Amount\"\r\n                        variant=\"filled\"\r\n                        type=\"currency\"\r\n                        style={{ width: 100 }}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        className={classes.textField}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"scpamount\"\r\n                    control={control}\r\n                    defaultValue={payslipsdata.pay[rowindex][0].scpamount}\r\n                    render={({ field: { onChange, value } }) => (\r\n                      <TextField\r\n                        label=\"SCP Amount\"\r\n                        variant=\"filled\"\r\n                        type=\"currency\"\r\n                        style={{ width: 100 }}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        className={classes.textField}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"allowances\"\r\n                    control={control}\r\n                    defaultValue={payslipsdata.pay[rowindex][0].allowances}\r\n                    render={({ field: { onChange, value } }) => (\r\n                      <TextField\r\n                        label=\"Total Allowances\"\r\n                        variant=\"filled\"\r\n                        type=\"currency\"\r\n                        style={{ width: 100 }}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        className={classes.textField}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Controller\r\n                    name=\"deductions\"\r\n                    control={control}\r\n                    defaultValue={payslipsdata.pay[rowindex][0].deductions}\r\n                    render={({ field: { onChange, value } }) => (\r\n                      <TextField\r\n                        label=\"Total Deductions\"\r\n                        variant=\"filled\"\r\n                        type=\"currency\"\r\n                        style={{ width: 100 }}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        className={classes.textField}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Divider variant=\"fullWidth\" className={classes.divider} />\r\n                  <Controller\r\n                    name=\"nettpay\"\r\n                    control={control}\r\n                    defaultValue={payslipsdata.pay[rowindex][0].nettpay}\r\n                    render={({ field: { onChange, value } }) => (\r\n                      <TextField\r\n                        label=\"Nett Pay\"\r\n                        variant=\"filled\"\r\n                        type=\"currency\"\r\n                        style={{ width: 100 }}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        className={classes.textField}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </section>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"80vw\",\r\n    margin: \"1rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  divider: {\r\n    // Theme Color, or use css color in quote\r\n    background: \"white\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 350,\r\n  },\r\n}));\r\n\r\nexport default Payrunbatch;\r\n"]},"metadata":{},"sourceType":"module"}