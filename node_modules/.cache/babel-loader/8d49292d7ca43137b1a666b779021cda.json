{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Example4.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { selector, useRecoilValue, useRecoilValueLoadable } from \"recoil\"; // import { useRecoilValue, useSetRecoilState, useRecoilState } from \"recoil\";\n\nimport { departmentsSelector } from \"../helpers/Recoilhelpers\";\nimport { departments_url } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = `https://reqres.in/api/users?page=1`;\nconst drawerWidth = 240;\nconst fetchUserDetails = selector({\n  key: \"userDetailsSelector\",\n  get: async ({\n    get\n  }) => {\n    try {\n      const res = await fetch(departments_url);\n      const data = await res.json();\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n});\n\nconst Example = () => {\n  _s();\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const userDetails = useRecoilValueLoadable(fetchUserDetails);\n  const {\n    state\n  } = userDetails;\n\n  if (userDetails.state === \"hasError\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" There is some problem! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (state === \"loading\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Its loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (state === \"hasValue\") {\n    const {\n      contents: {\n        fields\n      }\n    } = userDetails;\n    return (// <paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\n      fields.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Name: ${item.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)) // </paper>\n\n    );\n  }\n}; // const DetailsWithSuspense = () => {\n//   const userDetails = useRecoilValue(fetchUserDetails);\n//   const { data } = userDetails;\n//   return data.map((item) => (\n//     <div key={item.id}>\n//       <p>{`Email: ${item.email} Name: ${item.first_name} ${item.last_name}`}</p>\n//     </div>\n//   ));\n// };\n// const Example = () => {\n//   const classes = useStyles();\n//   const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n//   const departsdata = useRecoilValue(departmentsSelector);\n//   return (\n//     <div>\n//       <DetailsWithoutSuspense />\n//     </div>\n//   );\n// };\n\n\n_s(Example, \"uwfBx9VJbPYujfJMC/STZ2S41+w=\", false, function () {\n  return [useStyles, useRecoilValueLoadable];\n});\n\n_c = Example;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    padding: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"black\"\n  },\n  card: {\n    backgroundColor: \"black\"\n  }\n}));\nexport default Example;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Example4.js"],"names":["React","useEffect","makeStyles","clsx","Paper","selector","useRecoilValue","useRecoilValueLoadable","departmentsSelector","departments_url","url","drawerWidth","fetchUserDetails","key","get","res","fetch","data","json","error","Example","classes","useStyles","fixedHeightPaper","paper","fixedHeight","userDetails","state","contents","fields","map","item","name","id","theme","root","flexGrow","container","margin","padding","width","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","backgroundColor","height","spacing","overflow","flexDirection","border","color","bcakgroundColor","card"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { selector, useRecoilValue, useRecoilValueLoadable } from \"recoil\";\r\n// import { useRecoilValue, useSetRecoilState, useRecoilState } from \"recoil\";\r\nimport { departmentsSelector } from \"../helpers/Recoilhelpers\";\r\nimport { departments_url } from \"../utils/constants\";\r\n\r\nconst url = `https://reqres.in/api/users?page=1`;\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst fetchUserDetails = selector({\r\n  key: \"userDetailsSelector\",\r\n  get: async ({ get }) => {\r\n    try {\r\n      const res = await fetch(departments_url);\r\n      const data = await res.json();\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n});\r\n\r\nconst Example = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const userDetails = useRecoilValueLoadable(fetchUserDetails);\r\n  const { state } = userDetails;\r\n\r\n  if (userDetails.state === \"hasError\") {\r\n    return <div> There is some problem! </div>;\r\n  }\r\n\r\n  if (state === \"loading\") {\r\n    return <div>Its loading</div>;\r\n  }\r\n\r\n  if (state === \"hasValue\") {\r\n    const {\r\n      contents: { fields },\r\n    } = userDetails;\r\n    return (\r\n      // <paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n\r\n      fields.map((item) => (\r\n        <div key={item.id}>\r\n          <p>{`Name: ${item.name}`}</p>\r\n        </div>\r\n      ))\r\n\r\n      // </paper>\r\n    );\r\n  }\r\n};\r\n\r\n// const DetailsWithSuspense = () => {\r\n//   const userDetails = useRecoilValue(fetchUserDetails);\r\n//   const { data } = userDetails;\r\n\r\n//   return data.map((item) => (\r\n//     <div key={item.id}>\r\n//       <p>{`Email: ${item.email} Name: ${item.first_name} ${item.last_name}`}</p>\r\n//     </div>\r\n//   ));\r\n// };\r\n\r\n// const Example = () => {\r\n//   const classes = useStyles();\r\n//   const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n//   const departsdata = useRecoilValue(departmentsSelector);\r\n\r\n//   return (\r\n//     <div>\r\n//       <DetailsWithoutSuspense />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n}));\r\n\r\nexport default Example;\r\n"]},"metadata":{},"sourceType":"module"}