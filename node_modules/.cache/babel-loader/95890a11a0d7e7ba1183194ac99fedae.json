{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Payrun.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { format } from \"date-fns\";\nimport axios from \"axios\";\nimport { useAsync } from \"react-async\";\nimport { Button, Paper, Grid, Icon, Divider, TextField, MenuItem } from \"@material-ui/core\";\nimport { employees_url } from \"../utils/constants\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst url = \"https://course-api.com/react-tabs-project\"; // const loadEmp = async () =>\n//   await fetch(employees_url)\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\n//     .then((res) => res.json());\n\nconst Payrun = () => {\n  _s();\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const {\n    addPayrun\n  } = usePayslipsContext();\n  const [input, setInput] = useState({\n    payfreq: \"\",\n    fromdate: null,\n    todate: null,\n    paydate: null,\n    period: \"\"\n  });\n\n  const yyyymmdd = dateIn => {\n    var yyyy = dateIn.getFullYear();\n    var mm = dateIn.getMonth() + 1; // getMonth() is zero-based\n\n    var dd = dateIn.getDate();\n    return String(10000 * yyyy + 100 * mm + dd); // Leading zeros for mm and dd\n  }; // var today = new Date();\n  // console.log(yyyymmdd(today));\n\n\n  const handleChange = e => {\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let date = input.fromdate;\n    let fdate = input.fromdate;\n    let tdate = yyymmdd(input.fromdate);\n    const p = tdate;\n    setInput({ ...input,\n      period: tdate\n    });\n    console.log(input); //update payrun\n    // addPayrun({\n    //   pay_freq: input.payfreq,\n    //   from_date: input.fromdate,\n    //   to_date: input.todate,\n    //   pay_date: input.paydate,\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: fixedHeightPaper,\n    style: {\n      backgroundColor: \"black\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.section,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        sm: 8,\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          className: classes.jobinfo,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Pay Run\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Pay Frequency\",\n                variant: \"filled\",\n                required: true,\n                style: {\n                  width: 350\n                },\n                name: \"payfreq\",\n                value: input.payfreq,\n                onChange: e => handleChange(e),\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Weekly\",\n                  children: \"Weekly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Monthly\",\n                  children: \"Monthly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"From Date\",\n                variant: \"filled\",\n                name: \"fromdate\",\n                type: \"date\",\n                value: input.fromdate,\n                required: true,\n                style: {\n                  width: 350\n                },\n                onChange: e => handleChange(e),\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"To Date\",\n                variant: \"filled\",\n                type: \"date\",\n                name: \"todate\",\n                value: input.todate,\n                required: true,\n                onChange: e => handleChange(e),\n                style: {\n                  width: 350\n                },\n                onChange: handleChange,\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Payment Date\",\n                variant: \"filled\",\n                type: \"date\",\n                name: \"paydate\",\n                value: input.paydate,\n                required: true,\n                style: {\n                  width: 350\n                },\n                onChange: e => handleChange(e),\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                className: classes.button,\n                children: [\"Submit \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 26\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payrun, \"a5v1dl8Yvhuozu1O1bglmCkCxM4=\", false, function () {\n  return [useStyles, usePayslipsContext];\n});\n\n_c = Payrun;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    padding: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"black\"\n  },\n  card: {\n    backgroundColor: \"black\"\n  },\n  section: {\n    width: \"70vw\",\n    margin: \"5rem auto\",\n    maxWidth: \"var(--max-width)\"\n  },\n  underline: {\n    width: \"5rem\",\n    height: \"0.25rem\",\n    marginBottom: \"1.25rem\",\n    background: \"var(--clr-primary-5)\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  title: {\n    marginbottom: \"4rem\",\n    textAlign: \"center\"\n  },\n  jobscenter: {\n    width: \"80vw\",\n    margin: \"0 auto\",\n    maxWidth: \"var(--max-width)\",\n    flexDirection: \"row\"\n  },\n  btncontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: \"4rem\",\n    flexWrap: \"wrap\"\n  },\n  jobbtn: {\n    background: \"transparent\",\n    borderColor: \"transparent\",\n    textTransform: \"capitalize\",\n    fontSize: \"1.25rem\",\n    letterSpacing: \"var(--spacing)\",\n    margin: \"0 0.5rem\",\n    transition: \"var(--transition)\",\n    cursor: \"pointer\",\n    padding: \"0.25rem 0\",\n    lineHeight: \"1\",\n    outlineColor: \"var(--clr-primary-10)\",\n    \"&:hover\": {\n      color: \"var(--clr-primary-5)\",\n      boxShadow: \"0 2px var(--clr-primary-5)\"\n    }\n  },\n  activebtn: {\n    color: \"var(--clr-primary-5)\",\n    boxShadow: \"0 2px var(--clr-primary-5)\"\n  },\n  jobinfo: {\n    fontWeight: \"400\"\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\nexport default Payrun;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payrun\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Payrun.js"],"names":["React","useState","useEffect","makeStyles","clsx","moment","format","axios","useAsync","Button","Paper","Grid","Icon","Divider","TextField","MenuItem","employees_url","usePayslipsContext","drawerWidth","url","Payrun","classes","useStyles","fixedHeightPaper","paper","fixedHeight","addPayrun","input","setInput","payfreq","fromdate","todate","paydate","period","yyyymmdd","dateIn","yyyy","getFullYear","mm","getMonth","dd","getDate","String","handleChange","e","target","name","value","handleSubmit","preventDefault","date","fdate","tdate","yyymmdd","p","console","log","backgroundColor","section","jobinfo","width","shrink","button","rightIcon","theme","root","flexGrow","margin","spacing","container","padding","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","height","overflow","flexDirection","border","color","bcakgroundColor","card","maxWidth","underline","marginBottom","background","marginLeft","marginRight","title","marginbottom","textAlign","jobscenter","btncontainer","flexWrap","jobbtn","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport { format } from \"date-fns\";\r\nimport axios from \"axios\";\r\nimport { useAsync } from \"react-async\";\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Icon,\r\n  Divider,\r\n  TextField,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { employees_url } from \"../utils/constants\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n\r\nconst drawerWidth = 240;\r\nconst url = \"https://course-api.com/react-tabs-project\";\r\n\r\n// const loadEmp = async () =>\r\n//   await fetch(employees_url)\r\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\r\n//     .then((res) => res.json());\r\n\r\nconst Payrun = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { addPayrun } = usePayslipsContext();\r\n  const [input, setInput] = useState({\r\n    payfreq: \"\",\r\n    fromdate: null,\r\n    todate: null,\r\n    paydate: null,\r\n    period: \"\",\r\n  });\r\n\r\n    const yyyymmdd = (dateIn)=> {\r\n      var yyyy = dateIn.getFullYear();\r\n      var mm = dateIn.getMonth() + 1; // getMonth() is zero-based\r\n      var dd = dateIn.getDate();\r\n      return String(10000 * yyyy + 100 * mm + dd); // Leading zeros for mm and dd\r\n    }\r\n\r\n    // var today = new Date();\r\n    // console.log(yyyymmdd(today));\r\n\r\n  const handleChange = (e) => {\r\n    setInput({ ...input, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let date = input.fromdate;\r\n    let fdate = input.fromdate;\r\n\r\n    let tdate = yyymmdd(input.fromdate);\r\n    const p = tdate;\r\n\r\n    setInput({ ...input, period: tdate });\r\n    console.log(input);\r\n    //update payrun\r\n    // addPayrun({\r\n    //   pay_freq: input.payfreq,\r\n    //   from_date: input.fromdate,\r\n    //   to_date: input.todate,\r\n    //   pay_date: input.paydate,\r\n    // });\r\n  };\r\n\r\n  return (\r\n    <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n      <section className={classes.section}>\r\n        <Grid container item sm={8}>\r\n          <article className={classes.jobinfo}>\r\n            <h2>Pay Run</h2>\r\n            <form onSubmit={handleSubmit}>\r\n              <div>\r\n                <TextField\r\n                  label=\"Pay Frequency\"\r\n                  variant=\"filled\"\r\n                  required\r\n                  style={{ width: 350 }}\r\n                  name=\"payfreq\"\r\n                  value={input.payfreq}\r\n                  onChange={(e) => handleChange(e)}\r\n                  select\r\n                >\r\n                  <MenuItem value=\"Weekly\">Weekly</MenuItem>\r\n                  <MenuItem value=\"Monthly\">Monthly</MenuItem>\r\n                </TextField>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"From Date\"\r\n                  variant=\"filled\"\r\n                  name=\"fromdate\"\r\n                  type=\"date\"\r\n                  value={input.fromdate}\r\n                  required\r\n                  style={{ width: 350 }}\r\n                  onChange={(e) => handleChange(e)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"To Date\"\r\n                  variant=\"filled\"\r\n                  type=\"date\"\r\n                  name=\"todate\"\r\n                  value={input.todate}\r\n                  required\r\n                  onChange={(e) => handleChange(e)}\r\n                  style={{ width: 350 }}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Payment Date\"\r\n                  variant=\"filled\"\r\n                  type=\"date\"\r\n                  name=\"paydate\"\r\n                  value={input.paydate}\r\n                  required\r\n                  style={{ width: 350 }}\r\n                  onChange={(e) => handleChange(e)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                >\r\n                  Submit <Icon className={classes.rightIcon}>send</Icon>\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </article>\r\n        </Grid>\r\n      </section>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"70vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default Payrun;\r\n"]},"metadata":{},"sourceType":"module"}