{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\ExpenseTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport { useExpensesContext } from \"../context/expenses_context\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { AlertDialog } from \"../helpers/AlertDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\"\n}, {\n  title: \"From Date\",\n  field: \"from_date\"\n}, {\n  title: \"To Date\",\n  field: \"to_date\"\n}, {\n  title: \"Description\",\n  field: \"description\",\n  type: \"date\"\n}, {\n  title: \"Amount\",\n  field: \"amount\",\n  type: \"numeric\"\n}, {\n  title: \"Status\",\n  field: \"status\"\n}];\nexport default function ExpenseTable() {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const {\n    loadEmployees,\n    employees\n  } = useEmployeesContext();\n  const {\n    expenses,\n    addExpense,\n    editExpenseID,\n    expenses_loading,\n    updateExpense,\n    deleteExpense,\n    loadExpenses,\n    getSingleExpense,\n    setEditExpenseID,\n    setIsExpenseEditingOn,\n    setIsExpenseEditingOff,\n    resetSingleExpense\n  } = useExpensesContext();\n  useEffect(() => {\n    loadExpenses();\n  }, []);\n  useEffect(() => {\n    loadEmployees();\n  }, []);\n\n  const add_Expense = async data => {\n    const {\n      id\n    } = data;\n    resetSingleExpense();\n    setEditExpenseID(\"\");\n    setIsExpenseEditingOff();\n    handleDialogOpen(); // history.push(\"/singleexpense\");\n  };\n\n  const update_Expense = async data => {\n    const {\n      id\n    } = data;\n    setEditExpenseID(id);\n    setIsExpenseEditingOn();\n    getSingleExpense(id);\n    handleDialogOpen(); // history.push(\"/singleexpense\");\n  };\n\n  const delete_Expense = data => {\n    const {\n      id\n    } = data;\n    setEditExpenseID(id);\n    handleAlertOpen(); // deleteExpense(id);\n    // loadExpenses();\n  };\n\n  const handleDialogOpen = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setIsDialogOpen(false);\n    loadExpenses();\n  };\n\n  const handleAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n\n  const handleAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const handleOnDeleteConfirm = () => {\n    const id = editExpenseID;\n    deleteExpense(id);\n    loadExpenses();\n  };\n\n  if (expenses_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: expenses,\n        title: \"Expenses Claims Application\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 37\n          }, this)\n        },\n        actions: [{\n          icon: \"edit\",\n          tooltip: \"Edit Record\",\n          onClick: (event, rowData) => {\n            update_Expense(rowData);\n          }\n        }, {\n          icon: \"delete\",\n          tooltip: \"Delete Record\",\n          onClick: (event, rowData) => {\n            delete_Expense(rowData);\n          }\n        }, {\n          icon: \"add\",\n          tooltip: \"Add Record\",\n          isFreeAction: true,\n          onClick: (event, rowData) => {\n            add_Expense(rowData);\n          }\n        }],\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"#FFF\"\n          },\n          showTitle: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n        isOpen: isDialogOpen,\n        handleClose: handleDialogClose,\n        title: \"\",\n        showButton: true,\n        isFullscree: false,\n        isFullwidth: false,\n        children: /*#__PURE__*/_jsxDEV(ExpenseForm, {\n          handleDialogClose: handleDialogClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n        handleClose: handleAlertClose,\n        onConfirm: handleOnDeleteConfirm,\n        isOpen: isAlertOpen,\n        title: \"Delete Expenses\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Are you sure you want to delete ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseTable, \"ygFIY7X7AUiDd4b9kb0ys0+jvnY=\", false, function () {\n  return [useHistory, useStyles, useEmployeesContext, useExpensesContext];\n});\n\n_c = ExpenseTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/ExpenseTable.js"],"names":["React","useState","useEffect","MaterialTable","MTableToolbar","makeStyles","Button","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","MuiPickersUtilsProvider","DateFnsUtils","DatePicker","useHistory","Link","ExpenseForm","useExpensesContext","useEmployeesContext","CustomDialog","AlertDialog","columns","title","field","type","ExpenseTable","history","classes","useStyles","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","loadEmployees","employees","expenses","addExpense","editExpenseID","expenses_loading","updateExpense","deleteExpense","loadExpenses","getSingleExpense","setEditExpenseID","setIsExpenseEditingOn","setIsExpenseEditingOff","resetSingleExpense","add_Expense","data","id","handleDialogOpen","update_Expense","delete_Expense","handleAlertOpen","handleDialogClose","handleAlertClose","handleOnDeleteConfirm","root","maxWidth","paddingTop","Add","props","Edit","Delete","Clear","Check","Search","ResetSearch","icon","tooltip","onClick","event","rowData","isFreeAction","filtering","headerStyle","backgroundColor","color","showTitle","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\n\r\nconst columns = [\r\n  { title: \"Name\", field: \"name\" },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n  },\r\n  { title: \"Description\", field: \"description\", type: \"date\" },\r\n  { title: \"Amount\", field: \"amount\", type: \"numeric\" },\r\n  { title: \"Status\", field: \"status\" },\r\n];\r\n\r\nexport default function ExpenseTable() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const {\r\n    expenses,\r\n    addExpense,\r\n    editExpenseID,\r\n    expenses_loading,\r\n    updateExpense,\r\n    deleteExpense,\r\n    loadExpenses,\r\n    getSingleExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n    resetSingleExpense,\r\n  } = useExpensesContext();\r\n\r\n  useEffect(() => {\r\n    loadExpenses();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadEmployees();\r\n  }, []);\r\n\r\n  const add_Expense = async (data) => {\r\n    const { id } = data;\r\n    resetSingleExpense();\r\n    setEditExpenseID(\"\");\r\n    setIsExpenseEditingOff();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const update_Expense = async (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    setIsExpenseEditingOn();\r\n    getSingleExpense(id);\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Expense = (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    handleAlertOpen();\r\n\r\n    // deleteExpense(id);\r\n    // loadExpenses();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadExpenses();\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpense(id);\r\n    loadExpenses();\r\n  };\r\n\r\n  if (expenses_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expenses}\r\n          title=\"Expenses Claims Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Expense(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Expense(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Expense(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseForm handleDialogClose={handleDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}