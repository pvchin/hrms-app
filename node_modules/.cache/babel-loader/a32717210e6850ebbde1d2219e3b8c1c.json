{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Payrun.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MaterialTable from \"material-table\";\nimport clsx from \"clsx\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { format } from \"date-fns\";\nimport axios from \"axios\";\nimport { useAsync } from \"react-async\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { Button, Checkbox, Paper, Grid, Icon, Divider, TextField, MenuItem, FormControlLabel } from \"@material-ui/core\";\nimport { RecoilRoot, atom, selector, useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { employees_url } from \"../utils/constants\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { payrunState, payPeriodIdState, paydataState } from \"./data/atomdata\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst url = \"https://course-api.com/react-tabs-project\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\",\n  editable: \"never\",\n  cellStyle: {\n    width: 280,\n    maxWidth: 280\n  }\n}];\n\nconst Payrun = () => {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const {\n    loadEmployees,\n    employees\n  } = useEmployeesContext();\n  const {\n    addPayrun,\n    getPayrun,\n    payrun,\n    payrun_loading,\n    payslipsdata,\n    setPayslipsData,\n    resetPayslipsData\n  } = usePayslipsContext();\n  const [input, setInput] = useRecoilState(payrunState);\n  const [alert, setAlert] = useState(false);\n  const [error, setError] = useState(false);\n  const [tempdata, setTempdata] = useState([]);\n\n  function formatDate(string) {\n    var options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    };\n    return new Date(string).toLocaleDateString(\"en-GB\", options);\n  }\n\n  function formatPayrun() {\n    const yy = input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\n    const mm = input.fromdate.substring(5, 7);\n    const d = input.fromdate;\n    console.log(\"payrun\", yy, mm, d);\n  }\n\n  const handleChange = e => {\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handlePayrunSubmit = e => {\n    e.preventDefault();\n    const period = formatDate(input.fromdate) + \" - \" + formatDate(input.todate);\n    const payrun = input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\n    setInput({ ...input,\n      period: period,\n      payrun: payrun\n    });\n    formatPayrun();\n    checkSelectedEmployees();\n  };\n\n  const checkSelectedEmployees = () => {\n    let items = [];\n    let payitems = [];\n    resetPayslipsData();\n    employees.forEach((emp, index) => {\n      const {\n        id,\n        name,\n        bank_name,\n        bank_acno,\n        basic_salary,\n        nett_pay,\n        tap_acno,\n        tap_amount,\n        scp_acno,\n        scp_amount\n      } = emp;\n      const data = {\n        name: name,\n        period: input.period,\n        date: input.pay_date,\n        payrun: input.payrun,\n        basic_pay: basic_salary,\n        nett_pay: nett_pay,\n        bank_name: bank_name,\n        bank_acno: bank_acno,\n        tap_acno: tap_acno,\n        tap_amount: tap_amount,\n        scp_acno: scp_acno,\n        scp_amount: scp_amount,\n        empid: id,\n        status: \"Pending\",\n        allows_type1: \"Basic Salary\",\n        allows_type1amt: basic_salary,\n        allows_type2: \"\",\n        allows_type2amt: 0,\n        allows_type3: \"\",\n        allows_type3amt: 0,\n        allows_type4: \"\",\n        allows_type4amt: 0,\n        allows_type5: \"\",\n        allows_type5amt: 0,\n        allows_type6: \"\",\n        allows_type6amt: 0,\n        allows_type7: \"\",\n        allows_type7amt: 0,\n        allows_type8: \"\",\n        allows_type8amt: 0,\n        deducts_type1: \"\",\n        deducts_type1amt: 0,\n        deducts_type2: \"\",\n        deducts_type2amt: 0,\n        deducts_type3: \"\",\n        deducts_type3amt: 0,\n        deducts_type4: \"\",\n        deducts_type4amt: 0,\n        deducts_type5: \"\",\n        deducts_type5amt: 0,\n        deducts_type6: \"\",\n        deducts_type6amt: 0,\n        deducts_type7: \"\",\n        deducts_type7amt: 0,\n        deducts_type8: \"\",\n        deducts_type8amt: 0\n      };\n      addPayslip({ ...data\n      });\n    });\n  };\n\n  const build_Payslip = () => {\n    // loadEmployees();\n    console.log(current_period);\n    getSingleBatchPayslip(payslip_period);\n    const paydata = singlebatchpayslip.map(e => e.name) || [];\n    {\n      employees.map(emp => {\n        const {\n          id,\n          name,\n          bank_name,\n          bank_acno,\n          basic_salary,\n          nett_pay,\n          tap_acno,\n          tap_amount,\n          scp_acno,\n          scp_amount\n        } = emp;\n        const data = {\n          name: name,\n          period: input.period,\n          date: input.pay_date,\n          payrun: input.payrun,\n          basic_pay: basic_salary,\n          nett_pay: nett_pay,\n          bank_name: bank_name,\n          bank_acno: bank_acno,\n          tap_acno: tap_acno,\n          tap_amount: tap_amount,\n          scp_acno: scp_acno,\n          scp_amount: scp_amount,\n          empid: id,\n          status: \"Pending\",\n          allows_type1: \"Basic Salary\",\n          allows_type1amt: basic_salary,\n          allows_type2: \"\",\n          allows_type2amt: 0,\n          allows_type3: \"\",\n          allows_type3amt: 0,\n          allows_type4: \"\",\n          allows_type4amt: 0,\n          allows_type5: \"\",\n          allows_type5amt: 0,\n          allows_type6: \"\",\n          allows_type6amt: 0,\n          allows_type7: \"\",\n          allows_type7amt: 0,\n          allows_type8: \"\",\n          allows_type8amt: 0,\n          deducts_type1: \"\",\n          deducts_type1amt: 0,\n          deducts_type2: \"\",\n          deducts_type2amt: 0,\n          deducts_type3: \"\",\n          deducts_type3amt: 0,\n          deducts_type4: \"\",\n          deducts_type4amt: 0,\n          deducts_type5: \"\",\n          deducts_type5amt: 0,\n          deducts_type6: \"\",\n          deducts_type6amt: 0,\n          deducts_type7: \"\",\n          deducts_type7amt: 0,\n          deducts_type8: \"\",\n          deducts_type8amt: 0\n        };\n\n        if (paydata) {\n          const res = paydata.includes(emp.name);\n\n          if (!res) {\n            console.log(\"add\", data);\n            addPayslip({ ...data\n            });\n          } else {\n            addPayslip({ ...data\n            });\n          }\n        }\n      });\n    }\n    getSingleBatchPayslip(payslip_period);\n  };\n\n  const handleNext = () => {\n    console.log(payslipsdata);\n    history.push(\"/payrunbatch\");\n  };\n\n  const add_Payrun = () => {\n    //update payrun\n    addPayrun({\n      pay_freq: input.payfreq,\n      from_date: input.fromdate,\n      to_date: input.todate,\n      pay_date: input.paydate,\n      period: input.period,\n      payrun: input.payrun\n    });\n    getPayrun();\n  };\n\n  useEffect(() => {\n    loadEmployees();\n    getPayrun();\n  }, []);\n  useEffect(() => {}, [payslipsdata]);\n  useEffect(() => {\n    if (input.period && input.payrun) {\n      add_Payrun();\n      setAlert(true);\n    }\n  }, [input]);\n\n  if (payrun_loading) {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: fixedHeightPaper,\n    style: {\n      backgroundColor: \"black\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.section,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        direction: \"row\",\n        container: true,\n        spacing: 1,\n        style: {\n          border: \"1px solid white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          sm: 3,\n          direction: \"column\",\n          align: \"left\",\n          children: /*#__PURE__*/_jsxDEV(\"article\", {\n            className: classes.jobinfo,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Pay Run\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handlePayrunSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Pay Frequency\",\n                  variant: \"filled\",\n                  required: true,\n                  style: {\n                    width: 250\n                  },\n                  name: \"payfreq\",\n                  value: input.payfreq,\n                  onChange: e => handleChange(e),\n                  select: true,\n                  children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Monthly\",\n                    children: \"Monthly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"From Date\",\n                  variant: \"filled\",\n                  name: \"fromdate\",\n                  type: \"date\",\n                  value: input.fromdate,\n                  required: true,\n                  style: {\n                    width: 250\n                  },\n                  onChange: e => handleChange(e),\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"To Date\",\n                  variant: \"filled\",\n                  type: \"date\",\n                  name: \"todate\",\n                  value: input.todate,\n                  required: true,\n                  onChange: e => handleChange(e),\n                  style: {\n                    width: 250\n                  },\n                  onChange: handleChange,\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Payment Date\",\n                  variant: \"filled\",\n                  type: \"date\",\n                  name: \"paydate\",\n                  value: input.paydate,\n                  required: true,\n                  style: {\n                    width: 250\n                  },\n                  onChange: e => handleChange(e),\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  className: classes.button,\n                  children: [\"Submit \", /*#__PURE__*/_jsxDEV(Icon, {\n                    className: classes.rightIcon,\n                    children: \"send\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 28\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 19\n                }, this), alert && payslipsdata.pay && /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  className: classes.button,\n                  onClick: handleNext,\n                  children: [\"Next \", /*#__PURE__*/_jsxDEV(Icon, {\n                    className: classes.rightIcon,\n                    children: \"send\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 28\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: alert && /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"New Payrun being added!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 32\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: error && /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"This Payrun period already existed!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          flexItem: true,\n          style: {\n            background: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          sm: 8,\n          align: \"right\",\n          children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n            columns: columns,\n            data: employees,\n            title: \"Payrun History\",\n            options: {\n              filtering: false,\n              search: false,\n              toolbar: false,\n              selection: true,\n              headerStyle: {\n                backgroundColor: \"orange\",\n                color: \"primary\"\n              },\n              showTitle: false\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payrun, \"+MfxxzsZGoatkFRsXBPa+Yrza5A=\", false, function () {\n  return [useHistory, useStyles, useEmployeesContext, usePayslipsContext, useRecoilState];\n});\n\n_c = Payrun;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    padding: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"black\"\n  },\n  card: {\n    backgroundColor: \"black\"\n  },\n  section: {\n    width: \"95vw\",\n    margin: \"5rem auto\",\n    maxWidth: \"var(--max-width)\"\n  },\n  underline: {\n    width: \"5rem\",\n    height: \"0.25rem\",\n    marginBottom: \"1.25rem\",\n    background: \"var(--clr-primary-5)\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  title: {\n    marginbottom: \"4rem\",\n    textAlign: \"center\"\n  },\n  jobscenter: {\n    width: \"80vw\",\n    margin: \"0 auto\",\n    maxWidth: \"var(--max-width)\",\n    flexDirection: \"row\"\n  },\n  btncontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: \"4rem\",\n    flexWrap: \"wrap\"\n  },\n  jobbtn: {\n    background: \"transparent\",\n    borderColor: \"transparent\",\n    textTransform: \"capitalize\",\n    fontSize: \"1.25rem\",\n    letterSpacing: \"var(--spacing)\",\n    margin: \"0 0.5rem\",\n    transition: \"var(--transition)\",\n    cursor: \"pointer\",\n    padding: \"0.25rem 0\",\n    lineHeight: \"1\",\n    outlineColor: \"var(--clr-primary-10)\",\n    \"&:hover\": {\n      color: \"var(--clr-primary-5)\",\n      boxShadow: \"0 2px var(--clr-primary-5)\"\n    }\n  },\n  activebtn: {\n    color: \"var(--clr-primary-5)\",\n    boxShadow: \"0 2px var(--clr-primary-5)\"\n  },\n  jobinfo: {\n    fontWeight: \"400\"\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\nexport default Payrun;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payrun\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Payrun.js"],"names":["React","useState","useEffect","makeStyles","MaterialTable","clsx","useHistory","moment","format","axios","useAsync","Alert","Button","Checkbox","Paper","Grid","Icon","Divider","TextField","MenuItem","FormControlLabel","RecoilRoot","atom","selector","useRecoilState","useRecoilValue","useSetRecoilState","employees_url","useEmployeesContext","usePayslipsContext","payrunState","payPeriodIdState","paydataState","drawerWidth","url","columns","title","field","editable","cellStyle","width","maxWidth","Payrun","history","classes","useStyles","fixedHeightPaper","paper","fixedHeight","loadEmployees","employees","addPayrun","getPayrun","payrun","payrun_loading","payslipsdata","setPayslipsData","resetPayslipsData","input","setInput","alert","setAlert","error","setError","tempdata","setTempdata","formatDate","string","options","year","month","day","Date","toLocaleDateString","formatPayrun","yy","fromdate","substring","mm","d","console","log","handleChange","e","target","name","value","handlePayrunSubmit","preventDefault","period","todate","checkSelectedEmployees","items","payitems","forEach","emp","index","id","bank_name","bank_acno","basic_salary","nett_pay","tap_acno","tap_amount","scp_acno","scp_amount","data","date","pay_date","basic_pay","empid","status","allows_type1","allows_type1amt","allows_type2","allows_type2amt","allows_type3","allows_type3amt","allows_type4","allows_type4amt","allows_type5","allows_type5amt","allows_type6","allows_type6amt","allows_type7","allows_type7amt","allows_type8","allows_type8amt","deducts_type1","deducts_type1amt","deducts_type2","deducts_type2amt","deducts_type3","deducts_type3amt","deducts_type4","deducts_type4amt","deducts_type5","deducts_type5amt","deducts_type6","deducts_type6amt","deducts_type7","deducts_type7amt","deducts_type8","deducts_type8amt","addPayslip","build_Payslip","current_period","getSingleBatchPayslip","payslip_period","paydata","singlebatchpayslip","map","res","includes","handleNext","push","add_Payrun","pay_freq","payfreq","from_date","to_date","paydate","backgroundColor","section","border","jobinfo","shrink","button","rightIcon","pay","background","filtering","search","toolbar","selection","headerStyle","color","showTitle","theme","root","flexGrow","margin","spacing","container","padding","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","height","overflow","flexDirection","bcakgroundColor","card","underline","marginBottom","marginLeft","marginRight","marginbottom","textAlign","jobscenter","btncontainer","flexWrap","jobbtn","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { format } from \"date-fns\";\r\nimport axios from \"axios\";\r\nimport { useAsync } from \"react-async\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Paper,\r\n  Grid,\r\n  Icon,\r\n  Divider,\r\n  TextField,\r\n  MenuItem,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  RecoilRoot,\r\n  atom,\r\n  selector,\r\n  useRecoilState,\r\n  useRecoilValue,\r\n  useSetRecoilState,\r\n} from \"recoil\";\r\n\r\nimport { employees_url } from \"../utils/constants\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { payrunState, payPeriodIdState, paydataState } from \"./data/atomdata\";\r\n\r\nconst drawerWidth = 240;\r\nconst url = \"https://course-api.com/react-tabs-project\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 280,\r\n      maxWidth: 280,\r\n    },\r\n  },\r\n];\r\n\r\nconst Payrun = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const {\r\n    addPayrun,\r\n    getPayrun,\r\n    payrun,\r\n    payrun_loading,\r\n    payslipsdata,\r\n    setPayslipsData,\r\n    resetPayslipsData,\r\n  } = usePayslipsContext();\r\n  const [input, setInput] = useRecoilState(payrunState);\r\n  const [alert, setAlert] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [tempdata, setTempdata] = useState([]);\r\n\r\n  function formatDate(string) {\r\n    var options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n    return new Date(string).toLocaleDateString(\"en-GB\", options);\r\n  }\r\n\r\n  function formatPayrun() {\r\n    const yy =\r\n      input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\r\n    const mm = input.fromdate.substring(5, 7);\r\n    const d = input.fromdate;\r\n    console.log(\"payrun\", yy, mm, d);\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setInput({ ...input, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handlePayrunSubmit = (e) => {\r\n    e.preventDefault();\r\n    const period =\r\n      formatDate(input.fromdate) + \" - \" + formatDate(input.todate);\r\n    const payrun =\r\n      input.fromdate.substring(0, 4) + \"-\" + input.fromdate.substring(5, 7);\r\n    setInput({ ...input, period: period, payrun: payrun });\r\n    formatPayrun();\r\n    checkSelectedEmployees();\r\n  };\r\n\r\n  const checkSelectedEmployees = () => {\r\n    let items = [];\r\n    let payitems = [];\r\n    resetPayslipsData();\r\n    employees.forEach((emp, index) => {\r\n      const {\r\n        id,\r\n        name,\r\n        bank_name,\r\n        bank_acno,\r\n        basic_salary,\r\n        nett_pay,\r\n        tap_acno,\r\n        tap_amount,\r\n        scp_acno,\r\n        scp_amount,\r\n      } = emp;\r\n      const data = {\r\n        name: name,\r\n        period: input.period,\r\n        date: input.pay_date,\r\n        payrun: input.payrun,\r\n        basic_pay: basic_salary,\r\n        nett_pay: nett_pay,\r\n        bank_name: bank_name,\r\n        bank_acno: bank_acno,\r\n        tap_acno: tap_acno,\r\n        tap_amount: tap_amount,\r\n        scp_acno: scp_acno,\r\n        scp_amount: scp_amount,\r\n        empid: id,\r\n        status: \"Pending\",\r\n        allows_type1: \"Basic Salary\",\r\n        allows_type1amt: basic_salary,\r\n        allows_type2: \"\",\r\n        allows_type2amt: 0,\r\n        allows_type3: \"\",\r\n        allows_type3amt: 0,\r\n        allows_type4: \"\",\r\n        allows_type4amt: 0,\r\n        allows_type5: \"\",\r\n        allows_type5amt: 0,\r\n        allows_type6: \"\",\r\n        allows_type6amt: 0,\r\n        allows_type7: \"\",\r\n        allows_type7amt: 0,\r\n        allows_type8: \"\",\r\n        allows_type8amt: 0,\r\n        deducts_type1: \"\",\r\n        deducts_type1amt: 0,\r\n        deducts_type2: \"\",\r\n        deducts_type2amt: 0,\r\n        deducts_type3: \"\",\r\n        deducts_type3amt: 0,\r\n        deducts_type4: \"\",\r\n        deducts_type4amt: 0,\r\n        deducts_type5: \"\",\r\n        deducts_type5amt: 0,\r\n        deducts_type6: \"\",\r\n        deducts_type6amt: 0,\r\n        deducts_type7: \"\",\r\n        deducts_type7amt: 0,\r\n        deducts_type8: \"\",\r\n        deducts_type8amt: 0,\r\n      };\r\n       addPayslip({ ...data });\r\n      \r\n    });\r\n  };\r\n\r\n  const build_Payslip = () => {\r\n    // loadEmployees();\r\n    console.log(current_period);\r\n    getSingleBatchPayslip(payslip_period);\r\n    const paydata = singlebatchpayslip.map((e) => e.name) || [];\r\n\r\n    {\r\n      employees.map((emp) => {\r\n        const {\r\n          id,\r\n          name,\r\n          bank_name,\r\n          bank_acno,\r\n          basic_salary,\r\n          nett_pay,\r\n          tap_acno,\r\n          tap_amount,\r\n          scp_acno,\r\n          scp_amount,\r\n        } = emp;\r\n        const data = {\r\n          name: name,\r\n          period: input.period,\r\n          date: input.pay_date,\r\n          payrun: input.payrun,\r\n          basic_pay: basic_salary,\r\n          nett_pay: nett_pay,\r\n          bank_name: bank_name,\r\n          bank_acno: bank_acno,\r\n          tap_acno: tap_acno,\r\n          tap_amount: tap_amount,\r\n          scp_acno: scp_acno,\r\n          scp_amount: scp_amount,\r\n          empid: id,\r\n          status: \"Pending\",\r\n          allows_type1: \"Basic Salary\",\r\n          allows_type1amt: basic_salary,\r\n          allows_type2: \"\",\r\n          allows_type2amt: 0,\r\n          allows_type3: \"\",\r\n          allows_type3amt: 0,\r\n          allows_type4: \"\",\r\n          allows_type4amt: 0,\r\n          allows_type5: \"\",\r\n          allows_type5amt: 0,\r\n          allows_type6: \"\",\r\n          allows_type6amt: 0,\r\n          allows_type7: \"\",\r\n          allows_type7amt: 0,\r\n          allows_type8: \"\",\r\n          allows_type8amt: 0,\r\n          deducts_type1: \"\",\r\n          deducts_type1amt: 0,\r\n          deducts_type2: \"\",\r\n          deducts_type2amt: 0,\r\n          deducts_type3: \"\",\r\n          deducts_type3amt: 0,\r\n          deducts_type4: \"\",\r\n          deducts_type4amt: 0,\r\n          deducts_type5: \"\",\r\n          deducts_type5amt: 0,\r\n          deducts_type6: \"\",\r\n          deducts_type6amt: 0,\r\n          deducts_type7: \"\",\r\n          deducts_type7amt: 0,\r\n          deducts_type8: \"\",\r\n          deducts_type8amt: 0,\r\n        };\r\n        if (paydata) {\r\n          const res = paydata.includes(emp.name);\r\n          if (!res) {\r\n            console.log(\"add\", data);\r\n            addPayslip({ ...data });\r\n          } else {\r\n            addPayslip({ ...data });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    getSingleBatchPayslip(payslip_period);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    console.log(payslipsdata);\r\n    history.push(\"/payrunbatch\");\r\n  };\r\n\r\n  const add_Payrun = () => {\r\n    //update payrun\r\n    addPayrun({\r\n      pay_freq: input.payfreq,\r\n      from_date: input.fromdate,\r\n      to_date: input.todate,\r\n      pay_date: input.paydate,\r\n      period: input.period,\r\n      payrun: input.payrun,\r\n    });\r\n    getPayrun();\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadEmployees();\r\n    getPayrun();\r\n  }, []);\r\n\r\n  useEffect(() => {}, [payslipsdata]);\r\n\r\n  useEffect(() => {\r\n    if (input.period && input.payrun) {\r\n      add_Payrun();\r\n      setAlert(true);\r\n    }\r\n  }, [input]);\r\n\r\n  if (payrun_loading) {\r\n    <div>\r\n      <h2>Loading....</h2>\r\n    </div>;\r\n  }\r\n\r\n  return (\r\n    <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n      <section className={classes.section}>\r\n        <Grid\r\n          direction=\"row\"\r\n          container\r\n          spacing={1}\r\n          style={{ border: \"1px solid white\" }}\r\n        >\r\n          <Grid container item sm={3} direction=\"column\" align=\"left\">\r\n            <article className={classes.jobinfo}>\r\n              <h2>Pay Run</h2>\r\n              <form onSubmit={handlePayrunSubmit}>\r\n                <div>\r\n                  <TextField\r\n                    label=\"Pay Frequency\"\r\n                    variant=\"filled\"\r\n                    required\r\n                    style={{ width: 250 }}\r\n                    name=\"payfreq\"\r\n                    value={input.payfreq}\r\n                    onChange={(e) => handleChange(e)}\r\n                    select\r\n                  >\r\n                    {/* <MenuItem value=\"Weekly\">Weekly</MenuItem> */}\r\n                    <MenuItem value=\"Monthly\">Monthly</MenuItem>\r\n                  </TextField>\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"From Date\"\r\n                    variant=\"filled\"\r\n                    name=\"fromdate\"\r\n                    type=\"date\"\r\n                    value={input.fromdate}\r\n                    required\r\n                    style={{ width: 250 }}\r\n                    onChange={(e) => handleChange(e)}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"To Date\"\r\n                    variant=\"filled\"\r\n                    type=\"date\"\r\n                    name=\"todate\"\r\n                    value={input.todate}\r\n                    required\r\n                    onChange={(e) => handleChange(e)}\r\n                    style={{ width: 250 }}\r\n                    onChange={handleChange}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label=\"Payment Date\"\r\n                    variant=\"filled\"\r\n                    type=\"date\"\r\n                    name=\"paydate\"\r\n                    value={input.paydate}\r\n                    required\r\n                    style={{ width: 250 }}\r\n                    onChange={(e) => handleChange(e)}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                  >\r\n                    Submit <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                  {alert && payslipsdata.pay && (\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      onClick={handleNext}\r\n                    >\r\n                      Next <Icon className={classes.rightIcon}>send</Icon>\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n                <div>{alert && <h3>New Payrun being added!</h3>}</div>\r\n                <div>\r\n                  {error && <h3>This Payrun period already existed!</h3>}\r\n                </div>\r\n              </form>\r\n            </article>\r\n          </Grid>\r\n          <Divider\r\n            orientation=\"vertical\"\r\n            flexItem\r\n            style={{ background: \"white\" }}\r\n          />\r\n          <Grid container item sm={8} align=\"right\">\r\n            <MaterialTable\r\n              columns={columns}\r\n              data={employees}\r\n              title=\"Payrun History\"\r\n              options={{\r\n                filtering: false,\r\n                search: false,\r\n                toolbar: false,\r\n                selection: true,\r\n                headerStyle: {\r\n                  backgroundColor: \"orange\",\r\n                  color: \"primary\",\r\n                },\r\n                showTitle: false,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"95vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default Payrun;\r\n"]},"metadata":{},"sourceType":"module"}