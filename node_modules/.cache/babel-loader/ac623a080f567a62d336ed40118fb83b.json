{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\context\\\\tables_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport reducer from \"../reducers/tables_reducer\";\nimport { allowances_url } from \"../utils/constants\";\nimport { deductions_url } from \"../utils/constants\";\nimport { departments_url } from \"../utils/constants\";\nimport { designations_url } from \"../utils/constants\";\nimport { GET_ALLOWANCES_BEGIN, GET_ALLOWANCES_SUCCESS, GET_ALLOWANCES_ERROR, GET_DEDUCTIONS_BEGIN, GET_DEDUCTIONS_SUCCESS, GET_DEDUCTIONS_ERROR, GET_DEPARTMENTS_BEGIN, GET_DEPARTMENTS_SUCCESS, GET_DEPARTMENTS_ERROR, GET_DESIGNATIONS_BEGIN, GET_DESIGNATIONS_SUCCESS, GET_DESIGNATIONS_ERROR } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  allowances: [],\n  allowances_loading: [],\n  deductions: [],\n  deductions_loading: [],\n  departments: [],\n  departments_loading: [],\n  designatons: [],\n  designations_loading: []\n};\nconst TablesContext = /*#__PURE__*/React.createContext();\nexport const TablesProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState); // Allowances\n\n  const loadAllowances = async () => {\n    dispatch({\n      type: GET_ALLOWANCES_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(allowances_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const allowances = await res.json();\n      dispatch({\n        type: GET_ALLOWANCES_SUCCESS,\n        payload: allowances\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_ALLOWANCES_ERROR\n      });\n    }\n  };\n\n  const addAllowance = async data => {\n    const {\n      id,\n      name\n    } = data; //\n\n    dispatch({\n      type: ADD_ALLOWANCE_BEGIN\n    });\n\n    try {\n      await fetch(allowances_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_ALLOWANCE_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_ALLOWANCE_ERROR\n      });\n    }\n  };\n\n  const updateAllowance = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_ALLOWANCE_BEGIN\n    });\n\n    try {\n      await fetch(allowances_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_ALLOWANCE_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_ALLOWANCE_ERROR\n      });\n    }\n  };\n\n  const deleteAllowance = async id => {\n    dispatch({\n      type: DELETE_ALLOWANCE_BEGIN\n    });\n\n    try {\n      await fetch(allowances_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_ALLOWANCE_SUCCESS\n      }); //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_ALLOWANCE_ERROR\n      });\n    }\n  }; // Deductions\n\n\n  const loadDeductions = async () => {\n    dispatch({\n      type: GET_DEDUCTIONS_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(deductions_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const deductions = await res.json();\n      dispatch({\n        type: GET_DEDUCTIONS_SUCCESS,\n        payload: deductions\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_DEDUCTIONS_ERROR\n      });\n    }\n  };\n\n  const addDeduction = async data => {\n    const {\n      id,\n      name\n    } = data; //\n\n    dispatch({\n      type: ADD_DEDUCTION_BEGIN\n    });\n\n    try {\n      await fetch(deductions_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_DEDUCTION_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_DEDUCTION_ERROR\n      });\n    }\n  };\n\n  const updateDeduction = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_DEDUCTION_BEGIN\n    });\n\n    try {\n      await fetch(deductions_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_DEDUCTION_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_DEDUCTION_ERROR\n      });\n    }\n  };\n\n  const deleteDeduction = async id => {\n    dispatch({\n      type: DELETE_DEDUCTION_BEGIN\n    });\n\n    try {\n      await fetch(deductions_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_DEDUCTION_SUCCESS\n      }); //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_DEDUCTION_ERROR\n      });\n    }\n  }; // Departments\n\n\n  const loadDepartments = async () => {\n    dispatch({\n      type: GET_DEPARTMENTS_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(departments_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const departments = await res.json();\n      dispatch({\n        type: GET_DEPARTMENTS_SUCCESS,\n        payload: departments\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_DEPARTMENTS_ERROR\n      });\n    }\n  };\n\n  const addDepartment = async data => {\n    const {\n      id,\n      name\n    } = data; //\n\n    dispatch({\n      type: ADD_DEPARTMENT_BEGIN\n    });\n\n    try {\n      await fetch(departments_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_DEPARTMENT_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_DEPARTMENT_ERROR\n      });\n    }\n  };\n\n  const updateDepartment = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_DEPARTMENT_BEGIN\n    });\n\n    try {\n      await fetch(departments_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_DEPARTMENT_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_DEPARTMENT_ERROR\n      });\n    }\n  };\n\n  const deleteDepartment = async id => {\n    dispatch({\n      type: DELETE_DEPARTMENT_BEGIN\n    });\n\n    try {\n      await fetch(departments_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_DEPARTMENT_SUCCESS\n      }); //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_DEPARTMENT_ERROR\n      });\n    }\n  }; // Designations\n\n\n  const loadDesignations = async () => {\n    dispatch({\n      type: GET_DESIGNATIONS_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(designations_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const designations = await res.json();\n      dispatch({\n        type: GET_DESIGNATIONS_SUCCESS,\n        payload: designations\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_DESIGNATIONS_ERROR\n      });\n    }\n  };\n\n  const addDesignation = async data => {\n    const {\n      id,\n      name\n    } = data; //\n\n    dispatch({\n      type: ADD_DESIGNATION_BEGIN\n    });\n\n    try {\n      await fetch(designations_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_DESIGNATION_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_DESIGNATION_ERROR\n      });\n    }\n  };\n\n  const updateDesignation = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_DESIGNATION_BEGIN\n    });\n\n    try {\n      await fetch(designations_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_DESIGNATION_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_DESIGNATION_ERROR\n      });\n    }\n  };\n\n  const deleteDesignation = async id => {\n    dispatch({\n      type: DELETE_DESIGNATION_BEGIN\n    });\n\n    try {\n      await fetch(designations_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_DESIGNATION_SUCCESS\n      }); //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_DESIGNATION_ERROR\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TablesContext.Provider, {\n    value: { ...state,\n      loadAllowances,\n      addAllowance,\n      deleteAllowance,\n      updateAllowance,\n      loadDeductions,\n      loadDepartments,\n      loadDesignations\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TablesProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TablesProvider;\nexport const useTablesContext = () => {\n  _s2();\n\n  return useContext(TablesContext);\n};\n\n_s2(useTablesContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TablesProvider\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/context/tables_context.js"],"names":["React","useContext","useEffect","useReducer","axios","reducer","allowances_url","deductions_url","departments_url","designations_url","GET_ALLOWANCES_BEGIN","GET_ALLOWANCES_SUCCESS","GET_ALLOWANCES_ERROR","GET_DEDUCTIONS_BEGIN","GET_DEDUCTIONS_SUCCESS","GET_DEDUCTIONS_ERROR","GET_DEPARTMENTS_BEGIN","GET_DEPARTMENTS_SUCCESS","GET_DEPARTMENTS_ERROR","GET_DESIGNATIONS_BEGIN","GET_DESIGNATIONS_SUCCESS","GET_DESIGNATIONS_ERROR","initialState","allowances","allowances_loading","deductions","deductions_loading","departments","departments_loading","designatons","designations_loading","TablesContext","createContext","TablesProvider","children","state","dispatch","loadAllowances","type","res","fetch","json","payload","error","addAllowance","data","id","name","ADD_ALLOWANCE_BEGIN","method","body","JSON","stringify","ADD_ALLOWANCE_SUCCESS","err","ADD_ALLOWANCE_ERROR","updateAllowance","fields","UPDATE_ALLOWANCE_BEGIN","UPDATE_ALLOWANCE_SUCCESS","UPDATE_ALLOWANCE_ERROR","deleteAllowance","DELETE_ALLOWANCE_BEGIN","DELETE_ALLOWANCE_SUCCESS","DELETE_ALLOWANCE_ERROR","loadDeductions","addDeduction","ADD_DEDUCTION_BEGIN","ADD_DEDUCTION_SUCCESS","ADD_DEDUCTION_ERROR","updateDeduction","UPDATE_DEDUCTION_BEGIN","UPDATE_DEDUCTION_SUCCESS","UPDATE_DEDUCTION_ERROR","deleteDeduction","DELETE_DEDUCTION_BEGIN","DELETE_DEDUCTION_SUCCESS","DELETE_DEDUCTION_ERROR","loadDepartments","addDepartment","ADD_DEPARTMENT_BEGIN","ADD_DEPARTMENT_SUCCESS","ADD_DEPARTMENT_ERROR","updateDepartment","UPDATE_DEPARTMENT_BEGIN","UPDATE_DEPARTMENT_SUCCESS","UPDATE_DEPARTMENT_ERROR","deleteDepartment","DELETE_DEPARTMENT_BEGIN","DELETE_DEPARTMENT_SUCCESS","DELETE_DEPARTMENT_ERROR","loadDesignations","designations","addDesignation","ADD_DESIGNATION_BEGIN","ADD_DESIGNATION_SUCCESS","ADD_DESIGNATION_ERROR","updateDesignation","UPDATE_DESIGNATION_BEGIN","UPDATE_DESIGNATION_SUCCESS","UPDATE_DESIGNATION_ERROR","deleteDesignation","DELETE_DESIGNATION_BEGIN","DELETE_DESIGNATION_SUCCESS","DELETE_DESIGNATION_ERROR","useTablesContext"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/tables_reducer\";\r\nimport { allowances_url } from \"../utils/constants\";\r\nimport { deductions_url } from \"../utils/constants\";\r\nimport { departments_url } from \"../utils/constants\";\r\nimport { designations_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  GET_ALLOWANCES_BEGIN,\r\n  GET_ALLOWANCES_SUCCESS,\r\n  GET_ALLOWANCES_ERROR,\r\n  GET_DEDUCTIONS_BEGIN,\r\n  GET_DEDUCTIONS_SUCCESS,\r\n  GET_DEDUCTIONS_ERROR,\r\n  GET_DEPARTMENTS_BEGIN,\r\n  GET_DEPARTMENTS_SUCCESS,\r\n  GET_DEPARTMENTS_ERROR,\r\n  GET_DESIGNATIONS_BEGIN,\r\n  GET_DESIGNATIONS_SUCCESS,\r\n  GET_DESIGNATIONS_ERROR,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  allowances: [],\r\n  allowances_loading: [],\r\n  deductions: [],\r\n  deductions_loading: [],\r\n  departments: [],\r\n  departments_loading: [],\r\n  designatons: [],\r\n  designations_loading: [],\r\n};\r\n\r\nconst TablesContext = React.createContext();\r\n\r\nexport const TablesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  // Allowances\r\n  const loadAllowances = async () => {\r\n    dispatch({ type: GET_ALLOWANCES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(allowances_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const allowances = await res.json();\r\n      dispatch({ type: GET_ALLOWANCES_SUCCESS, payload: allowances });\r\n    } catch (error) {\r\n      dispatch({ type: GET_ALLOWANCES_ERROR });\r\n    }\r\n  };\r\n\r\n  const addAllowance = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_ALLOWANCE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateAllowance = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_ALLOWANCE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteAllowance = async (id) => {\r\n    dispatch({ type: DELETE_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_ALLOWANCE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  // Deductions\r\n  const loadDeductions = async () => {\r\n    dispatch({ type: GET_DEDUCTIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(deductions_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const deductions = await res.json();\r\n      dispatch({ type: GET_DEDUCTIONS_SUCCESS, payload: deductions });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DEDUCTIONS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDeduction = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DEDUCTION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDeduction = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DEDUCTION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDeduction = async (id) => {\r\n    dispatch({ type: DELETE_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DEDUCTION_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  // Departments\r\n  const loadDepartments = async () => {\r\n    dispatch({ type: GET_DEPARTMENTS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(departments_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const departments = await res.json();\r\n      dispatch({ type: GET_DEPARTMENTS_SUCCESS, payload: departments });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DEPARTMENTS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDepartment = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DEPARTMENT_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDepartment = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DEPARTMENT_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDepartment = async (id) => {\r\n    dispatch({ type: DELETE_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DEPARTMENT_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  // Designations\r\n  const loadDesignations = async () => {\r\n    dispatch({ type: GET_DESIGNATIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(designations_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const designations = await res.json();\r\n      dispatch({ type: GET_DESIGNATIONS_SUCCESS, payload: designations });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DESIGNATIONS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDesignation = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DESIGNATION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDesignation = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DESIGNATION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDesignation = async (id) => {\r\n    dispatch({ type: DELETE_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DESIGNATION_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TablesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadAllowances,\r\n        addAllowance,\r\n        deleteAllowance,\r\n        updateAllowance,\r\n        loadDeductions,\r\n        loadDepartments,\r\n        loadDesignations,\r\n      }}\r\n    >\r\n      {children}\r\n    </TablesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTablesContext = () => {\r\n  return useContext(TablesContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}