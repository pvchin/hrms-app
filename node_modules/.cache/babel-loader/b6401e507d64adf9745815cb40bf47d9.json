{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Emp_Educations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Institution\",\n  field: \"institution\"\n}, {\n  title: \"Course\",\n  field: \"course\"\n}, {\n  title: \"From Date\",\n  field: \"from_date\",\n  type: \"date\"\n}, {\n  title: \"To Date\",\n  field: \"to_date\",\n  type: \"date\"\n}, {\n  title: \"Archievement\",\n  field: \"archievement\"\n}, {\n  title: \"Grade\",\n  field: \"grade\"\n}, {\n  title: \"Remark\",\n  field: \"remark\"\n}];\nexport default function Emp_Educations({\n  educationdata,\n  setEducationdata,\n  handleDialogClose\n}) {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const {\n    editEmployeeID\n  } = useEmployeesContext();\n  const {\n    loadSingleBatchEducation,\n    singlebatcheducation,\n    addEducation,\n    deleteEducation,\n    updateEducation,\n    singlebatch_education_loading,\n    singlebatch_education_error\n  } = useTablesContext();\n  useEffect(() => {}, [educationdata]);\n\n  const Save_EducationData = () => {\n    console.log(educationdata); // delete existing data\n\n    {\n      singlebatcheducation.map(f => {\n        const {\n          id\n        } = f;\n        deleteEducation(id);\n      });\n    } //add new data\n\n    {\n      educationdata.map(data => {\n        const {\n          institute,\n          course,\n          from_date,\n          to_date,\n          grade,\n          remark\n        } = data;\n        addEducation({\n          institute,\n          course,\n          from_date,\n          to_date,\n          grade,\n          remark,\n          empid: editEmployeeID\n        });\n      });\n    }\n    loadSingleBatchEducation(editEmployeeID);\n    handleDialogClose();\n  };\n\n  const update_Education = data => {\n    updateEducation({\n      id: data.id,\n      ...data\n    });\n    loadSingleBatchEducation(editEmployeeID);\n  };\n\n  const add_Education = data => {\n    addEducation({ ...data,\n      empid: editEmployeeID\n    });\n    loadSingleBatchEducation(editEmployeeID);\n  };\n\n  const delete_Education = data => {\n    const {\n      id\n    } = data;\n    deleteEducation(id);\n    loadSingleBatchEducation(editEmployeeID);\n  };\n\n  if (singlebatch_education_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...Education\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: educationdata,\n        title: \"Education\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              setEducationdata([...educationdata, newData]);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...educationdata];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData;\n              setEducationdata([...dataUpdate]);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...educationdata];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1);\n              setEducationdata([...dataDelete]);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"#FFF\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px 10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Save_EducationData,\n                children: [\"Update \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Emp_Educations, \"iHOE0LEC9bkpaEGhq0kNDLoSv1w=\", false, function () {\n  return [useHistory, useStyles, useEmployeesContext, useTablesContext];\n});\n\n_c = Emp_Educations;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Emp_Educations\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Emp_Educations.js"],"names":["React","useEffect","MaterialTable","MTableToolbar","makeStyles","useHistory","Link","useEmployeesContext","useTablesContext","columns","title","field","type","Emp_Educations","educationdata","setEducationdata","handleDialogClose","history","classes","useStyles","editEmployeeID","loadSingleBatchEducation","singlebatcheducation","addEducation","deleteEducation","updateEducation","singlebatch_education_loading","singlebatch_education_error","Save_EducationData","console","log","map","f","id","data","institute","course","from_date","to_date","grade","remark","empid","update_Education","add_Education","delete_Education","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","onRowDelete","dataDelete","splice","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","props","padding","button","rightIcon","theme"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Institution\",\r\n    field: \"institution\",\r\n  },\r\n  {\r\n    title: \"Course\",\r\n    field: \"course\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n  },\r\n  {\r\n    title: \"Archievement\",\r\n    field: \"archievement\",\r\n  },\r\n\r\n  { title: \"Grade\", field: \"grade\" },\r\n  {\r\n    title: \"Remark\",\r\n    field: \"remark\",\r\n  },\r\n];\r\n\r\nexport default function Emp_Educations({\r\n  educationdata,\r\n  setEducationdata,\r\n  handleDialogClose,\r\n}) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { editEmployeeID } = useEmployeesContext();\r\n\r\n  const {\r\n    loadSingleBatchEducation,\r\n    singlebatcheducation,\r\n    addEducation,\r\n    deleteEducation,\r\n    updateEducation,\r\n    singlebatch_education_loading,\r\n    singlebatch_education_error,\r\n  } = useTablesContext();\r\n\r\n  useEffect(() => {}, [educationdata]);\r\n\r\n  const Save_EducationData = () => {\r\n    console.log(educationdata);\r\n    // delete existing data\r\n    {\r\n      singlebatcheducation.map((f) => {\r\n        const { id } = f;\r\n        deleteEducation(id);\r\n      });\r\n    }\r\n    //add new data\r\n    {\r\n      educationdata.map((data) => {\r\n        const { institute, course, from_date, to_date, grade, remark } = data;\r\n        addEducation({\r\n          institute,\r\n          course,\r\n          from_date,\r\n          to_date,\r\n          grade,\r\n          remark,\r\n          empid: editEmployeeID,\r\n        });\r\n      });\r\n    }\r\n    loadSingleBatchEducation(editEmployeeID);\r\n    handleDialogClose();\r\n  };\r\n\r\n  const update_Education = (data) => {\r\n    updateEducation({ id: data.id, ...data });\r\n    loadSingleBatchEducation(editEmployeeID);\r\n  };\r\n\r\n  const add_Education = (data) => {\r\n    addEducation({ ...data, empid: editEmployeeID });\r\n    loadSingleBatchEducation(editEmployeeID);\r\n  };\r\n\r\n  const delete_Education = (data) => {\r\n    const { id } = data;\r\n    deleteEducation(id);\r\n    loadSingleBatchEducation(editEmployeeID);\r\n  };\r\n\r\n  if (singlebatch_education_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Education</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={educationdata}\r\n          title=\"Education\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setEducationdata([...educationdata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...educationdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setEducationdata([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...educationdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setEducationdata([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_EducationData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}