{"ast":null,"code":"import _regeneratorRuntime from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"D:/react-myprojects/hrms-airtable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useState,useEffect}from\"react\";import MaterialTable from\"material-table\";import{makeStyles}from\"@material-ui/core/styles\";import AddIcon from\"@material-ui/icons/Add\";import EditIcon from\"@material-ui/icons/Edit\";import DeleteIcon from\"@material-ui/icons/Delete\";import CheckIcon from\"@material-ui/icons/Check\";import SearchIcon from\"@material-ui/icons/Search\";import{useHistory,Link}from\"react-router-dom\";import{usePayslipsContext}from\"../context/payslips_context\";import{jsx as _jsx}from\"react/jsx-runtime\";var columns=[{title:\"Name\",field:\"description\"},{title:\"Amount\",field:\"amount\",type:\"numeric\"}];export default function Payslip_Deductions(){var history=useHistory();var classes=useStyles();var _usePayslipsContext=usePayslipsContext(),payslipdeductions=_usePayslipsContext.payslipdeductions,payslip_deduction_amount=_usePayslipsContext.payslip_deduction_amount,setPayslipDeductionAmount=_usePayslipsContext.setPayslipDeductionAmount,loadPayslipDeductions=_usePayslipsContext.loadPayslipDeductions,addPayslipDeduction=_usePayslipsContext.addPayslipDeduction,payslipdeductions_loading=_usePayslipsContext.payslipdeductions_loading,updatePayslipDeduction=_usePayslipsContext.updatePayslipDeduction,deletePayslipDeduction=_usePayslipsContext.deletePayslipDeduction,updatePayslip=_usePayslipsContext.updatePayslip,editPayslipID=_usePayslipsContext.editPayslipID,single_payslip=_usePayslipsContext.single_payslip,payslip_period=_usePayslipsContext.payslip_period,getSingleBatchPayslipDeductions=_usePayslipsContext.getSingleBatchPayslipDeductions;var name=payslipdeductions.name,amount=payslipdeductions.amount;var calc_Deduction=function calc_Deduction(data){var sum=data.reduce(function(a,v){return a=a+v.amount;},0);setPayslipDeductionAmount(sum);};useEffect(function(){getSingleBatchPayslipDeductions(single_payslip.empid,payslip_period);},[]);var update_Payslip=function update_Payslip(){var rec_id=single_payslip.rec_id,id=single_payslip.id,total_deductions=single_payslip.total_deductions,paydata=_objectWithoutProperties(single_payslip,[\"rec_id\",\"id\",\"total_deductions\"]);updatePayslip(_objectSpread({id:editPayslipID,total_deductions:payslip_deduction_amount},paydata));};var update_PayslipDeduction=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var id,rec_id,empid,fields;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:id=data.id,rec_id=data.rec_id,empid=data.empid,fields=_objectWithoutProperties(data,[\"id\",\"rec_id\",\"empid\"]);console.log(fields);updatePayslipDeduction(_objectSpread({id:data.id,empid:empid},fields));update_Payslip();getSingleBatchPayslipDeductions(single_payslip.empid,payslip_period);case 5:case\"end\":return _context.stop();}}},_callee);}));return function update_PayslipDeduction(_x){return _ref.apply(this,arguments);};}();var add_PayslipDeduction=function add_PayslipDeduction(data){var description=data.description,amount=data.amount;addPayslipDeduction({description:description,amount:amount,name:single_payslip.name,empid:single_payslip.empid,period:single_payslip.period});getSingleBatchPayslipDeductions(single_payslip.empid,payslip_period);};var delete_PayslipDeduction=function delete_PayslipDeduction(data){var id=data.id;deletePayslipDeduction(id);getSingleBatchPayslipDeductions(single_payslip.empid,payslip_period);};if(payslipdeductions_loading){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Loading... Expenses.\"})});}return/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:\"100%\",paddingTop:\"5px\"},children:/*#__PURE__*/_jsx(MaterialTable,{columns:columns,data:payslipdeductions,title:\"Expense\",editable:{onRowAdd:function onRowAdd(newData){return new Promise(function(resolve,reject){setTimeout(function(){// setData([...data, newData]);\nadd_PayslipDeduction(newData);resolve();},1000);});},onRowUpdate:function onRowUpdate(newData,oldData){return new Promise(function(resolve,reject){setTimeout(function(){// const dataUpdate = [...payslipdeductions];\n// const index = oldData.tableData.id;\n// dataUpdate[index] = newData;\n// setData([...dataUpdate]);\nupdate_PayslipDeduction(newData);// calc_Deduction(newData);\nresolve();},1000);});},onRowDelete:function onRowDelete(oldData){return new Promise(function(resolve,reject){setTimeout(function(){// const dataDelete = [...data];\n// const index = oldData.tableData.id;\n// dataDelete.splice(index, 1);\n// setData([...dataDelete]);\ndelete_PayslipDeduction(oldData);resolve();},1000);});}}})})});}var useStyles=makeStyles(function(theme){return{root:{padding:0}};});","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Payslip_Deductions.js"],"names":["React","useState","useEffect","MaterialTable","makeStyles","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","useHistory","Link","usePayslipsContext","columns","title","field","type","Payslip_Deductions","history","classes","useStyles","payslipdeductions","payslip_deduction_amount","setPayslipDeductionAmount","loadPayslipDeductions","addPayslipDeduction","payslipdeductions_loading","updatePayslipDeduction","deletePayslipDeduction","updatePayslip","editPayslipID","single_payslip","payslip_period","getSingleBatchPayslipDeductions","name","amount","calc_Deduction","data","sum","reduce","a","v","empid","update_Payslip","rec_id","id","total_deductions","paydata","update_PayslipDeduction","fields","console","log","add_PayslipDeduction","description","period","delete_PayslipDeduction","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","onRowDelete","theme","padding"],"mappings":"gnBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,MAAOC,CAAAA,aAAP,KAA0B,gBAA1B,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,OAASC,UAAT,CAAqBC,IAArB,KAAiC,kBAAjC,CAEA,OAASC,kBAAT,KAAmC,6BAAnC,C,2CAEA,GAAMC,CAAAA,OAAO,CAAG,CACd,CACEC,KAAK,CAAE,MADT,CAEEC,KAAK,CAAE,aAFT,CADc,CAKd,CAAED,KAAK,CAAE,QAAT,CAAmBC,KAAK,CAAE,QAA1B,CAAoCC,IAAI,CAAE,SAA1C,CALc,CAAhB,CAQA,cAAe,SAASC,CAAAA,kBAAT,EAA8B,CAC3C,GAAIC,CAAAA,OAAO,CAAGR,UAAU,EAAxB,CACA,GAAMS,CAAAA,OAAO,CAAGC,SAAS,EAAzB,CAF2C,wBAkBvCR,kBAAkB,EAlBqB,CAKzCS,iBALyC,qBAKzCA,iBALyC,CAMzCC,wBANyC,qBAMzCA,wBANyC,CAOzCC,yBAPyC,qBAOzCA,yBAPyC,CAQzCC,qBARyC,qBAQzCA,qBARyC,CASzCC,mBATyC,qBASzCA,mBATyC,CAUzCC,yBAVyC,qBAUzCA,yBAVyC,CAWzCC,sBAXyC,qBAWzCA,sBAXyC,CAYzCC,sBAZyC,qBAYzCA,sBAZyC,CAazCC,aAbyC,qBAazCA,aAbyC,CAczCC,aAdyC,qBAczCA,aAdyC,CAezCC,cAfyC,qBAezCA,cAfyC,CAgBzCC,cAhByC,qBAgBzCA,cAhByC,CAiBzCC,+BAjByC,qBAiBzCA,+BAjByC,IAmBnCC,CAAAA,IAnBmC,CAmBlBb,iBAnBkB,CAmBnCa,IAnBmC,CAmB7BC,MAnB6B,CAmBlBd,iBAnBkB,CAmB7Bc,MAnB6B,CAqB3C,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,IAAD,CAAU,CAC/B,GAAMC,CAAAA,GAAG,CAAGD,IAAI,CAACE,MAAL,CAAY,SAACC,CAAD,CAAIC,CAAJ,QAAWD,CAAAA,CAAC,CAAGA,CAAC,CAAGC,CAAC,CAACN,MAArB,EAAZ,CAA0C,CAA1C,CAAZ,CACAZ,yBAAyB,CAACe,GAAD,CAAzB,CACD,CAHD,CAKApC,SAAS,CAAC,UAAM,CACd+B,+BAA+B,CAACF,cAAc,CAACW,KAAhB,CAAuBV,cAAvB,CAA/B,CACD,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMW,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,IACnBC,CAAAA,MADmB,CAC0Bb,cAD1B,CACnBa,MADmB,CACXC,EADW,CAC0Bd,cAD1B,CACXc,EADW,CACPC,gBADO,CAC0Bf,cAD1B,CACPe,gBADO,CACcC,OADd,0BAC0BhB,cAD1B,qCAE3BF,aAAa,gBACXgB,EAAE,CAAEf,aADO,CAEXgB,gBAAgB,CAAExB,wBAFP,EAGRyB,OAHQ,EAAb,CAKD,CAPD,CASA,GAAMC,CAAAA,uBAAuB,0FAAG,iBAAOX,IAAP,6IACtBQ,EADsB,CACWR,IADX,CACtBQ,EADsB,CAClBD,MADkB,CACWP,IADX,CAClBO,MADkB,CACVF,KADU,CACWL,IADX,CACVK,KADU,CACAO,MADA,0BACWZ,IADX,0BAG9Ba,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACAtB,sBAAsB,gBAAGkB,EAAE,CAAER,IAAI,CAACQ,EAAZ,CAAgBH,KAAK,CAAEA,KAAvB,EAAiCO,MAAjC,EAAtB,CACAN,cAAc,GACdV,+BAA+B,CAACF,cAAc,CAACW,KAAhB,CAAuBV,cAAvB,CAA/B,CAN8B,sDAAH,kBAAvBgB,CAAAA,uBAAuB,4CAA7B,CASA,GAAMI,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACf,IAAD,CAAU,IAC7BgB,CAAAA,WAD6B,CACLhB,IADK,CAC7BgB,WAD6B,CAChBlB,MADgB,CACLE,IADK,CAChBF,MADgB,CAErCV,mBAAmB,CAAC,CAClB4B,WAAW,CAAEA,WADK,CAElBlB,MAAM,CAAEA,MAFU,CAGlBD,IAAI,CAAEH,cAAc,CAACG,IAHH,CAIlBQ,KAAK,CAAEX,cAAc,CAACW,KAJJ,CAKlBY,MAAM,CAAEvB,cAAc,CAACuB,MALL,CAAD,CAAnB,CAOArB,+BAA+B,CAACF,cAAc,CAACW,KAAhB,CAAuBV,cAAvB,CAA/B,CACD,CAVD,CAYA,GAAMuB,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAClB,IAAD,CAAU,IAChCQ,CAAAA,EADgC,CACzBR,IADyB,CAChCQ,EADgC,CAExCjB,sBAAsB,CAACiB,EAAD,CAAtB,CACAZ,+BAA+B,CAACF,cAAc,CAACW,KAAhB,CAAuBV,cAAvB,CAA/B,CACD,CAJD,CAMA,GAAIN,yBAAJ,CAA+B,CAC7B,mBACE,kCACE,4CADF,EADF,CAKD,CAED,mBACE,YAAK,SAAS,CAAEP,OAAO,CAACqC,IAAxB,uBAGE,YAAK,KAAK,CAAE,CAAEC,QAAQ,CAAE,MAAZ,CAAoBC,UAAU,CAAE,KAAhC,CAAZ,uBACE,KAAC,aAAD,EACE,OAAO,CAAE7C,OADX,CAEE,IAAI,CAAEQ,iBAFR,CAGE,KAAK,CAAC,SAHR,CAIE,QAAQ,CAAE,CACRsC,QAAQ,CAAE,kBAACC,OAAD,QACR,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CAC/BC,UAAU,CAAC,UAAM,CACf;AACAZ,oBAAoB,CAACQ,OAAD,CAApB,CAEAE,OAAO,GACR,CALS,CAKP,IALO,CAAV,CAMD,CAPD,CADQ,EADF,CAURG,WAAW,CAAE,qBAACL,OAAD,CAAUM,OAAV,QACX,IAAIL,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CAC/BC,UAAU,CAAC,UAAM,CACf;AACA;AACA;AACA;AACAhB,uBAAuB,CAACY,OAAD,CAAvB,CACA;AACAE,OAAO,GACR,CARS,CAQP,IARO,CAAV,CASD,CAVD,CADW,EAVL,CAsBRK,WAAW,CAAE,qBAACD,OAAD,QACX,IAAIL,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CAC/BC,UAAU,CAAC,UAAM,CACf;AACA;AACA;AACA;AACAT,uBAAuB,CAACW,OAAD,CAAvB,CACAJ,OAAO,GACR,CAPS,CAOP,IAPO,CAAV,CAQD,CATD,CADW,EAtBL,CAJZ,EADF,EAHF,EADF,CA+CD,CAED,GAAM1C,CAAAA,SAAS,CAAGhB,UAAU,CAAC,SAACgE,KAAD,QAAY,CACvCZ,IAAI,CAAE,CACJa,OAAO,CAAE,CADL,CADiC,CAAZ,EAAD,CAA5B","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"description\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"numeric\" },\r\n];\r\n\r\nexport default function Payslip_Deductions() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    payslipdeductions,\r\n    payslip_deduction_amount,\r\n    setPayslipDeductionAmount,\r\n    loadPayslipDeductions,\r\n    addPayslipDeduction,\r\n    payslipdeductions_loading,\r\n    updatePayslipDeduction,\r\n    deletePayslipDeduction,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipDeductions,\r\n  } = usePayslipsContext();\r\n  const { name, amount } = payslipdeductions;\r\n\r\n  const calc_Deduction = (data) => {\r\n    const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n    setPayslipDeductionAmount(sum);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  }, []);\r\n\r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_deductions, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_deductions: payslip_deduction_amount,\r\n      ...paydata,\r\n    });\r\n  };\r\n\r\n  const update_PayslipDeduction = async (data) => {\r\n    const { id, rec_id, empid, ...fields } = data;\r\n\r\n    console.log(fields);\r\n    updatePayslipDeduction({ id: data.id, empid: empid, ...fields });\r\n    update_Payslip();\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const add_PayslipDeduction = (data) => {\r\n    const { description, amount } = data;\r\n    addPayslipDeduction({\r\n      description: description,\r\n      amount: amount,\r\n      name: single_payslip.name,\r\n      empid: single_payslip.empid,\r\n      period: single_payslip.period,\r\n    });\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const delete_PayslipDeduction = (data) => {\r\n    const { id } = data;\r\n    deletePayslipDeduction(id);\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  if (payslipdeductions_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Expenses.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={payslipdeductions}\r\n          title=\"Expense\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // setData([...data, newData]);\r\n                  add_PayslipDeduction(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // const dataUpdate = [...payslipdeductions];\r\n                  // const index = oldData.tableData.id;\r\n                  // dataUpdate[index] = newData;\r\n                  // setData([...dataUpdate]);\r\n                  update_PayslipDeduction(newData);\r\n                  // calc_Deduction(newData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // const dataDelete = [...data];\r\n                  // const index = oldData.tableData.id;\r\n                  // dataDelete.splice(index, 1);\r\n                  // setData([...dataDelete]);\r\n                  delete_PayslipDeduction(oldData);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}