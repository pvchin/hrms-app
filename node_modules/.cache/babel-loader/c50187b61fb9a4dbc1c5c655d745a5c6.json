{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\DailyAllowsDetlsTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Icon, Button } from \"@material-ui/core\";\nimport { selector, useRecoilValue, useRecoilState, useRecoilValueLoadable, useRecoilStateLoadable } from \"recoil\";\nimport { allowsPeriodState, allowsDataState, empidState } from \"./data/atomdata\";\nimport { fetchDailyAllowsDetlsSelector } from \"./data/selectordata\";\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Date\",\n  field: \"date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField, {\n    defaultValue: props.value || null,\n    onChange: e => props.onChange(e.target.value),\n    type: \"date\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this)\n}, {\n  title: \"District\",\n  field: \"district\"\n}, {\n  title: \"Operation Type\",\n  field: \"typeoperation\"\n}, {\n  title: \"Client\",\n  field: \"client\"\n}, {\n  title: \"Location/Rig\",\n  field: \"location\"\n}, {\n  title: \"Ticket No/Job No\",\n  field: \"jobno\"\n}, {\n  title: \"Crew Operation\",\n  field: \"crewoperation\"\n}, {\n  title: \"Job Bonus\",\n  field: \"jobbonus\",\n  type: \"numeric\",\n  cellStyle: {\n    width: 8,\n    maxWidth: 8\n  },\n  headerStyle: {\n    width: 8,\n    maxWidth: 8\n  }\n}, {\n  title: \"Per Diem\",\n  field: \"perdiem\",\n  type: \"numeric\",\n  cellStyle: {\n    width: 8,\n    maxWidth: 8\n  },\n  headerStyle: {\n    width: 8,\n    maxWidth: 8\n  }\n}];\nexport default function DailyAllowsDetlsTable({\n  setAllowsdata,\n  allowsdata,\n  handleDialogClose\n}) {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const [allowsDetlsTable, setAllowsDetlsTable] = useRecoilState(allowsDataDetlsState); //console.log(\"detlstable\", singlebatch_dailyallowsdetl);\n  //const [allowsDetlsdata, setAllowsDetilsdata] = useRecoilStateLoadable(fetchDailyAllowsDetlsSelector);\n\n  const {\n    dailyallowsdetls,\n    addDailyAllowsDetl,\n    dailyallowsdetls_loading,\n    updateDailyAllowsDetl,\n    deleteDailyAllowsDetl,\n    getSingleBatchDailyAllowsDetl,\n    singlebatch_dailyallowsdetl,\n    singlebatch_dailyallowsdetl_loading,\n    dailyallowance_period,\n    single_dailyallowance,\n    editDailyAllowanceID\n  } = useDailyAllowancesContext();\n  useEffect(() => {\n    getSingleBatchDailyAllowsDetl(empid);\n  }, []); // const add_DailyAllowsDetl = async (data) => {\n  //   console.log(\"add\", data);\n  //   const { description, amount } = data;\n  //   addDailyAllowsDetl({\n  //     description: description,\n  //     amount: amount,\n  //     name: single_dailyallowance.name,\n  //     empid: single_dailyallowance.empid,\n  //     period: dailyallowance_period,\n  //   });\n  // };\n  // const delete_DailyAllowance = (data) => {\n  //   const { id } = data;\n  //   deleteDailyAllowsDetl(id);\n  //   //update_Daily Allowances Details;\n  //   getSingleBatchDailyAllowsDetl(\n  //     single_dailyallowance.empid,\n  //     dailyallowance_period\n  //   );\n  // };\n\n  const Save_Allowsdata = () => {\n    // delete unwanted data\n    singlebatch_dailyallowsdetl.forEach(row => {\n      const {\n        id,\n        rec_id,\n        name\n      } = row;\n      const res = allowsdata.find(r => r.rec_id === rec_id);\n\n      if (!res) {\n        deleteDailyAllowsDetl(id);\n      }\n    }); //add or update new data\n\n    {\n      allowsdata.forEach(data => {\n        const {\n          id,\n          date,\n          district,\n          typeoperation,\n          client,\n          location,\n          jobno,\n          crewoperation,\n          jobbonus,\n          perdiem\n        } = data;\n\n        if (id) {\n          const {\n            id,\n            rec_id,\n            tableData,\n            ...fields\n          } = data;\n          updateDailyAllowsDetl({\n            id,\n            ...fields\n          });\n        } else {\n          addDailyAllowsDetl({\n            date,\n            district,\n            typeoperation,\n            client,\n            location,\n            jobno,\n            crewoperation,\n            jobbonus,\n            perdiem,\n            empid: editDailyAllowanceID,\n            period: dailyallowance_period\n          });\n        }\n      });\n    }\n    handleDialogClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: allowsDetlsTable,\n        title: \"Daily Allowances Details\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              setAllowsdata([...allowsdata, newData]);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...allowsDetlsTable];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData;\n              setAllowsDetlsTable([...dataUpdate]); //editable = dataUpdate;\n\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...allowsDetlsTable];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1);\n              setAllowsDetlsTable([...dataDelete]);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"primary\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px 10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Save_Allowsdata,\n                children: [\"Update \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DailyAllowsDetlsTable, \"ENGkeUCN2tjPgVGYwx/Oy6luPBo=\", false, function () {\n  return [useHistory, useStyles, useRecoilState, useDailyAllowancesContext];\n});\n\n_c = DailyAllowsDetlsTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0,\n    width: 1500\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyAllowsDetlsTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/DailyAllowsDetlsTable.js"],"names":["React","useState","useEffect","useHistory","Link","MaterialTable","MTableToolbar","makeStyles","TextField","Icon","Button","selector","useRecoilValue","useRecoilState","useRecoilValueLoadable","useRecoilStateLoadable","allowsPeriodState","allowsDataState","empidState","fetchDailyAllowsDetlsSelector","useDailyAllowancesContext","columns","title","field","type","dateSetting","locale","editComponent","props","value","e","onChange","target","cellStyle","width","maxWidth","headerStyle","DailyAllowsDetlsTable","setAllowsdata","allowsdata","handleDialogClose","history","classes","useStyles","allowsDetlsTable","setAllowsDetlsTable","allowsDataDetlsState","dailyallowsdetls","addDailyAllowsDetl","dailyallowsdetls_loading","updateDailyAllowsDetl","deleteDailyAllowsDetl","getSingleBatchDailyAllowsDetl","singlebatch_dailyallowsdetl","singlebatch_dailyallowsdetl_loading","dailyallowance_period","single_dailyallowance","editDailyAllowanceID","empid","Save_Allowsdata","forEach","row","id","rec_id","name","res","find","r","data","date","district","typeoperation","client","location","jobno","crewoperation","jobbonus","perdiem","tableData","fields","period","root","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","onRowDelete","dataDelete","splice","filtering","backgroundColor","color","showTitle","Toolbar","padding","button","rightIcon","theme"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link} from \"react-router-dom\"\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Icon, Button } from \"@material-ui/core\";\r\nimport {\r\n  selector,\r\n  useRecoilValue,\r\n  useRecoilState,\r\n  useRecoilValueLoadable,\r\n  useRecoilStateLoadable,\r\n} from \"recoil\";\r\nimport {\r\n  allowsPeriodState,\r\n  allowsDataState,\r\n  empidState,\r\n} from \"./data/atomdata\";\r\nimport { fetchDailyAllowsDetlsSelector } from \"./data/selectordata\";\r\nimport { useDailyAllowancesContext } from \"../context/dailyallowances_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        type=\"date\"\r\n      />\r\n    ),\r\n  },\r\n  { title: \"District\", field: \"district\" },\r\n  { title: \"Operation Type\", field: \"typeoperation\" },\r\n  { title: \"Client\", field: \"client\" },\r\n  { title: \"Location/Rig\", field: \"location\" },\r\n  { title: \"Ticket No/Job No\", field: \"jobno\" },\r\n  { title: \"Crew Operation\", field: \"crewoperation\" },\r\n  {\r\n    title: \"Job Bonus\",\r\n    field: \"jobbonus\",\r\n    type: \"numeric\",\r\n    cellStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n    headerStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n  },\r\n  {\r\n    title: \"Per Diem\",\r\n    field: \"perdiem\",\r\n    type: \"numeric\",\r\n    cellStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n    headerStyle: {\r\n      width: 8,\r\n      maxWidth: 8,\r\n    },\r\n  },\r\n];\r\n\r\nexport default function DailyAllowsDetlsTable({\r\n  setAllowsdata,\r\n  allowsdata,\r\n  handleDialogClose,\r\n}) {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n    const [allowsDetlsTable, setAllowsDetlsTable] =\r\n    useRecoilState(allowsDataDetlsState);\r\n  //console.log(\"detlstable\", singlebatch_dailyallowsdetl);\r\n  //const [allowsDetlsdata, setAllowsDetilsdata] = useRecoilStateLoadable(fetchDailyAllowsDetlsSelector);\r\n\r\n  const {\r\n    dailyallowsdetls,\r\n    addDailyAllowsDetl,\r\n    dailyallowsdetls_loading,\r\n    updateDailyAllowsDetl,\r\n    deleteDailyAllowsDetl,\r\n    getSingleBatchDailyAllowsDetl,\r\n    singlebatch_dailyallowsdetl,\r\n    singlebatch_dailyallowsdetl_loading,\r\n    dailyallowance_period,\r\n    single_dailyallowance,\r\n    editDailyAllowanceID,\r\n  } = useDailyAllowancesContext();\r\n\r\n  useEffect(() => {\r\n    getSingleBatchDailyAllowsDetl(empid)\r\n  },[])\r\n\r\n  // const add_DailyAllowsDetl = async (data) => {\r\n  //   console.log(\"add\", data);\r\n  //   const { description, amount } = data;\r\n  //   addDailyAllowsDetl({\r\n  //     description: description,\r\n  //     amount: amount,\r\n  //     name: single_dailyallowance.name,\r\n  //     empid: single_dailyallowance.empid,\r\n  //     period: dailyallowance_period,\r\n  //   });\r\n  // };\r\n\r\n  // const delete_DailyAllowance = (data) => {\r\n  //   const { id } = data;\r\n  //   deleteDailyAllowsDetl(id);\r\n  //   //update_Daily Allowances Details;\r\n  //   getSingleBatchDailyAllowsDetl(\r\n  //     single_dailyallowance.empid,\r\n  //     dailyallowance_period\r\n  //   );\r\n  // };\r\n\r\n  const Save_Allowsdata = () => {\r\n    // delete unwanted data\r\n    singlebatch_dailyallowsdetl.forEach((row) => {\r\n      const { id, rec_id, name } = row;\r\n      const res = allowsdata.find((r) => r.rec_id === rec_id);\r\n      if (!res) {\r\n        deleteDailyAllowsDetl(id);\r\n      }\r\n    });\r\n\r\n    //add or update new data\r\n    {\r\n      allowsdata.forEach((data) => {\r\n        const {\r\n          id,\r\n          date,\r\n          district,\r\n          typeoperation,\r\n          client,\r\n          location,\r\n          jobno,\r\n          crewoperation,\r\n          jobbonus,\r\n          perdiem,\r\n        } = data;\r\n        if (id) {\r\n          const { id, rec_id, tableData, ...fields } = data;\r\n          updateDailyAllowsDetl({ id, ...fields });\r\n        } else {\r\n          addDailyAllowsDetl({\r\n            date,\r\n            district,\r\n            typeoperation,\r\n            client,\r\n            location,\r\n            jobno,\r\n            crewoperation,\r\n            jobbonus,\r\n            perdiem,\r\n            empid: editDailyAllowanceID,\r\n            period: dailyallowance_period,\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={allowsDetlsTable}\r\n          title=\"Daily Allowances Details\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setAllowsdata([...allowsdata, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...allowsDetlsTable];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setAllowsDetlsTable([...dataUpdate]);\r\n                  //editable = dataUpdate;\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...allowsDetlsTable];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setAllowsDetlsTable([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_Allowsdata}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n    width: 1500,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}