{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\EmployeeForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer, useEffect } from \"react\";\nimport { Button, Icon, TextField, Paper, Typography, Select, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport UpdateBatchFamily from \"./UpdateBatchFamily\";\nimport UpdateBatchEducations from \"./UpdateBatchEducations\";\nimport UpdateBatchExperiences from \"./UpdateBatchExperiences\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_values = {\n  name: \"\",\n  gender: \"\",\n  ic_no: \"\",\n  email: \"\",\n  age: 0\n};\n\nconst EmployeeForm = () => {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const {\n    isEditing,\n    single_employee,\n    updateEmployee,\n    addEmployee,\n    editEmployeeID,\n    loadEmployees,\n    single_employee_loading\n  } = useEmployeesContext();\n  const {\n    name,\n    ic_no,\n    gender,\n    age,\n    email\n  } = single_employee || initial_values;\n  const {\n    handleSubmit,\n    control\n  } = useForm();\n\n  const onSubmit = data => {\n    if (isEditing) {\n      updateEmployee({\n        id: editEmployeeID,\n        ...data\n      });\n    } else {\n      addEmployee({ ...data\n      });\n    }\n\n    loadEmployees();\n    history.push(\"/allemployees\");\n  };\n\n  if (single_employee_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h3\",\n          children: \"EMPLOYEE FORM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"p\",\n          children: \"Employee Particulars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"name\",\n              control: control,\n              defaultValue: name,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Name\",\n                  id: \"margin-normal\",\n                  name: \"name\",\n                  defaultValue: name,\n                  className: classes.textField,\n                  onChange: onChange,\n                  error: !!error,\n                  helperText: error ? error.message : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this);\n              },\n              rules: {\n                required: \"Name required\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"ic_no\",\n              control: control,\n              defaultValue: ic_no,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"IC No\",\n                  id: \"margin-normal\",\n                  name: \"ic_no\",\n                  defaultValue: ic_no,\n                  className: classes.textField,\n                  onChange: onChange,\n                  error: !!error,\n                  helperText: error ? error.message : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this);\n              } //rules={{ required: \"IC No required\" }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"gender\",\n              control: control,\n              defaultValue: gender,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Gender\",\n                  id: \"margin-normal\",\n                  name: \"gender\",\n                  defaultValue: gender,\n                  className: classes.textField,\n                  onChange: onChange,\n                  error: !!error,\n                  helperText: error ? error.message : null,\n                  select: true,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Male\",\n                    children: \"Male\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Female\",\n                    children: \"Female\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this);\n              } //rules={{ required: \"IC No required\" }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"age\",\n              control: control,\n              defaultValue: age,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Age\",\n                  type: \"number\",\n                  id: \"standard-number\",\n                  name: \"age\",\n                  defaultValue: age,\n                  className: classes.textField //onChange={onChange}\n                  ,\n                  onChange: e => {\n                    onChange(parseInt(e.target.value, 10));\n                  },\n                  error: !!error,\n                  helperText: error ? error.message : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this);\n              } //rules={{ required: \"IC No required\" }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"email\",\n              control: control,\n              defaultValue: email,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Email\",\n                  id: \"margin-normal\",\n                  name: \"email\",\n                  defaultValue: email,\n                  className: classes.textField,\n                  onChange: onChange,\n                  error: !!error,\n                  helperText: error ? error.message : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this);\n              },\n              rules: {\n                required: \"Email is required\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              children: [\"Submit \", /*#__PURE__*/_jsxDEV(Icon, {\n                className: classes.rightIcon,\n                children: \"send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmployeeForm, \"WgkhRCJWbkjYRIlTDyQcuMbmcuM=\", false, function () {\n  return [useHistory, useStyles, useEmployeesContext, useForm];\n});\n\n_c = EmployeeForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  }\n}));\nexport default EmployeeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeForm\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/EmployeeForm.js"],"names":["React","useState","useReducer","useEffect","Button","Icon","TextField","Paper","Typography","Select","Grid","makeStyles","MenuItem","useEmployeesContext","Controller","useForm","useHistory","UpdateBatchFamily","UpdateBatchEducations","UpdateBatchExperiences","initial_values","name","gender","ic_no","email","age","EmployeeForm","history","classes","useStyles","isEditing","single_employee","updateEmployee","addEmployee","editEmployeeID","loadEmployees","single_employee_loading","handleSubmit","control","onSubmit","data","id","push","root","field","onChange","value","fieldState","error","textField","message","required","e","parseInt","target","button","rightIcon","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","padding","container","display","flexWrap","width"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Select,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport UpdateBatchFamily from \"./UpdateBatchFamily\";\r\nimport UpdateBatchEducations from \"./UpdateBatchEducations\";\r\nimport UpdateBatchExperiences from \"./UpdateBatchExperiences\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  gender: \"\",\r\n  ic_no: \"\",\r\n  email: \"\",\r\n  age: 0,\r\n};\r\n\r\nconst EmployeeForm = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const {\r\n    isEditing,\r\n    single_employee,\r\n    updateEmployee,\r\n    addEmployee,\r\n    editEmployeeID,\r\n    loadEmployees,\r\n    single_employee_loading,\r\n  } = useEmployeesContext();\r\n  const { name, ic_no, gender, age, email } = single_employee || initial_values;\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    if (isEditing) {\r\n      updateEmployee({ id: editEmployeeID, ...data });\r\n    } else {\r\n      addEmployee({ ...data });\r\n    }\r\n    loadEmployees();\r\n    history.push(\"/allemployees\");\r\n  };\r\n\r\n  if (single_employee_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <Grid xs={12}>\r\n        <Paper className={classes.root}>\r\n          <Typography variant=\"h5\" component=\"h3\">\r\n            EMPLOYEE FORM\r\n          </Typography>\r\n          <Typography component=\"p\">Employee Particulars</Typography>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div>\r\n              <Controller\r\n                name=\"name\"\r\n                control={control}\r\n                defaultValue={name}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Name\"\r\n                      id=\"margin-normal\"\r\n                      name=\"name\"\r\n                      defaultValue={name}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  );\r\n                }}\r\n                rules={{ required: \"Name required\" }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Controller\r\n                name=\"ic_no\"\r\n                control={control}\r\n                defaultValue={ic_no}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"IC No\"\r\n                      id=\"margin-normal\"\r\n                      name=\"ic_no\"\r\n                      defaultValue={ic_no}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  );\r\n                }}\r\n                //rules={{ required: \"IC No required\" }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Controller\r\n                name=\"gender\"\r\n                control={control}\r\n                defaultValue={gender}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Gender\"\r\n                      id=\"margin-normal\"\r\n                      name=\"gender\"\r\n                      defaultValue={gender}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                      select\r\n                    >\r\n                      <MenuItem value=\"Male\">Male</MenuItem>\r\n                      <MenuItem value=\"Female\">Female</MenuItem>\r\n                    </TextField>\r\n                  );\r\n                }}\r\n                //rules={{ required: \"IC No required\" }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Controller\r\n                name=\"age\"\r\n                control={control}\r\n                defaultValue={age}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Age\"\r\n                      type=\"number\"\r\n                      id=\"standard-number\"\r\n                      name=\"age\"\r\n                      defaultValue={age}\r\n                      className={classes.textField}\r\n                      //onChange={onChange}\r\n                      onChange={(e) => {\r\n                        onChange(parseInt(e.target.value, 10));\r\n                      }}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  );\r\n                }}\r\n                //rules={{ required: \"IC No required\" }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Controller\r\n                name=\"email\"\r\n                control={control}\r\n                defaultValue={email}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Email\"\r\n                      id=\"margin-normal\"\r\n                      name=\"email\"\r\n                      defaultValue={email}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  );\r\n                }}\r\n                rules={{ required: \"Email is required\" }}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n              >\r\n                Submit <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </Paper>\r\n      </Grid>\r\n      {/* <Grid xs={12}>\r\n        <UpdateBatchFamily empid={editEmployeeID} />\r\n      </Grid>\r\n      <Grid xs={12}>\r\n        <UpdateBatchEducations empid={editEmployeeID} />\r\n      </Grid>\r\n      <Grid xs={12}>\r\n        <UpdateBatchExperiences empid={editEmployeeID} />\r\n      </Grid> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default EmployeeForm;\r\n"]},"metadata":{},"sourceType":"module"}