{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Payslip_Deductions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useTablesContext } from \"../context/tables_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Payslip_Deductions() {\n  _s();\n\n  const classes = useStyles();\n  const [obj, setObj] = useState({});\n  const [load, setLoad] = useState(true);\n  const {\n    payslipdeductions,\n    payslip_deduction_amount,\n    setPayslipDeductionAmount,\n    loadPayslipDeductions,\n    addPayslipDeduction,\n    payslipdeductions_loading,\n    updatePayslipDeduction,\n    deletePayslipDeduction,\n    updatePayslip,\n    editPayslipID,\n    single_payslip,\n    payslip_period,\n    getSingleBatchPayslipDeductions\n  } = usePayslipsContext();\n  const {\n    name,\n    amount\n  } = payslipdeductions;\n  const {\n    deductions\n  } = useTablesContext();\n\n  const calc_Deduction = data => {\n    const sum = data.reduce((a, v) => a = a + v.amount, 0);\n    setPayslipDeductionAmount(sum);\n  };\n\n  useEffect(() => {\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\n  }, []);\n  useEffect(() => {\n    handleLookup();\n    setLoad(false);\n    console.log(\"effect\", obj);\n  }, [load]);\n\n  const update_Payslip = () => {\n    const {\n      rec_id,\n      id,\n      total_deductions,\n      ...paydata\n    } = single_payslip;\n    updatePayslip({\n      id: editPayslipID,\n      total_deductions: payslip_deduction_amount,\n      ...paydata\n    });\n  };\n\n  const update_PayslipDeduction = async data => {\n    const {\n      id,\n      rec_id,\n      empid,\n      ...fields\n    } = data;\n    updatePayslipDeduction({\n      id: data.id,\n      empid: empid,\n      ...fields\n    });\n    update_Payslip();\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\n  };\n\n  const add_PayslipDeduction = data => {\n    const {\n      description,\n      amount\n    } = data;\n    addPayslipDeduction({\n      description: description,\n      amount: amount,\n      name: single_payslip.name,\n      empid: single_payslip.empid,\n      period: single_payslip.period\n    });\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\n  };\n\n  const delete_PayslipDeduction = data => {\n    const {\n      id\n    } = data;\n    deletePayslipDeduction(id);\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\n  };\n\n  const handleLookup = () => {\n    setObj(deductions.reduce(function (acc, cur, i) {\n      acc[cur.rec_id] = cur.name;\n      return acc;\n    }, {}));\n  };\n\n  if (payslipdeductions_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading... Expenses.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: [{\n          title: \"Name\",\n          field: \"description\",\n          lookup: obj\n        }, {\n          title: \"Amount\",\n          field: \"amount\",\n          type: \"numeric\"\n        }],\n        data: payslipdeductions,\n        title: \"Expense\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              // setData([...data, newData]);\n              add_PayslipDeduction(newData);\n              calc_Deduction([...payslipdeductions, newData]);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...payslipdeductions];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData; //setData([...dataUpdate]);\n\n              update_PayslipDeduction(newData);\n              calc_Deduction(dataUpdate);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...payslipdeductions];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1); // setData([...dataDelete]);\n\n              delete_PayslipDeduction(oldData);\n              calc_Deduction(dataDelete);\n              resolve();\n            }, 1000);\n          })\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Payslip_Deductions, \"HqnZrNxqhQCHDr3RsD5i92fJQsU=\", false, function () {\n  return [useStyles, usePayslipsContext, useTablesContext];\n});\n\n_c = Payslip_Deductions;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Payslip_Deductions\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Payslip_Deductions.js"],"names":["React","useState","useEffect","MaterialTable","makeStyles","useHistory","Link","usePayslipsContext","useTablesContext","Payslip_Deductions","classes","useStyles","obj","setObj","load","setLoad","payslipdeductions","payslip_deduction_amount","setPayslipDeductionAmount","loadPayslipDeductions","addPayslipDeduction","payslipdeductions_loading","updatePayslipDeduction","deletePayslipDeduction","updatePayslip","editPayslipID","single_payslip","payslip_period","getSingleBatchPayslipDeductions","name","amount","deductions","calc_Deduction","data","sum","reduce","a","v","empid","handleLookup","console","log","update_Payslip","rec_id","id","total_deductions","paydata","update_PayslipDeduction","fields","add_PayslipDeduction","description","period","delete_PayslipDeduction","acc","cur","i","root","maxWidth","paddingTop","title","field","lookup","type","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","onRowDelete","dataDelete","splice","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\nexport default function Payslip_Deductions() {\r\n   const classes = useStyles();\r\n  const [obj, setObj] = useState({});\r\n  const [load, setLoad] = useState(true);\r\n\r\n  const {\r\n    payslipdeductions,\r\n    payslip_deduction_amount,\r\n    setPayslipDeductionAmount,\r\n    loadPayslipDeductions,\r\n    addPayslipDeduction,\r\n    payslipdeductions_loading,\r\n    updatePayslipDeduction,\r\n    deletePayslipDeduction,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipDeductions,\r\n  } = usePayslipsContext();\r\n  const { name, amount } = payslipdeductions;\r\n  const { deductions } = useTablesContext();\r\n\r\n  const calc_Deduction = (data) => {\r\n    const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n    setPayslipDeductionAmount(sum);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleLookup();\r\n    setLoad(false);\r\n    console.log(\"effect\", obj);\r\n  }, [load]);\r\n\r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_deductions, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_deductions: payslip_deduction_amount,\r\n      ...paydata,\r\n    });\r\n  };\r\n\r\n  const update_PayslipDeduction = async (data) => {\r\n    const { id, rec_id, empid, ...fields } = data;\r\n    updatePayslipDeduction({ id: data.id, empid: empid, ...fields });\r\n    update_Payslip();\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const add_PayslipDeduction = (data) => {\r\n    const { description, amount } = data;\r\n    addPayslipDeduction({\r\n      description: description,\r\n      amount: amount,\r\n      name: single_payslip.name,\r\n      empid: single_payslip.empid,\r\n      period: single_payslip.period,\r\n    });\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const delete_PayslipDeduction = (data) => {\r\n    const { id } = data;\r\n    deletePayslipDeduction(id);\r\n    getSingleBatchPayslipDeductions(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const handleLookup = () => {\r\n    setObj(\r\n      deductions.reduce(function (acc, cur, i) {\r\n        acc[cur.rec_id] = cur.name;\r\n        return acc;\r\n      }, {})\r\n    );\r\n  };\r\n\r\n  if (payslipdeductions_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Expenses.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={[\r\n            {\r\n              title: \"Name\",\r\n              field: \"description\",\r\n              lookup: obj,\r\n            },\r\n            { title: \"Amount\", field: \"amount\", type: \"numeric\" },\r\n          ]}\r\n          data={payslipdeductions}\r\n          title=\"Expense\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // setData([...data, newData]);\r\n                  add_PayslipDeduction(newData);\r\n                  calc_Deduction([...payslipdeductions, newData]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...payslipdeductions];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  //setData([...dataUpdate]);\r\n                  update_PayslipDeduction(newData);\r\n                  calc_Deduction(dataUpdate);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...payslipdeductions];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  // setData([...dataDelete]);\r\n                  delete_PayslipDeduction(oldData);\r\n                  calc_Deduction(dataDelete);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}