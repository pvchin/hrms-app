{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\ExpenseTableStaff.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilState } from \"recoil\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport { useExpensesContext } from \"../context/expenses_context\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { AlertDialog } from \"../helpers/AlertDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_form = {\n  name: \"\",\n  date: \"\",\n  purchased_from: \"\",\n  description: \"\",\n  status: \"Pending\",\n  amount: 0\n};\nconst columns = [{\n  title: \"Name\",\n  field: \"name\",\n  editable: \"never\"\n}, {\n  title: \"Date\",\n  field: \"date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}, {\n  title: \"Description\",\n  field: \"description\",\n  editable: \"never\"\n}, {\n  title: \"Amount\",\n  field: \"amount\",\n  type: \"currency\",\n  editable: \"never\"\n}, {\n  title: \"Status\",\n  field: \"status\",\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || null}\n  , {\n    onChange: e => props.onChange(e.target.value),\n    style: {\n      width: 100\n    },\n    value: props.value,\n    select: true,\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Pending\",\n      children: \"Pending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Approve\",\n      children: \"Approve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Reject\",\n      children: \"Reject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Cancel\",\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this)\n}];\nexport default function ExpenseTable() {\n  _s();\n\n  const classes = useStyles();\n  const [isLoad, setIsLoad] = useState(false);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const [expensesdata, setExpensesdata] = useState([]);\n  const [formdata, setFormdata] = useState(initial_form);\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    editEmployeeID\n  } = useEmployeesContext();\n  const {\n    expenses,\n    editExpenseID,\n    updateExpense,\n    expenses_loading,\n    deleteExpense,\n    loadExpenses,\n    getSingleExpense,\n    setEditExpenseID,\n    setIsExpenseEditingOn,\n    setIsExpenseEditingOff,\n    resetSingleExpense\n  } = useExpensesContext(); // useEffect(() => {\n  //   setExpensesdata(expenses);\n  //   console.log(expensesdata);\n  // }, []);\n  // useEffect(() => {\n  //   loadEmployees();\n  // }, []);\n  // useEffect(() => {\n  //   if (expenses) {\n  //     setExpensesdata(expenses);\n  //     console.log(\"expenses\", expenses, expensesdata)\n  //   } else {\n  //     setIsLoad(!isLoad);\n  //   }\n  // }, [isLoad]);\n\n  const add_Expense = async data => {\n    // const { id } = data;\n    resetSingleExpense();\n    setEditExpenseID(\"\");\n    setIsExpenseEditingOff();\n    handleDialogOpen(); // history.push(\"/singleexpense\");\n  };\n\n  const approve_Expense = async data => {\n    console.log(\"approve\", data);\n    const {\n      id,\n      rec_id,\n      ...fields\n    } = data;\n    updateExpense({\n      id,\n      ...fields\n    }); // loadExpenses();\n  };\n\n  const update_Expense = async data => {\n    const {\n      id\n    } = data;\n    setEditExpenseID(id);\n    setIsExpenseEditingOn();\n    getSingleExpense(id);\n    handleDialogOpen(); // history.push(\"/singleexpense\");\n  };\n\n  const delete_Expense = data => {\n    const {\n      id\n    } = data;\n    setEditExpenseID(id);\n    handleAlertOpen(); // deleteExpense(id);\n    // loadExpenses();\n  };\n\n  const handleDialogOpen = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setIsDialogOpen(false);\n    loadExpenses();\n  };\n\n  const handleAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n\n  const handleAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const handleOnDeleteConfirm = () => {\n    const id = editExpenseID;\n    deleteExpense(id);\n    loadExpenses();\n  }; // if (expenses_loading) {\n  //   return (\n  //     <div>\n  //       <h2>Loading...Expenses</h2>\n  //     </div>\n  //   );\n  // }\n\n\n  if (!expenses) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: expenses.filter(item => item.empid === loginLevel.loginUserId).map(row => {\n          return { ...row\n          };\n        }),\n        title: \"Expenses Claims Application\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(CheckCircleOutlineOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 37\n          }, this)\n        } // editable={{\n        //   onRowUpdate: (newData, oldData) =>\n        //     new Promise((resolve, reject) => {\n        //       setTimeout(() => {\n        //         const dataUpdate = [...expensesdata];\n        //         const index = oldData.tableData.id;\n        //         dataUpdate[index] = newData;\n        //         setExpensesdata([...dataUpdate]);\n        //         //approve_Expense(newData);\n        //         resolve();\n        //       }, 1000);\n        //     }),\n        // }}\n        ,\n        actions: [rowData => ({\n          disabled: rowData.status !== \"Pending\",\n          icon: \"edit\",\n          tooltip: \"Edit Record\",\n          onClick: (event, rowData) => {\n            update_Leave(rowData);\n          }\n        }), {\n          icon: \"delete\",\n          tooltip: \"Delete Record\",\n          onClick: (event, rowData) => {\n            delete_Expense(rowData);\n          }\n        }, {\n          icon: \"add\",\n          tooltip: \"Add Record\",\n          isFreeAction: true,\n          onClick: (event, rowData) => {\n            add_Expense(rowData);\n          }\n        }],\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"#FFF\"\n          },\n          showTitle: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n        isOpen: isDialogOpen,\n        handleClose: handleDialogClose,\n        title: \"\",\n        showButton: true,\n        isFullscree: false,\n        isFullwidth: false,\n        children: /*#__PURE__*/_jsxDEV(ExpenseForm, {\n          handleDialogClose: handleDialogClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n        handleClose: handleAlertClose,\n        onConfirm: handleOnDeleteConfirm,\n        isOpen: isAlertOpen,\n        title: \"Delete Expenses\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Are you sure you want to delete ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseTable, \"B3/kXgZiZH5YhgiEN2lG+K6otio=\", false, function () {\n  return [useStyles, useRecoilState, useEmployeesContext, useExpensesContext];\n});\n\n_c = ExpenseTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/ExpenseTableStaff.js"],"names":["React","useState","useEffect","MaterialTable","TextField","MenuItem","makeStyles","useRecoilState","loginLevelState","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","CheckCircleOutlineOutlinedIcon","ExpenseForm","useExpensesContext","useEmployeesContext","CustomDialog","AlertDialog","initial_form","name","date","purchased_from","description","status","amount","columns","title","field","editable","type","dateSetting","locale","editComponent","props","e","onChange","target","value","width","ExpenseTable","classes","useStyles","isLoad","setIsLoad","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","expensesdata","setExpensesdata","formdata","setFormdata","loginLevel","setLoginLevel","editEmployeeID","expenses","editExpenseID","updateExpense","expenses_loading","deleteExpense","loadExpenses","getSingleExpense","setEditExpenseID","setIsExpenseEditingOn","setIsExpenseEditingOff","resetSingleExpense","add_Expense","data","handleDialogOpen","approve_Expense","console","log","id","rec_id","fields","update_Expense","delete_Expense","handleAlertOpen","handleDialogClose","handleAlertClose","handleOnDeleteConfirm","root","maxWidth","paddingTop","filter","item","empid","loginUserId","map","row","Add","Edit","Delete","Clear","Check","Search","ResetSearch","rowData","disabled","icon","tooltip","onClick","event","update_Leave","isFreeAction","filtering","headerStyle","backgroundColor","color","showTitle","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\n\r\nconst initial_form = {\r\n  name: \"\",\r\n  date: \"\",\r\n  purchased_from: \"\",\r\n  description: \"\",\r\n  status: \"Pending\",\r\n  amount: 0,\r\n};\r\n\r\nconst columns = [\r\n  { title: \"Name\", field: \"name\", editable: \"never\" },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n\r\n  {\r\n    title: \"Description\",\r\n    field: \"description\",\r\n    editable: \"never\",\r\n  },\r\n  { title: \"Amount\", field: \"amount\", type: \"currency\", editable: \"never\" },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default function ExpenseTable() {\r\n  const classes = useStyles();\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [expensesdata, setExpensesdata] = useState([]);\r\n  const [formdata, setFormdata] = useState(initial_form);\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { editEmployeeID } = useEmployeesContext();\r\n  const {\r\n    expenses,\r\n    editExpenseID,\r\n    updateExpense,\r\n    expenses_loading,\r\n    deleteExpense,\r\n    loadExpenses,\r\n    getSingleExpense,\r\n    setEditExpenseID,\r\n    setIsExpenseEditingOn,\r\n    setIsExpenseEditingOff,\r\n    resetSingleExpense,\r\n  } = useExpensesContext();\r\n\r\n  // useEffect(() => {\r\n  //   setExpensesdata(expenses);\r\n  //   console.log(expensesdata);\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   loadEmployees();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (expenses) {\r\n  //     setExpensesdata(expenses);\r\n  //     console.log(\"expenses\", expenses, expensesdata)\r\n  //   } else {\r\n  //     setIsLoad(!isLoad);\r\n  //   }\r\n  // }, [isLoad]);\r\n\r\n  const add_Expense = async (data) => {\r\n    // const { id } = data;\r\n    resetSingleExpense();\r\n    setEditExpenseID(\"\");\r\n    setIsExpenseEditingOff();\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const approve_Expense = async (data) => {\r\n    console.log(\"approve\", data);\r\n    const { id, rec_id, ...fields } = data;\r\n    updateExpense({ id, ...fields });\r\n    // loadExpenses();\r\n  };\r\n\r\n  const update_Expense = async (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    setIsExpenseEditingOn();\r\n    getSingleExpense(id);\r\n    handleDialogOpen();\r\n    // history.push(\"/singleexpense\");\r\n  };\r\n\r\n  const delete_Expense = (data) => {\r\n    const { id } = data;\r\n    setEditExpenseID(id);\r\n    handleAlertOpen();\r\n\r\n    // deleteExpense(id);\r\n    // loadExpenses();\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadExpenses();\r\n  };\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnDeleteConfirm = () => {\r\n    const id = editExpenseID;\r\n    deleteExpense(id);\r\n    loadExpenses();\r\n  };\r\n\r\n  // if (expenses_loading) {\r\n  //   return (\r\n  //     <div>\r\n  //       <h2>Loading...Expenses</h2>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n  if (!expenses) {\r\n    return (\r\n      <div>\r\n        <h2>Loading...Expenses</h2>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={expenses\r\n            .filter((item) => item.empid === loginLevel.loginUserId)\r\n            .map((row) => {\r\n              return { ...row };\r\n            })}\r\n          title=\"Expenses Claims Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <CheckCircleOutlineOutlinedIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          // editable={{\r\n          //   onRowUpdate: (newData, oldData) =>\r\n          //     new Promise((resolve, reject) => {\r\n          //       setTimeout(() => {\r\n          //         const dataUpdate = [...expensesdata];\r\n          //         const index = oldData.tableData.id;\r\n          //         dataUpdate[index] = newData;\r\n          //         setExpensesdata([...dataUpdate]);\r\n          //         //approve_Expense(newData);\r\n\r\n          //         resolve();\r\n          //       }, 1000);\r\n          //     }),\r\n          // }}\r\n          actions={[\r\n            (rowData) => ({\r\n              disabled: rowData.status !== \"Pending\",\r\n              icon: \"edit\",\r\n              tooltip: \"Edit Record\",\r\n              onClick: (event, rowData) => {\r\n                update_Leave(rowData);\r\n              },\r\n            }),\r\n            {\r\n              icon: \"delete\",\r\n              tooltip: \"Delete Record\",\r\n              onClick: (event, rowData) => {\r\n                delete_Expense(rowData);\r\n              },\r\n            },\r\n            {\r\n              icon: \"add\",\r\n              tooltip: \"Add Record\",\r\n              isFreeAction: true,\r\n              onClick: (event, rowData) => {\r\n                add_Expense(rowData);\r\n              },\r\n            },\r\n          ]}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"#FFF\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n          isFullwidth={false}\r\n        >\r\n          <ExpenseForm handleDialogClose={handleDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleAlertClose}\r\n          onConfirm={handleOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}