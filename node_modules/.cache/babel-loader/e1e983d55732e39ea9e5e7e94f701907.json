{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\PayslipForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer, useEffect } from \"react\";\nimport { Button, Icon, TextField, Paper, Typography, Select } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport Payslip_Earnings from \"./Payslip_Earnings\";\nimport Payslip_Deductions from \"./Payslip_Deductions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_values = {\n  name: \"\",\n  period: \"\",\n  date: \"\",\n  bank_name: \"\",\n  bank_acno: \"\",\n  status: \"Pending\",\n  nett_pay: 0\n};\n\nconst Payslip_Header = () => {\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        children: \"PAYSLIP FORM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"p\",\n        children: \"Payslip Preparation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"name\",\n            control: control,\n            defaultValue: name,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Name\",\n                id: \"margin-normal\",\n                name: \"name\",\n                defaultValue: name,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: employees.map(e => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: e.name,\n                    children: e.name\n                  }, e.name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this);\n            },\n            rules: {\n              required: \"Name required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"period\",\n            control: control,\n            defaultValue: isPayslipEditing ? period : payslip_period,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Period\",\n                id: \"margin-normal\",\n                name: \"period\",\n                defaultValue: isPayslipEditing ? period : payslip_period,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this);\n            },\n            rules: {\n              required: \"Period is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"date\",\n            control: control,\n            defaultValue: date,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Date\",\n                type: \"date\",\n                id: \"margin-normal\",\n                name: \"date\",\n                defaultValue: date,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this);\n            },\n            rules: {\n              required: \"Date is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"bank_name\",\n            control: control,\n            defaultValue: bank_name,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Bank Name\",\n                id: \"margin-normal\",\n                name: \"bank_name\",\n                defaultValue: bank_name,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this);\n            } // rules={{ required: \"Reason is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"bank_acno\",\n            control: control,\n            defaultValue: bank_acno,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Bank AC No\",\n                id: \"margin-normal\",\n                name: \"bank_acno\",\n                defaultValue: bank_acno,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this);\n            } // rules={{ required: \"Reason is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"nett_pay\",\n            control: control,\n            defaultValue: nett_pay,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Nett Pay\",\n                type: \"number\",\n                id: \"standard-number\",\n                name: \"nett_pay\",\n                defaultValue: nett_pay,\n                className: classes.textField //onChange={onChange}\n                ,\n                onChange: e => {\n                  onChange(parseInt(e.target.value, 10));\n                },\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this);\n            } //rules={{ required: \"IC No required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"status\",\n            control: control,\n            defaultValue: \"Pending\",\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Status\",\n                id: \"margin-normal\",\n                name: \"status\",\n                defaultValue: status,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Pending\",\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Cancel\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Approved\",\n                  children: \"Approved\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Rejected\",\n                  children: \"Rejected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this);\n            } //rules={{ required: \"Status is required\" }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button,\n            children: [\"Submit \", /*#__PURE__*/_jsxDEV(Icon, {\n              className: classes.rightIcon,\n              children: \"send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Payslip_Header;\n\nconst PayslipForm = () => {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const {\n    isPayslipEditing,\n    single_payslip,\n    updatePayslip,\n    addPayslip,\n    editPayslipID,\n    loadPayslips,\n    single_payslip_loading,\n    payslip_period\n  } = usePayslipsContext();\n  const {\n    loadEmployees,\n    employees\n  } = useEmployeesContext();\n  const {\n    name,\n    period,\n    date,\n    bank_name,\n    bank_acno,\n    status,\n    nett_pay\n  } = single_payslip || initial_values;\n  const {\n    handleSubmit,\n    control\n  } = useForm();\n  useEffect(() => {\n    loadEmployees();\n  }, []);\n\n  const onSubmit = data => {\n    if (isPayslipEditing) {\n      updatePayslip({\n        id: editPayslipID,\n        ...data\n      });\n    } else {\n      addPayslip({ ...data\n      });\n    }\n\n    loadPayslips();\n    history.push(\"/batchpayslips\");\n  };\n\n  if (single_payslip_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(PayslipHeader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PayslipForm, \"j4hVMd3cjXTuhQhopJg5NbSa3tM=\", false, function () {\n  return [useHistory, useStyles, usePayslipsContext, useEmployeesContext, useForm];\n});\n\n_c2 = PayslipForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  }\n}));\nexport default PayslipForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Payslip_Header\");\n$RefreshReg$(_c2, \"PayslipForm\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/PayslipForm.js"],"names":["React","useState","useReducer","useEffect","Button","Icon","TextField","Paper","Typography","Select","makeStyles","MenuItem","useEmployeesContext","usePayslipsContext","Controller","useForm","useHistory","Payslip_Earnings","Payslip_Deductions","initial_values","name","period","date","bank_name","bank_acno","status","nett_pay","Payslip_Header","classes","root","handleSubmit","onSubmit","control","field","onChange","value","fieldState","error","textField","message","employees","map","e","required","isPayslipEditing","payslip_period","readOnly","shrink","parseInt","target","button","rightIcon","PayslipForm","history","useStyles","single_payslip","updatePayslip","addPayslip","editPayslipID","loadPayslips","single_payslip_loading","loadEmployees","data","id","push","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","padding","container","display","flexWrap","width"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Payslip_Earnings from \"./Payslip_Earnings\";\r\nimport Payslip_Deductions from \"./Payslip_Deductions\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  period: \"\",\r\n  date: \"\",\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  status: \"Pending\",\r\n  nett_pay: 0,\r\n};\r\n\r\nconst Payslip_Header = () => {\r\n  <div>\r\n    <Paper className={classes.root}>\r\n      <Typography variant=\"h5\" component=\"h3\">\r\n        PAYSLIP FORM\r\n      </Typography>\r\n      <Typography component=\"p\">Payslip Preparation</Typography>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div>\r\n          <Controller\r\n            name=\"name\"\r\n            control={control}\r\n            defaultValue={name}\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => {\r\n              return (\r\n                <TextField\r\n                  label=\"Name\"\r\n                  id=\"margin-normal\"\r\n                  name=\"name\"\r\n                  defaultValue={name}\r\n                  className={classes.textField}\r\n                  onChange={onChange}\r\n                  error={!!error}\r\n                  helperText={error ? error.message : null}\r\n                  select\r\n                >\r\n                  {employees.map((e) => {\r\n                    return (\r\n                      <MenuItem key={e.name} value={e.name}>\r\n                        {e.name}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </TextField>\r\n              );\r\n            }}\r\n            rules={{ required: \"Name required\" }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Controller\r\n            name=\"period\"\r\n            control={control}\r\n            defaultValue={isPayslipEditing ? period : payslip_period}\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => {\r\n              return (\r\n                <TextField\r\n                  label=\"Period\"\r\n                  id=\"margin-normal\"\r\n                  name=\"period\"\r\n                  defaultValue={isPayslipEditing ? period : payslip_period}\r\n                  className={classes.textField}\r\n                  onChange={onChange}\r\n                  error={!!error}\r\n                  helperText={error ? error.message : null}\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n              );\r\n            }}\r\n            rules={{ required: \"Period is required\" }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Controller\r\n            name=\"date\"\r\n            control={control}\r\n            defaultValue={date}\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => {\r\n              return (\r\n                <TextField\r\n                  label=\"Date\"\r\n                  type=\"date\"\r\n                  id=\"margin-normal\"\r\n                  name=\"date\"\r\n                  defaultValue={date}\r\n                  className={classes.textField}\r\n                  onChange={onChange}\r\n                  error={!!error}\r\n                  helperText={error ? error.message : null}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              );\r\n            }}\r\n            rules={{ required: \"Date is required\" }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Controller\r\n            name=\"bank_name\"\r\n            control={control}\r\n            defaultValue={bank_name}\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => {\r\n              return (\r\n                <TextField\r\n                  label=\"Bank Name\"\r\n                  id=\"margin-normal\"\r\n                  name=\"bank_name\"\r\n                  defaultValue={bank_name}\r\n                  className={classes.textField}\r\n                  onChange={onChange}\r\n                  error={!!error}\r\n                  helperText={error ? error.message : null}\r\n                />\r\n              );\r\n            }}\r\n            // rules={{ required: \"Reason is required\" }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Controller\r\n            name=\"bank_acno\"\r\n            control={control}\r\n            defaultValue={bank_acno}\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => {\r\n              return (\r\n                <TextField\r\n                  label=\"Bank AC No\"\r\n                  id=\"margin-normal\"\r\n                  name=\"bank_acno\"\r\n                  defaultValue={bank_acno}\r\n                  className={classes.textField}\r\n                  onChange={onChange}\r\n                  error={!!error}\r\n                  helperText={error ? error.message : null}\r\n                />\r\n              );\r\n            }}\r\n            // rules={{ required: \"Reason is required\" }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Controller\r\n            name=\"nett_pay\"\r\n            control={control}\r\n            defaultValue={nett_pay}\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => {\r\n              return (\r\n                <TextField\r\n                  label=\"Nett Pay\"\r\n                  type=\"number\"\r\n                  id=\"standard-number\"\r\n                  name=\"nett_pay\"\r\n                  defaultValue={nett_pay}\r\n                  className={classes.textField}\r\n                  //onChange={onChange}\r\n                  onChange={(e) => {\r\n                    onChange(parseInt(e.target.value, 10));\r\n                  }}\r\n                  error={!!error}\r\n                  helperText={error ? error.message : null}\r\n                />\r\n              );\r\n            }}\r\n            //rules={{ required: \"IC No required\" }}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <Controller\r\n            name=\"status\"\r\n            control={control}\r\n            defaultValue=\"Pending\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => {\r\n              return (\r\n                <TextField\r\n                  label=\"Status\"\r\n                  id=\"margin-normal\"\r\n                  name=\"status\"\r\n                  defaultValue={status}\r\n                  className={classes.textField}\r\n                  onChange={onChange}\r\n                  error={!!error}\r\n                  helperText={error ? error.message : null}\r\n                  select\r\n                >\r\n                  <MenuItem value=\"Pending\">Pending</MenuItem>\r\n                  <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n                  <MenuItem value=\"Approved\">Approved</MenuItem>\r\n                  <MenuItem value=\"Rejected\">Rejected</MenuItem>\r\n                </TextField>\r\n              );\r\n            }}\r\n            //rules={{ required: \"Status is required\" }}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n          >\r\n            Submit <Icon className={classes.rightIcon}>send</Icon>\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Paper>\r\n  </div>;\r\n};\r\n\r\nconst PayslipForm = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const {\r\n    isPayslipEditing,\r\n    single_payslip,\r\n    updatePayslip,\r\n    addPayslip,\r\n    editPayslipID,\r\n    loadPayslips,\r\n    single_payslip_loading,\r\n    payslip_period,\r\n  } = usePayslipsContext();\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n  const { name, period, date, bank_name, bank_acno, status, nett_pay } =\r\n    single_payslip || initial_values;\r\n  const { handleSubmit, control } = useForm();\r\n\r\n  useEffect(() => {\r\n    loadEmployees();\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    if (isPayslipEditing) {\r\n      updatePayslip({ id: editPayslipID, ...data });\r\n    } else {\r\n      addPayslip({ ...data });\r\n    }\r\n    loadPayslips();\r\n    history.push(\"/batchpayslips\");\r\n  };\r\n\r\n  if (single_payslip_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return <PayslipHeader />;\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default PayslipForm;\r\n"]},"metadata":{},"sourceType":"module"}