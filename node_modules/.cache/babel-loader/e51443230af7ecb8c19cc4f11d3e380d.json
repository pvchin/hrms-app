{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\PayslipForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer, useEffect } from \"react\";\nimport { Button, Icon, TextField, Paper, Typography, Select, Divider, Grid, Toolbar, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport Payslip_Earnings from \"./Payslip_Earnings\";\nimport Payslip_Deductions from \"./Payslip_Deductions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_values = {\n  name: \"\",\n  period: \"\",\n  date: \"\",\n  bank_name: \"\",\n  bank_acno: \"\",\n  status: \"Pending\",\n  total_earnings: 0,\n  total_deductions: 0,\n  tap_amount: 0,\n  scp_amount: 0,\n  basic_pay: 0,\n  nett_pay: 0\n};\n\nconst PayslipForm = () => {\n  _s();\n\n  let history = useHistory();\n  const classes = useStyles();\n  const {\n    isPayslipEditing,\n    single_payslip,\n    updatePayslip,\n    addPayslip,\n    editPayslipID,\n    loadPayslips,\n    single_payslip_loading,\n    payslip_period\n  } = usePayslipsContext();\n  const {\n    loadEmployees,\n    employees\n  } = useEmployeesContext();\n  const {\n    handleSubmit,\n    control\n  } = useForm();\n  const {\n    name,\n    period,\n    date,\n    bank_name,\n    bank_acno,\n    status,\n    total_earnings,\n    total_deductions,\n    tap_amount,\n    scp_amount,\n    basic_pay,\n    nett_pay\n  } = single_payslip || initial_values;\n  useEffect(() => {\n    loadEmployees();\n  }, []);\n\n  const onSubmit = data => {//   if (isPayslipEditing) {\n    //     updatePayslip({ id: editPayslipID, ...data });\n    //   } else {\n    //     addPayslip({ ...data });\n    //   }\n    //   loadPayslips();\n    //   history.push(\"/batchpayslips\");\n  };\n\n  if (single_payslip_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: classes.root,\n          spacing: 15,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"h3\",\n              children: \"PAYSLIP FORM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"p\",\n              children: \"Payslip Preparation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              children: [\"Submit \", /*#__PURE__*/_jsxDEV(Icon, {\n                className: classes.rightIcon,\n                children: \"send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"name\",\n              control: control,\n              defaultValue: name,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Name\",\n                  id: \"margin-normal\",\n                  name: \"name\",\n                  defaultValue: name,\n                  className: classes.textField,\n                  onChange: onChange,\n                  error: !!error,\n                  helperText: error ? error.message : null,\n                  select: true,\n                  children: employees.map(e => {\n                    return /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: e.name,\n                      children: e.name\n                    }, e.name, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this);\n              },\n              rules: {\n                required: \"Name required\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Controller, {\n              name: \"period\",\n              control: control,\n              defaultValue: period,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Period\",\n                  id: \"margin-normal\",\n                  name: \"period\",\n                  defaultValue: period,\n                  className: classes.textField,\n                  onChange: onChange,\n                  error: !!error,\n                  helperText: error ? error.message : null,\n                  InputProps: {\n                    readOnly: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }, this);\n              },\n              rules: {\n                required: \"Period is required\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"date\",\n              control: control,\n              defaultValue: date,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Date\",\n                  type: \"date\",\n                  id: \"margin-normal\",\n                  name: \"date\",\n                  defaultValue: date,\n                  className: classes.textField,\n                  onChange: onChange,\n                  error: !!error,\n                  helperText: error ? error.message : null,\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 21\n                }, this);\n              },\n              rules: {\n                required: \"Date is required\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Controller, {\n              name: \"bank_name\",\n              control: control,\n              defaultValue: bank_name,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Bank Name\",\n                  id: \"margin-normal\",\n                  name: \"bank_name\",\n                  defaultValue: bank_name,\n                  className: classes.textField,\n                  onChange: onChange,\n                  error: !!error,\n                  helperText: error ? error.message : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this);\n              } // rules={{ required: \"Reason is required\" }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"bank_acno\",\n              control: control,\n              defaultValue: bank_acno,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Bank AC No\",\n                  id: \"margin-normal\",\n                  name: \"bank_acno\",\n                  defaultValue: bank_acno,\n                  className: classes.textField,\n                  onChange: onChange,\n                  error: !!error,\n                  helperText: error ? error.message : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this);\n              } // rules={{ required: \"Reason is required\" }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Controller, {\n              name: \"tap_amount\",\n              control: control,\n              defaultValue: tap_amount,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"TAP Contrinution\",\n                  type: \"number\",\n                  id: \"standard-number\",\n                  name: \"tap_amount\",\n                  defaultValue: basic_pay,\n                  className: classes.textField //onChange={onChange}\n                  ,\n                  onChange: e => {\n                    onChange(parseInt(e.target.value, 10));\n                  },\n                  error: !!error,\n                  helperText: error ? error.message : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this);\n              } //rules={{ required: \"IC No required\" }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"scp_amount\",\n              control: control,\n              defaultValue: scp_amount,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"SCP Contribution\",\n                  type: \"number\",\n                  id: \"standard-number\",\n                  name: \"scp_amount\",\n                  defaultValue: scp_amount,\n                  className: classes.textField //onChange={onChange}\n                  ,\n                  onChange: e => {\n                    onChange(parseInt(e.target.value, 10));\n                  },\n                  error: !!error,\n                  helperText: error ? error.message : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this);\n              } //rules={{ required: \"IC No required\" }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Controller, {\n              name: \"total_earnings\",\n              control: control,\n              defaultValue: total_earnings,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Total Earnings\",\n                  type: \"number\",\n                  id: \"standard-number\",\n                  name: \"total_earnings\",\n                  defaultValue: basic_pay,\n                  className: classes.textField //onChange={onChange}\n                  ,\n                  onChange: e => {\n                    onChange(parseInt(e.target.value, 10));\n                  },\n                  error: !!error,\n                  helperText: error ? error.message : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 21\n                }, this);\n              } //rules={{ required: \"IC No required\" }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"total_deductions\",\n              control: control,\n              defaultValue: total_deductions,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Total Deductions\",\n                  type: \"number\",\n                  id: \"standard-number\",\n                  name: \"total_deductions\",\n                  defaultValue: total_deductions,\n                  className: classes.textField //onChange={onChange}\n                  ,\n                  onChange: e => {\n                    onChange(parseInt(e.target.value, 10));\n                  },\n                  error: !!error,\n                  helperText: error ? error.message : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 21\n                }, this);\n              } //rules={{ required: \"IC No required\" }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Controller, {\n              name: \"basic_pay\",\n              control: control,\n              defaultValue: basic_pay,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Basic Pay\",\n                  type: \"number\",\n                  id: \"standard-number\",\n                  name: \"basic_pay\",\n                  defaultValue: basic_pay,\n                  className: classes.textField //onChange={onChange}\n                  ,\n                  onChange: e => {\n                    onChange(parseInt(e.target.value, 10));\n                  },\n                  error: !!error,\n                  helperText: error ? error.message : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 21\n                }, this);\n              } //rules={{ required: \"IC No required\" }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"nett_pay\",\n              control: control,\n              defaultValue: nett_pay,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Nett Pay\",\n                  type: \"number\",\n                  id: \"standard-number\",\n                  name: \"nett_pay\",\n                  defaultValue: nett_pay,\n                  className: classes.textField //onChange={onChange}\n                  ,\n                  onChange: e => {\n                    onChange(parseInt(e.target.value, 10));\n                  },\n                  error: !!error,\n                  helperText: error ? error.message : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 21\n                }, this);\n              } //rules={{ required: \"IC No required\" }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"status\",\n              control: control,\n              defaultValue: \"Pending\",\n              render: ({\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              }) => {\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Status\",\n                  id: \"margin-normal\",\n                  name: \"status\",\n                  defaultValue: status,\n                  className: classes.textField,\n                  onChange: onChange,\n                  error: !!error,\n                  helperText: error ? error.message : null,\n                  select: true,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Pending\",\n                    children: \"Pending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Cancel\",\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Approved\",\n                    children: \"Approved\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Rejected\",\n                    children: \"Rejected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 21\n                }, this);\n              } //rules={{ required: \"Status is required\" }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            className: classes.grid,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              children: /*#__PURE__*/_jsxDEV(Payslip_Earnings, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              orientation: \"vertical\",\n              flexItem: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              children: /*#__PURE__*/_jsxDEV(Payslip_Deductions, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PayslipForm, \"j4hVMd3cjXTuhQhopJg5NbSa3tM=\", false, function () {\n  return [useHistory, useStyles, usePayslipsContext, useEmployeesContext, useForm];\n});\n\n_c = PayslipForm;\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  },\n  grid: {\n    // padding: theme.spacing(3, 2),\n    justifyContent: \"space-evenly\"\n  },\n  box: {\n    height: 100,\n    display: \"flex\",\n    border: \"1px solid black\",\n    padding: 8\n  }\n}));\nexport default PayslipForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PayslipForm\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/PayslipForm.js"],"names":["React","useState","useReducer","useEffect","Button","Icon","TextField","Paper","Typography","Select","Divider","Grid","Toolbar","Box","makeStyles","MenuItem","useEmployeesContext","usePayslipsContext","Controller","useForm","useHistory","Payslip_Earnings","Payslip_Deductions","initial_values","name","period","date","bank_name","bank_acno","status","total_earnings","total_deductions","tap_amount","scp_amount","basic_pay","nett_pay","PayslipForm","history","classes","useStyles","isPayslipEditing","single_payslip","updatePayslip","addPayslip","editPayslipID","loadPayslips","single_payslip_loading","payslip_period","loadEmployees","employees","handleSubmit","control","onSubmit","data","root","button","rightIcon","field","onChange","value","fieldState","error","textField","message","map","e","required","readOnly","shrink","parseInt","target","grid","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","padding","container","display","flexWrap","width","justifyContent","box","height","border"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Select,\r\n  Divider,\r\n  Grid,\r\n  Toolbar,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Payslip_Earnings from \"./Payslip_Earnings\";\r\nimport Payslip_Deductions from \"./Payslip_Deductions\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  period: \"\",\r\n  date: \"\",\r\n  bank_name: \"\",\r\n  bank_acno: \"\",\r\n  status: \"Pending\",\r\n  total_earnings: 0,\r\n  total_deductions: 0,\r\n  tap_amount: 0,\r\n  scp_amount: 0,\r\n  basic_pay: 0,\r\n  nett_pay: 0,\r\n};\r\n\r\nconst PayslipForm = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const {\r\n    isPayslipEditing,\r\n    single_payslip,\r\n    updatePayslip,\r\n    addPayslip,\r\n    editPayslipID,\r\n    loadPayslips,\r\n    single_payslip_loading,\r\n    payslip_period,\r\n  } = usePayslipsContext();\r\n  const { loadEmployees, employees } = useEmployeesContext();\r\n\r\n  const { handleSubmit, control } = useForm();\r\n  const {\r\n    name,\r\n    period,\r\n    date,\r\n    bank_name,\r\n    bank_acno,\r\n    status,\r\n    total_earnings,\r\n    total_deductions,\r\n    tap_amount,\r\n    scp_amount,\r\n    basic_pay,\r\n    nett_pay,\r\n  } = single_payslip || initial_values;\r\n  useEffect(() => {\r\n    loadEmployees();\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    //   if (isPayslipEditing) {\r\n    //     updatePayslip({ id: editPayslipID, ...data });\r\n    //   } else {\r\n    //     addPayslip({ ...data });\r\n    //   }\r\n    //   loadPayslips();\r\n    //   history.push(\"/batchpayslips\");\r\n  };\r\n\r\n  if (single_payslip_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Paper className={classes.root}>\r\n          <Grid container className={classes.root} spacing={15}>\r\n            <div>\r\n              <Typography variant=\"h5\" component=\"h3\">\r\n                PAYSLIP FORM\r\n              </Typography>\r\n              <Typography component=\"p\">Payslip Preparation</Typography>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n              >\r\n                Submit <Icon className={classes.rightIcon}>send</Icon>\r\n              </Button>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <Controller\r\n                name=\"name\"\r\n                control={control}\r\n                defaultValue={name}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Name\"\r\n                      id=\"margin-normal\"\r\n                      name=\"name\"\r\n                      defaultValue={name}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                      select\r\n                    >\r\n                      {employees.map((e) => {\r\n                        return (\r\n                          <MenuItem key={e.name} value={e.name}>\r\n                            {e.name}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </TextField>\r\n                  );\r\n                }}\r\n                rules={{ required: \"Name required\" }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Controller\r\n                name=\"period\"\r\n                control={control}\r\n                defaultValue={period}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Period\"\r\n                      id=\"margin-normal\"\r\n                      name=\"period\"\r\n                      defaultValue={period}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n                  );\r\n                }}\r\n                rules={{ required: \"Period is required\" }}\r\n              />\r\n\r\n              <Controller\r\n                name=\"date\"\r\n                control={control}\r\n                defaultValue={date}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Date\"\r\n                      type=\"date\"\r\n                      id=\"margin-normal\"\r\n                      name=\"date\"\r\n                      defaultValue={date}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                    />\r\n                  );\r\n                }}\r\n                rules={{ required: \"Date is required\" }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Controller\r\n                name=\"bank_name\"\r\n                control={control}\r\n                defaultValue={bank_name}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Bank Name\"\r\n                      id=\"margin-normal\"\r\n                      name=\"bank_name\"\r\n                      defaultValue={bank_name}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  );\r\n                }}\r\n                // rules={{ required: \"Reason is required\" }}\r\n              />\r\n\r\n              <Controller\r\n                name=\"bank_acno\"\r\n                control={control}\r\n                defaultValue={bank_acno}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Bank AC No\"\r\n                      id=\"margin-normal\"\r\n                      name=\"bank_acno\"\r\n                      defaultValue={bank_acno}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  );\r\n                }}\r\n                // rules={{ required: \"Reason is required\" }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Controller\r\n                name=\"tap_amount\"\r\n                control={control}\r\n                defaultValue={tap_amount}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"TAP Contrinution\"\r\n                      type=\"number\"\r\n                      id=\"standard-number\"\r\n                      name=\"tap_amount\"\r\n                      defaultValue={basic_pay}\r\n                      className={classes.textField}\r\n                      //onChange={onChange}\r\n                      onChange={(e) => {\r\n                        onChange(parseInt(e.target.value, 10));\r\n                      }}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  );\r\n                }}\r\n                //rules={{ required: \"IC No required\" }}\r\n              />\r\n              <Controller\r\n                name=\"scp_amount\"\r\n                control={control}\r\n                defaultValue={scp_amount}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"SCP Contribution\"\r\n                      type=\"number\"\r\n                      id=\"standard-number\"\r\n                      name=\"scp_amount\"\r\n                      defaultValue={scp_amount}\r\n                      className={classes.textField}\r\n                      //onChange={onChange}\r\n                      onChange={(e) => {\r\n                        onChange(parseInt(e.target.value, 10));\r\n                      }}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  );\r\n                }}\r\n                //rules={{ required: \"IC No required\" }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Controller\r\n                name=\"total_earnings\"\r\n                control={control}\r\n                defaultValue={total_earnings}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Total Earnings\"\r\n                      type=\"number\"\r\n                      id=\"standard-number\"\r\n                      name=\"total_earnings\"\r\n                      defaultValue={basic_pay}\r\n                      className={classes.textField}\r\n                      //onChange={onChange}\r\n                      onChange={(e) => {\r\n                        onChange(parseInt(e.target.value, 10));\r\n                      }}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  );\r\n                }}\r\n                //rules={{ required: \"IC No required\" }}\r\n              />\r\n              <Controller\r\n                name=\"total_deductions\"\r\n                control={control}\r\n                defaultValue={total_deductions}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Total Deductions\"\r\n                      type=\"number\"\r\n                      id=\"standard-number\"\r\n                      name=\"total_deductions\"\r\n                      defaultValue={total_deductions}\r\n                      className={classes.textField}\r\n                      //onChange={onChange}\r\n                      onChange={(e) => {\r\n                        onChange(parseInt(e.target.value, 10));\r\n                      }}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  );\r\n                }}\r\n                //rules={{ required: \"IC No required\" }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Controller\r\n                name=\"basic_pay\"\r\n                control={control}\r\n                defaultValue={basic_pay}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Basic Pay\"\r\n                      type=\"number\"\r\n                      id=\"standard-number\"\r\n                      name=\"basic_pay\"\r\n                      defaultValue={basic_pay}\r\n                      className={classes.textField}\r\n                      //onChange={onChange}\r\n                      onChange={(e) => {\r\n                        onChange(parseInt(e.target.value, 10));\r\n                      }}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  );\r\n                }}\r\n                //rules={{ required: \"IC No required\" }}\r\n              />\r\n              <Controller\r\n                name=\"nett_pay\"\r\n                control={control}\r\n                defaultValue={nett_pay}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Nett Pay\"\r\n                      type=\"number\"\r\n                      id=\"standard-number\"\r\n                      name=\"nett_pay\"\r\n                      defaultValue={nett_pay}\r\n                      className={classes.textField}\r\n                      //onChange={onChange}\r\n                      onChange={(e) => {\r\n                        onChange(parseInt(e.target.value, 10));\r\n                      }}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                    />\r\n                  );\r\n                }}\r\n                //rules={{ required: \"IC No required\" }}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <Controller\r\n                name=\"status\"\r\n                control={control}\r\n                defaultValue=\"Pending\"\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Status\"\r\n                      id=\"margin-normal\"\r\n                      name=\"status\"\r\n                      defaultValue={status}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                      select\r\n                    >\r\n                      <MenuItem value=\"Pending\">Pending</MenuItem>\r\n                      <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n                      <MenuItem value=\"Approved\">Approved</MenuItem>\r\n                      <MenuItem value=\"Rejected\">Rejected</MenuItem>\r\n                    </TextField>\r\n                  );\r\n                }}\r\n                //rules={{ required: \"Status is required\" }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Divider />\r\n          <div>\r\n            <Grid container alignItems=\"center\" className={classes.grid}>\r\n              {/* <Grid item xs={4} style={{ textAlign: \"center\" }}> */}\r\n              <Grid>\r\n                <Payslip_Earnings />\r\n              </Grid>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              {/* <Grid item xs={4} style={{ textAlign: \"center\" }}> */}\r\n              <Grid>\r\n                <Payslip_Deductions />\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <Divider />\r\n        </Paper>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n  grid: {\r\n    // padding: theme.spacing(3, 2),\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  box: {\r\n    height: 100,\r\n    display: \"flex\",\r\n    border: \"1px solid black\",\r\n    padding: 8,\r\n  },\r\n}));\r\n\r\nexport default PayslipForm;\r\n"]},"metadata":{},"sourceType":"module"}