{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\UpdateAllowances.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\"\n}];\nexport default function UpdateAllowances() {\n  _s();\n\n  let history = useHistory();\n  const [data, setData] = useState([{\n    name: \"Housing Allowances\",\n    amount: 250\n  }]);\n  const classes = useStyles();\n  useEffect(() => {\n    loadAllowances();\n  }, []);\n\n  const update_Allowance = async data => {\n    const {\n      id\n    } = data;\n    setEditLeaveID(id);\n    setIsLeaveEditingOn();\n    getSingleLeave(id);\n    history.push(\"/singleleave\");\n  };\n\n  const add_Leave = async data => {\n    const {\n      id\n    } = data;\n    resetSingleLeave();\n    setEditLeaveID(\"\");\n    setIsLeaveEditingOff();\n    history.push(\"/singleleave\");\n  };\n\n  const delete_Allowance = data => {\n    const {\n      id\n    } = data;\n    deleteAllowance(id);\n    loadLeaves();\n  };\n\n  if (leaves_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: data,\n        title: \"Allowances\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              setData([...data, newData]);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...data];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData;\n              setData([...dataUpdate]);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...data];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1);\n              setData([...dataDelete]);\n              resolve();\n            }, 1000);\n          })\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateAllowances, \"hfNv2mA+PJ9EJpi3ds0JTQGhw2Y=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = UpdateAllowances;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateAllowances\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/UpdateAllowances.js"],"names":["React","useState","useEffect","MaterialTable","makeStyles","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","useHistory","Link","columns","title","field","UpdateAllowances","history","data","setData","name","amount","classes","useStyles","loadAllowances","update_Allowance","id","setEditLeaveID","setIsLeaveEditingOn","getSingleLeave","push","add_Leave","resetSingleLeave","setIsLeaveEditingOff","delete_Allowance","deleteAllowance","loadLeaves","leaves_loading","root","maxWidth","paddingTop","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","onRowDelete","dataDelete","splice","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n];\r\n\r\nexport default function UpdateAllowances() {\r\n  let history = useHistory();\r\n  const [data, setData] = useState([\r\n    { name: \"Housing Allowances\", amount: 250 },\r\n  ]);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    loadAllowances();\r\n  }, []);\r\n\r\n  const update_Allowance = async (data) => {\r\n    const { id } = data;\r\n    setEditLeaveID(id);\r\n    setIsLeaveEditingOn();\r\n    getSingleLeave(id);\r\n    history.push(\"/singleleave\");\r\n  };\r\n\r\n  const add_Leave = async (data) => {\r\n    const { id } = data;\r\n    resetSingleLeave();\r\n    setEditLeaveID(\"\");\r\n    setIsLeaveEditingOff();\r\n    history.push(\"/singleleave\");\r\n  };\r\n\r\n  const delete_Allowance = (data) => {\r\n    const { id } = data;\r\n\r\n    deleteAllowance(id);\r\n    loadLeaves();\r\n  };\r\n\r\n  if (leaves_loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={data}\r\n          title=\"Allowances\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  setData([...data, newData]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setData([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...data];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setData([...dataDelete]);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}