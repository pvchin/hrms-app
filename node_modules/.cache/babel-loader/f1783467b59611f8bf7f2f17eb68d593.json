{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Payslip_Earnings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { useTablesContext } from \"../context/tables_context\"; // const columns = [\n//   {\n//     title: \"Name\",\n//     field: \"description\",\n//     lookup: obj,\n//   },\n//   { title: \"Amount\", field: \"amount\", type: \"numeric\" },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Payslip_Earnings({\n  setCalc\n}) {\n  _s();\n\n  let history = useHistory();\n  let mounted = useRef(true);\n  var obj = allowances.reduce(function (acc, cur, i) {\n    acc[cur.id] = cur.name;\n    return acc;\n  }, {});\n  const [state, setState] = useState();\n  const [load, setLoad] = useState(true);\n  const classes = useStyles();\n  const {\n    payslipearnings,\n    payslip_earning_amount,\n    setPayslipEarningAmount,\n    addPayslipEarning,\n    payslipearnings_loading,\n    updatePayslipEarning,\n    deletePayslipEarning,\n    updatePayslip,\n    editPayslipID,\n    single_payslip,\n    payslip_period,\n    getSingleBatchPayslipEarnings\n  } = usePayslipsContext();\n  const {\n    name,\n    amount\n  } = payslipearnings;\n  const {\n    allowances\n  } = useTablesContext();\n  useEffect(() => {\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period).then(e => {\n      if (payslipearnings.length) {\n        console.log(\"earning\", payslipearnings);\n      }\n    });\n    return () => mounted.current = false;\n  }, []);\n  useEffect(() => {\n    if (load) {\n      obj = handleLookup();\n      console.log(\"obj\", obj);\n      setState(obj);\n      setLoad(false);\n      console.log(\"load\", state);\n    }\n  }, [load]);\n\n  const calc_Earning = data => {\n    const sum = data.reduce((a, v) => a = a + v.amount, 0);\n    console.log(\"Earning\", data);\n    setPayslipEarningAmount(sum);\n  };\n\n  const update_Payslip = () => {\n    const {\n      rec_id,\n      id,\n      total_earnings,\n      ...paydata\n    } = single_payslip;\n    updatePayslip({\n      id: editPayslipID,\n      total_earnings: payslip_earning_amount,\n      ...paydata\n    });\n    setCalc(true);\n  };\n\n  const update_PayslipEarning = async data => {\n    const {\n      id,\n      rec_id,\n      empid,\n      ...fields\n    } = data;\n    console.log(\"update\", data);\n    updatePayslipEarning({\n      id: data.id,\n      empid: empid,\n      ...fields\n    });\n    update_Payslip();\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\n  };\n\n  const add_PayslipEarning = data => {\n    console.log(\"add\", data);\n    const {\n      description,\n      amount\n    } = data;\n    addPayslipEarning({\n      description: description,\n      amount: amount,\n      name: single_payslip.name,\n      empid: single_payslip.empid,\n      period: single_payslip.period\n    });\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\n  };\n\n  const delete_PayslipEarning = data => {\n    const {\n      id\n    } = data;\n    deletePayslipEarning(id);\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\n  };\n\n  const handleLookup = obj => {\n    obj = allowances.reduce(function (acc, cur, i) {\n      acc[cur.rec_id] = cur.name;\n      console.log(\"acc\", acc);\n      return acc;\n    }, {});\n    return obj;\n  };\n\n  if (payslipearnings_loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading... Incomes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MaterialTable //columns={columns}\n      , {\n        columns: [{\n          title: \"Name\",\n          field: \"description\",\n          lookup: obj\n        }, {\n          title: \"Amount\",\n          field: \"amount\",\n          type: \"numeric\"\n        }],\n        data: payslipearnings,\n        title: \"Income\",\n        editable: {\n          onRowAdd: newData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              // setData([...data, newData]);\n              add_PayslipEarning(newData);\n              calc_Earning([...payslipearnings, newData]);\n              resolve();\n            }, 1000);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...payslipearnings];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData; //setData([...dataUpdate]);\n\n              update_PayslipEarning(newData);\n              calc_Earning(dataUpdate);\n              resolve();\n            }, 1000);\n          }),\n          onRowDelete: oldData => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...payslipearnings];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1); // setData([...dataDelete]);\n\n              delete_PayslipEarning(oldData);\n              calc_Earning(dataDelete);\n              resolve();\n            }, 1000);\n          })\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Payslip_Earnings, \"z4tDIIkzSsWZ9l02/vF5Uzmqwuc=\", false, function () {\n  return [useHistory, useStyles, usePayslipsContext, useTablesContext];\n});\n\n_c = Payslip_Earnings;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Payslip_Earnings\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Payslip_Earnings.js"],"names":["React","useState","useEffect","useRef","MaterialTable","makeStyles","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","useHistory","Link","usePayslipsContext","useTablesContext","Payslip_Earnings","setCalc","history","mounted","obj","allowances","reduce","acc","cur","i","id","name","state","setState","load","setLoad","classes","useStyles","payslipearnings","payslip_earning_amount","setPayslipEarningAmount","addPayslipEarning","payslipearnings_loading","updatePayslipEarning","deletePayslipEarning","updatePayslip","editPayslipID","single_payslip","payslip_period","getSingleBatchPayslipEarnings","amount","empid","then","e","length","console","log","current","handleLookup","calc_Earning","data","sum","a","v","update_Payslip","rec_id","total_earnings","paydata","update_PayslipEarning","fields","add_PayslipEarning","description","period","delete_PayslipEarning","root","maxWidth","paddingTop","title","field","lookup","type","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","onRowDelete","dataDelete","splice","theme","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\nimport { useTablesContext } from \"../context/tables_context\";\r\n\r\n// const columns = [\r\n//   {\r\n//     title: \"Name\",\r\n//     field: \"description\",\r\n//     lookup: obj,\r\n//   },\r\n//   { title: \"Amount\", field: \"amount\", type: \"numeric\" },\r\n// ];\r\n\r\nexport default function Payslip_Earnings({ setCalc }) {\r\n  let history = useHistory();\r\n  let mounted = useRef(true);\r\n  var obj = allowances.reduce(function (acc, cur, i) {\r\n    acc[cur.id] = cur.name;\r\n\r\n    return acc;\r\n  }, {});\r\n  const [state, setState] = useState();\r\n  const [load, setLoad] = useState(true);\r\n  const classes = useStyles();\r\n  const {\r\n    payslipearnings,\r\n    payslip_earning_amount,\r\n    setPayslipEarningAmount,\r\n    addPayslipEarning,\r\n    payslipearnings_loading,\r\n    updatePayslipEarning,\r\n    deletePayslipEarning,\r\n    updatePayslip,\r\n    editPayslipID,\r\n    single_payslip,\r\n    payslip_period,\r\n    getSingleBatchPayslipEarnings,\r\n  } = usePayslipsContext();\r\n  const { name, amount } = payslipearnings;\r\n  const { allowances } = useTablesContext();\r\n\r\n  useEffect(() => {\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period).then(\r\n      (e) => {\r\n        if (payslipearnings.length) {\r\n          console.log(\"earning\", payslipearnings);\r\n        }\r\n      }\r\n    );\r\n    return () => (mounted.current = false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      obj = handleLookup();\r\n      console.log(\"obj\", obj);\r\n      setState(obj);\r\n      setLoad(false);\r\n\r\n      console.log(\"load\", state);\r\n    }\r\n  }, [load]);\r\n\r\n  const calc_Earning = (data) => {\r\n    const sum = data.reduce((a, v) => (a = a + v.amount), 0);\r\n    console.log(\"Earning\", data);\r\n    setPayslipEarningAmount(sum);\r\n  };\r\n\r\n  const update_Payslip = () => {\r\n    const { rec_id, id, total_earnings, ...paydata } = single_payslip;\r\n    updatePayslip({\r\n      id: editPayslipID,\r\n      total_earnings: payslip_earning_amount,\r\n      ...paydata,\r\n    });\r\n    setCalc(true);\r\n  };\r\n\r\n  const update_PayslipEarning = async (data) => {\r\n    const { id, rec_id, empid, ...fields } = data;\r\n    console.log(\"update\", data);\r\n    updatePayslipEarning({ id: data.id, empid: empid, ...fields });\r\n\r\n    update_Payslip();\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const add_PayslipEarning = (data) => {\r\n    console.log(\"add\", data);\r\n    const { description, amount } = data;\r\n    addPayslipEarning({\r\n      description: description,\r\n      amount: amount,\r\n      name: single_payslip.name,\r\n      empid: single_payslip.empid,\r\n      period: single_payslip.period,\r\n    });\r\n\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const delete_PayslipEarning = (data) => {\r\n    const { id } = data;\r\n    deletePayslipEarning(id);\r\n    getSingleBatchPayslipEarnings(single_payslip.empid, payslip_period);\r\n  };\r\n\r\n  const handleLookup = (obj) => {\r\n    obj = allowances.reduce(function (acc, cur, i) {\r\n      acc[cur.rec_id] = cur.name;\r\n      console.log(\"acc\", acc);\r\n      return acc;\r\n    }, {});\r\n    return obj;\r\n  };\r\n\r\n  if (payslipearnings_loading) {\r\n    return (\r\n      <div>\r\n        <h2>Loading... Incomes.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          //columns={columns}\r\n          columns={[\r\n            {\r\n              title: \"Name\",\r\n              field: \"description\",\r\n              lookup: obj,\r\n            },\r\n            { title: \"Amount\", field: \"amount\", type: \"numeric\" },\r\n          ]}\r\n          data={payslipearnings}\r\n          title=\"Income\"\r\n          editable={{\r\n            onRowAdd: (newData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  // setData([...data, newData]);\r\n                  add_PayslipEarning(newData);\r\n                  calc_Earning([...payslipearnings, newData]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...payslipearnings];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  //setData([...dataUpdate]);\r\n                  update_PayslipEarning(newData);\r\n                  calc_Earning(dataUpdate);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: (oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...payslipearnings];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  // setData([...dataDelete]);\r\n                  delete_PayslipEarning(oldData);\r\n                  calc_Earning(dataDelete);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}