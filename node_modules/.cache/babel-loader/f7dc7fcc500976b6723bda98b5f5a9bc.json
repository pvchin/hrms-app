{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\context\\\\tables_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport reducer from \"../reducers/tables_reducer\";\nimport { allowances_url } from \"../utils/constants\";\nimport { deductions_url } from \"../utils/constants\";\nimport { departments_url } from \"../utils/constants\";\nimport { designations_url } from \"../utils/constants\";\nimport { family_url } from \"../utils/constants\";\nimport { GET_ALLOWANCES_BEGIN, GET_ALLOWANCES_SUCCESS, GET_ALLOWANCES_ERROR, ADD_ALLOWANCE_BEGIN, ADD_ALLOWANCE_SUCCESS, ADD_ALLOWANCE_ERROR, UPDATE_ALLOWANCE_BEGIN, UPDATE_ALLOWANCE_SUCCESS, UPDATE_ALLOWANCE_ERROR, DELETE_ALLOWANCE_BEGIN, DELETE_ALLOWANCE_SUCCESS, DELETE_ALLOWANCE_ERROR, GET_DEDUCTIONS_BEGIN, GET_DEDUCTIONS_SUCCESS, GET_DEDUCTIONS_ERROR, ADD_DEDUCTION_BEGIN, ADD_DEDUCTION_SUCCESS, ADD_DEDUCTION_ERROR, UPDATE_DEDUCTION_BEGIN, UPDATE_DEDUCTION_SUCCESS, UPDATE_DEDUCTION_ERROR, DELETE_DEDUCTION_BEGIN, DELETE_DEDUCTION_SUCCESS, DELETE_DEDUCTION_ERROR, GET_DEPARTMENTS_BEGIN, GET_DEPARTMENTS_SUCCESS, GET_DEPARTMENTS_ERROR, ADD_DEPARTMENT_BEGIN, ADD_DEPARTMENT_SUCCESS, ADD_DEPARTMENT_ERROR, UPDATE_DEPARTMENT_BEGIN, UPDATE_DEPARTMENT_SUCCESS, UPDATE_DEPARTMENT_ERROR, DELETE_DEPARTMENT_BEGIN, DELETE_DEPARTMENT_SUCCESS, DELETE_DEPARTMENT_ERROR, GET_DESIGNATIONS_BEGIN, GET_DESIGNATIONS_SUCCESS, GET_DESIGNATIONS_ERROR, ADD_DESIGNATION_BEGIN, ADD_DESIGNATION_SUCCESS, ADD_DESIGNATION_ERROR, UPDATE_DESIGNATION_BEGIN, UPDATE_DESIGNATION_SUCCESS, UPDATE_DESIGNATION_ERROR, DELETE_DESIGNATION_BEGIN, DELETE_DESIGNATION_SUCCESS, DELETE_DESIGNATION_ERROR, GET_FAMILY_BEGIN, GET_FAMILY_SUCCESS, GET_FAMILY_ERROR, ADD_FAMILY_BEGIN, ADD_FAMILY_SUCCESS, ADD_FAMILY_ERROR, UPDATE_FAMILY_BEGIN, UPDATE_FAMILY_SUCCESS, UPDATE_FAMILY_ERROR, DELETE_FAMILY_BEGIN, DELETE_FAMILY_SUCCESS, DELETE_FAMILY_ERROR, LOAD_SINGLEBATCH_FAMILY_BEGIN, LOAD_SINGLEBATCH_FAMILY_SUCCESS, LOAD_SINGLEBATCH_FAMILY_ERROR // education\n, GET_EDUCATION_BEGIN, GET_EDUCATION_SUCCESS, GET_EDUCATION_ERROR, ADD_EDUCATION_BEGIN, ADD_EDUCATION_SUCCESS, ADD_EDUCATION_ERROR, UPDATE_EDUCATION_BEGIN, UPDATE_EDUCATION_SUCCESS, UPDATE_EDUCATION_ERROR, DELETE_EDUCATION_BEGIN, DELETE_EDUCATION_SUCCESS, DELETE_EDUCATION_ERROR, LOAD_SINGLEBATCH_EDUCATION_BEGIN, LOAD_SINGLEBATCH_EDUCATION_SUCCESS, LOAD_SINGLEBATCH_EDUCATION_ERROR // experience\n, GET_EXPERIENCE_BEGIN, GET_EXPERIENCE_SUCCESS, GET_EXPERIENCE_ERROR, ADD_EXPERIENCE_BEGIN, ADD_EXPERIENCE_SUCCESS, ADD_EXPERIENCE_ERROR, UPDATE_EXPERIENCE_BEGIN, UPDATE_EXPERIENCE_SUCCESS, UPDATE_EXPERIENCE_ERROR, DELETE_EXPERIENCE_BEGIN, DELETE_EXPERIENCE_SUCCESS, DELETE_EXPERIENCE_ERROR, LOAD_SINGLEBATCH_EXPERIENCE_BEGIN, LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS, LOAD_SINGLEBATCH_EXPERIENCE_ERROR } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  allowances: [],\n  allowances_loading: false,\n  allowances_error: false,\n  deductions: [],\n  deductions_loading: false,\n  deductions_error: false,\n  departments: [],\n  departments_loading: false,\n  departments_error: false,\n  designatons: [],\n  designations_loading: false,\n  designations_error: false,\n  family: [],\n  family_loading: false,\n  family_error: false,\n  singlebatch_family_loading: false,\n  singlebatch_family_error: false,\n  singlebatchfamily: {},\n  education: [],\n  education_loading: false,\n  education_error: false,\n  singlebatch_education_loading: false,\n  singlebatch_education_error: false,\n  singlebatcheducation: {},\n  experience: [],\n  experience_loading: false,\n  experience_error: false,\n  singlebatch_experience_loading: false,\n  singlebatch_experience_error: false,\n  singlebatchexperience: {}\n};\nconst TablesContext = /*#__PURE__*/React.createContext();\nexport const TablesProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState); // Allowances\n\n  const loadAllowances = async () => {\n    dispatch({\n      type: GET_ALLOWANCES_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(allowances_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const allowances = await res.json();\n      dispatch({\n        type: GET_ALLOWANCES_SUCCESS,\n        payload: allowances\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_ALLOWANCES_ERROR\n      });\n    }\n  };\n\n  const addAllowance = async data => {\n    const {\n      id,\n      name\n    } = data; //\n\n    dispatch({\n      type: ADD_ALLOWANCE_BEGIN\n    });\n\n    try {\n      await fetch(allowances_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_ALLOWANCE_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_ALLOWANCE_ERROR\n      });\n    }\n  };\n\n  const updateAllowance = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_ALLOWANCE_BEGIN\n    });\n\n    try {\n      await fetch(allowances_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_ALLOWANCE_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_ALLOWANCE_ERROR\n      });\n    }\n  };\n\n  const deleteAllowance = async id => {\n    dispatch({\n      type: DELETE_ALLOWANCE_BEGIN\n    });\n\n    try {\n      await fetch(allowances_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_ALLOWANCE_SUCCESS\n      }); //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_ALLOWANCE_ERROR\n      });\n    }\n  }; // Deductions\n\n\n  const loadDeductions = async () => {\n    dispatch({\n      type: GET_DEDUCTIONS_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(deductions_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const deductions = await res.json();\n      dispatch({\n        type: GET_DEDUCTIONS_SUCCESS,\n        payload: deductions\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_DEDUCTIONS_ERROR\n      });\n    }\n  };\n\n  const addDeduction = async data => {\n    const {\n      id,\n      name\n    } = data; //\n\n    dispatch({\n      type: ADD_DEDUCTION_BEGIN\n    });\n\n    try {\n      await fetch(deductions_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_DEDUCTION_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_DEDUCTION_ERROR\n      });\n    }\n  };\n\n  const updateDeduction = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_DEDUCTION_BEGIN\n    });\n\n    try {\n      await fetch(deductions_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_DEDUCTION_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_DEDUCTION_ERROR\n      });\n    }\n  };\n\n  const deleteDeduction = async id => {\n    dispatch({\n      type: DELETE_DEDUCTION_BEGIN\n    });\n\n    try {\n      await fetch(deductions_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_DEDUCTION_SUCCESS\n      }); //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_DEDUCTION_ERROR\n      });\n    }\n  }; // Departments\n\n\n  const loadDepartments = async () => {\n    dispatch({\n      type: GET_DEPARTMENTS_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(departments_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const departments = await res.json();\n      dispatch({\n        type: GET_DEPARTMENTS_SUCCESS,\n        payload: departments\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_DEPARTMENTS_ERROR\n      });\n    }\n  };\n\n  const addDepartment = async data => {\n    const {\n      id,\n      name\n    } = data; //\n\n    dispatch({\n      type: ADD_DEPARTMENT_BEGIN\n    });\n\n    try {\n      await fetch(departments_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_DEPARTMENT_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_DEPARTMENT_ERROR\n      });\n    }\n  };\n\n  const updateDepartment = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_DEPARTMENT_BEGIN\n    });\n\n    try {\n      await fetch(departments_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_DEPARTMENT_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_DEPARTMENT_ERROR\n      });\n    }\n  };\n\n  const deleteDepartment = async id => {\n    dispatch({\n      type: DELETE_DEPARTMENT_BEGIN\n    });\n\n    try {\n      await fetch(departments_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_DEPARTMENT_SUCCESS\n      }); //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_DEPARTMENT_ERROR\n      });\n    }\n  }; // Designations\n\n\n  const loadDesignations = async () => {\n    dispatch({\n      type: GET_DESIGNATIONS_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(designations_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const designations = await res.json();\n      dispatch({\n        type: GET_DESIGNATIONS_SUCCESS,\n        payload: designations\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_DESIGNATIONS_ERROR\n      });\n    }\n  };\n\n  const addDesignation = async data => {\n    const {\n      id,\n      name\n    } = data; //\n\n    dispatch({\n      type: ADD_DESIGNATION_BEGIN\n    });\n\n    try {\n      await fetch(designations_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_DESIGNATION_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_DESIGNATION_ERROR\n      });\n    }\n  };\n\n  const updateDesignation = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_DESIGNATION_BEGIN\n    });\n\n    try {\n      await fetch(designations_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_DESIGNATION_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_DESIGNATION_ERROR\n      });\n    }\n  };\n\n  const deleteDesignation = async id => {\n    dispatch({\n      type: DELETE_DESIGNATION_BEGIN\n    });\n\n    try {\n      await fetch(designations_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_DESIGNATION_SUCCESS\n      }); //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_DESIGNATION_ERROR\n      });\n    }\n  }; // Family\n\n\n  const loadFamily = async () => {\n    dispatch({\n      type: GET_FAMILY_BEGIN\n    });\n\n    try {\n      const res = await fetch(family_url);\n      const family = await res.json();\n      dispatch({\n        type: GET_FAMILY_SUCCESS,\n        payload: family\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_FAMILY_ERROR\n      });\n    }\n  };\n\n  const loadSingleBatchFamily = async linkid => {\n    dispatch({\n      type: LOAD_SINGLEBATCH_FAMILY_BEGIN\n    });\n\n    try {\n      const res = await fetch(`${family_url}?fv=${linkid}`);\n      console.log(`${family_url}?fv=${linkid}`);\n      const singlebatchfamily = await res.json();\n      dispatch({\n        type: LOAD_SINGLEBATCH_FAMILY_SUCCESS,\n        payload: singlebatchfamily\n      });\n    } catch (error) {\n      dispatch({\n        type: LOAD_SINGLEBATCH_FAMILY_ERROR\n      });\n    }\n  };\n\n  const addFamily = async data => {\n    const {\n      id,\n      name\n    } = data; //\n\n    dispatch({\n      type: ADD_FAMILY_BEGIN\n    });\n\n    try {\n      await fetch(family_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_FAMILY_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_FAMILY_ERROR\n      });\n    }\n  };\n\n  const updateFamily = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_FAMILY_BEGIN\n    });\n\n    try {\n      await fetch(family_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_FAMILY_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_FAMILY_ERROR\n      });\n    }\n  };\n\n  const deleteFamily = async id => {\n    dispatch({\n      type: DELETE_FAMILY_BEGIN\n    });\n\n    try {\n      await fetch(family_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_FAMILY_SUCCESS\n      }); //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_FAMILY_ERROR\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TablesContext.Provider, {\n    value: { ...state,\n      loadAllowances,\n      addAllowance,\n      deleteAllowance,\n      updateAllowance,\n      loadDeductions,\n      addDeduction,\n      deleteDeduction,\n      updateDeduction,\n      loadDepartments,\n      addDepartment,\n      deleteDepartment,\n      updateDepartment,\n      loadDesignations,\n      addDesignation,\n      deleteDesignation,\n      updateDesignation,\n      loadFamily,\n      loadSingleBatchFamily,\n      addFamily,\n      deleteFamily,\n      updateFamily\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 463,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TablesProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TablesProvider;\nexport const useTablesContext = () => {\n  _s2();\n\n  return useContext(TablesContext);\n};\n\n_s2(useTablesContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TablesProvider\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/context/tables_context.js"],"names":["React","useContext","useEffect","useReducer","axios","reducer","allowances_url","deductions_url","departments_url","designations_url","family_url","GET_ALLOWANCES_BEGIN","GET_ALLOWANCES_SUCCESS","GET_ALLOWANCES_ERROR","ADD_ALLOWANCE_BEGIN","ADD_ALLOWANCE_SUCCESS","ADD_ALLOWANCE_ERROR","UPDATE_ALLOWANCE_BEGIN","UPDATE_ALLOWANCE_SUCCESS","UPDATE_ALLOWANCE_ERROR","DELETE_ALLOWANCE_BEGIN","DELETE_ALLOWANCE_SUCCESS","DELETE_ALLOWANCE_ERROR","GET_DEDUCTIONS_BEGIN","GET_DEDUCTIONS_SUCCESS","GET_DEDUCTIONS_ERROR","ADD_DEDUCTION_BEGIN","ADD_DEDUCTION_SUCCESS","ADD_DEDUCTION_ERROR","UPDATE_DEDUCTION_BEGIN","UPDATE_DEDUCTION_SUCCESS","UPDATE_DEDUCTION_ERROR","DELETE_DEDUCTION_BEGIN","DELETE_DEDUCTION_SUCCESS","DELETE_DEDUCTION_ERROR","GET_DEPARTMENTS_BEGIN","GET_DEPARTMENTS_SUCCESS","GET_DEPARTMENTS_ERROR","ADD_DEPARTMENT_BEGIN","ADD_DEPARTMENT_SUCCESS","ADD_DEPARTMENT_ERROR","UPDATE_DEPARTMENT_BEGIN","UPDATE_DEPARTMENT_SUCCESS","UPDATE_DEPARTMENT_ERROR","DELETE_DEPARTMENT_BEGIN","DELETE_DEPARTMENT_SUCCESS","DELETE_DEPARTMENT_ERROR","GET_DESIGNATIONS_BEGIN","GET_DESIGNATIONS_SUCCESS","GET_DESIGNATIONS_ERROR","ADD_DESIGNATION_BEGIN","ADD_DESIGNATION_SUCCESS","ADD_DESIGNATION_ERROR","UPDATE_DESIGNATION_BEGIN","UPDATE_DESIGNATION_SUCCESS","UPDATE_DESIGNATION_ERROR","DELETE_DESIGNATION_BEGIN","DELETE_DESIGNATION_SUCCESS","DELETE_DESIGNATION_ERROR","GET_FAMILY_BEGIN","GET_FAMILY_SUCCESS","GET_FAMILY_ERROR","ADD_FAMILY_BEGIN","ADD_FAMILY_SUCCESS","ADD_FAMILY_ERROR","UPDATE_FAMILY_BEGIN","UPDATE_FAMILY_SUCCESS","UPDATE_FAMILY_ERROR","DELETE_FAMILY_BEGIN","DELETE_FAMILY_SUCCESS","DELETE_FAMILY_ERROR","LOAD_SINGLEBATCH_FAMILY_BEGIN","LOAD_SINGLEBATCH_FAMILY_SUCCESS","LOAD_SINGLEBATCH_FAMILY_ERROR","GET_EDUCATION_BEGIN","GET_EDUCATION_SUCCESS","GET_EDUCATION_ERROR","ADD_EDUCATION_BEGIN","ADD_EDUCATION_SUCCESS","ADD_EDUCATION_ERROR","UPDATE_EDUCATION_BEGIN","UPDATE_EDUCATION_SUCCESS","UPDATE_EDUCATION_ERROR","DELETE_EDUCATION_BEGIN","DELETE_EDUCATION_SUCCESS","DELETE_EDUCATION_ERROR","LOAD_SINGLEBATCH_EDUCATION_BEGIN","LOAD_SINGLEBATCH_EDUCATION_SUCCESS","LOAD_SINGLEBATCH_EDUCATION_ERROR","GET_EXPERIENCE_BEGIN","GET_EXPERIENCE_SUCCESS","GET_EXPERIENCE_ERROR","ADD_EXPERIENCE_BEGIN","ADD_EXPERIENCE_SUCCESS","ADD_EXPERIENCE_ERROR","UPDATE_EXPERIENCE_BEGIN","UPDATE_EXPERIENCE_SUCCESS","UPDATE_EXPERIENCE_ERROR","DELETE_EXPERIENCE_BEGIN","DELETE_EXPERIENCE_SUCCESS","DELETE_EXPERIENCE_ERROR","LOAD_SINGLEBATCH_EXPERIENCE_BEGIN","LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS","LOAD_SINGLEBATCH_EXPERIENCE_ERROR","initialState","allowances","allowances_loading","allowances_error","deductions","deductions_loading","deductions_error","departments","departments_loading","departments_error","designatons","designations_loading","designations_error","family","family_loading","family_error","singlebatch_family_loading","singlebatch_family_error","singlebatchfamily","education","education_loading","education_error","singlebatch_education_loading","singlebatch_education_error","singlebatcheducation","experience","experience_loading","experience_error","singlebatch_experience_loading","singlebatch_experience_error","singlebatchexperience","TablesContext","createContext","TablesProvider","children","state","dispatch","loadAllowances","type","res","fetch","json","payload","error","addAllowance","data","id","name","method","body","JSON","stringify","err","updateAllowance","fields","deleteAllowance","loadDeductions","addDeduction","updateDeduction","deleteDeduction","loadDepartments","addDepartment","updateDepartment","deleteDepartment","loadDesignations","designations","addDesignation","updateDesignation","deleteDesignation","loadFamily","loadSingleBatchFamily","linkid","console","log","addFamily","updateFamily","deleteFamily","useTablesContext"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/tables_reducer\";\r\nimport { allowances_url } from \"../utils/constants\";\r\nimport { deductions_url } from \"../utils/constants\";\r\nimport { departments_url } from \"../utils/constants\";\r\nimport { designations_url } from \"../utils/constants\";\r\nimport { family_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  GET_ALLOWANCES_BEGIN,\r\n  GET_ALLOWANCES_SUCCESS,\r\n  GET_ALLOWANCES_ERROR,\r\n  ADD_ALLOWANCE_BEGIN,\r\n  ADD_ALLOWANCE_SUCCESS,\r\n  ADD_ALLOWANCE_ERROR,\r\n  UPDATE_ALLOWANCE_BEGIN,\r\n  UPDATE_ALLOWANCE_SUCCESS,\r\n  UPDATE_ALLOWANCE_ERROR,\r\n  DELETE_ALLOWANCE_BEGIN,\r\n  DELETE_ALLOWANCE_SUCCESS,\r\n  DELETE_ALLOWANCE_ERROR,\r\n  GET_DEDUCTIONS_BEGIN,\r\n  GET_DEDUCTIONS_SUCCESS,\r\n  GET_DEDUCTIONS_ERROR,\r\n  ADD_DEDUCTION_BEGIN,\r\n  ADD_DEDUCTION_SUCCESS,\r\n  ADD_DEDUCTION_ERROR,\r\n  UPDATE_DEDUCTION_BEGIN,\r\n  UPDATE_DEDUCTION_SUCCESS,\r\n  UPDATE_DEDUCTION_ERROR,\r\n  DELETE_DEDUCTION_BEGIN,\r\n  DELETE_DEDUCTION_SUCCESS,\r\n  DELETE_DEDUCTION_ERROR,\r\n  GET_DEPARTMENTS_BEGIN,\r\n  GET_DEPARTMENTS_SUCCESS,\r\n  GET_DEPARTMENTS_ERROR,\r\n  ADD_DEPARTMENT_BEGIN,\r\n  ADD_DEPARTMENT_SUCCESS,\r\n  ADD_DEPARTMENT_ERROR,\r\n  UPDATE_DEPARTMENT_BEGIN,\r\n  UPDATE_DEPARTMENT_SUCCESS,\r\n  UPDATE_DEPARTMENT_ERROR,\r\n  DELETE_DEPARTMENT_BEGIN,\r\n  DELETE_DEPARTMENT_SUCCESS,\r\n  DELETE_DEPARTMENT_ERROR,\r\n  GET_DESIGNATIONS_BEGIN,\r\n  GET_DESIGNATIONS_SUCCESS,\r\n  GET_DESIGNATIONS_ERROR,\r\n  ADD_DESIGNATION_BEGIN,\r\n  ADD_DESIGNATION_SUCCESS,\r\n  ADD_DESIGNATION_ERROR,\r\n  UPDATE_DESIGNATION_BEGIN,\r\n  UPDATE_DESIGNATION_SUCCESS,\r\n  UPDATE_DESIGNATION_ERROR,\r\n  DELETE_DESIGNATION_BEGIN,\r\n  DELETE_DESIGNATION_SUCCESS,\r\n  DELETE_DESIGNATION_ERROR,\r\n  GET_FAMILY_BEGIN,\r\n  GET_FAMILY_SUCCESS,\r\n  GET_FAMILY_ERROR,\r\n  ADD_FAMILY_BEGIN,\r\n  ADD_FAMILY_SUCCESS,\r\n  ADD_FAMILY_ERROR,\r\n  UPDATE_FAMILY_BEGIN,\r\n  UPDATE_FAMILY_SUCCESS,\r\n  UPDATE_FAMILY_ERROR,\r\n  DELETE_FAMILY_BEGIN,\r\n  DELETE_FAMILY_SUCCESS,\r\n  DELETE_FAMILY_ERROR,\r\n  LOAD_SINGLEBATCH_FAMILY_BEGIN,\r\n  LOAD_SINGLEBATCH_FAMILY_SUCCESS,\r\n  LOAD_SINGLEBATCH_FAMILY_ERROR,\r\n  // education\r\n  GET_EDUCATION_BEGIN,\r\n  GET_EDUCATION_SUCCESS,\r\n  GET_EDUCATION_ERROR,\r\n  ADD_EDUCATION_BEGIN,\r\n  ADD_EDUCATION_SUCCESS,\r\n  ADD_EDUCATION_ERROR,\r\n  UPDATE_EDUCATION_BEGIN,\r\n  UPDATE_EDUCATION_SUCCESS,\r\n  UPDATE_EDUCATION_ERROR,\r\n  DELETE_EDUCATION_BEGIN,\r\n  DELETE_EDUCATION_SUCCESS,\r\n  DELETE_EDUCATION_ERROR,\r\n  LOAD_SINGLEBATCH_EDUCATION_BEGIN,\r\n  LOAD_SINGLEBATCH_EDUCATION_SUCCESS,\r\n  LOAD_SINGLEBATCH_EDUCATION_ERROR,\r\n  // experience\r\n  GET_EXPERIENCE_BEGIN,\r\n  GET_EXPERIENCE_SUCCESS,\r\n  GET_EXPERIENCE_ERROR,\r\n  ADD_EXPERIENCE_BEGIN,\r\n  ADD_EXPERIENCE_SUCCESS,\r\n  ADD_EXPERIENCE_ERROR,\r\n  UPDATE_EXPERIENCE_BEGIN,\r\n  UPDATE_EXPERIENCE_SUCCESS,\r\n  UPDATE_EXPERIENCE_ERROR,\r\n  DELETE_EXPERIENCE_BEGIN,\r\n  DELETE_EXPERIENCE_SUCCESS,\r\n  DELETE_EXPERIENCE_ERROR,\r\n  LOAD_SINGLEBATCH_EXPERIENCE_BEGIN,\r\n  LOAD_SINGLEBATCH_EXPERIENCE_SUCCESS,\r\n  LOAD_SINGLEBATCH_EXPERIENCE_ERROR,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  allowances: [],\r\n  allowances_loading: false,\r\n  allowances_error: false,\r\n  deductions: [],\r\n  deductions_loading: false,\r\n  deductions_error: false,\r\n  departments: [],\r\n  departments_loading: false,\r\n  departments_error: false,\r\n  designatons: [],\r\n  designations_loading: false,\r\n  designations_error: false,\r\n  family: [],\r\n  family_loading: false,\r\n  family_error: false,\r\n  singlebatch_family_loading: false,\r\n  singlebatch_family_error: false,\r\n  singlebatchfamily: {},\r\n  education: [],\r\n  education_loading: false,\r\n  education_error: false,\r\n  singlebatch_education_loading: false,\r\n  singlebatch_education_error: false,\r\n  singlebatcheducation: {},\r\n  experience: [],\r\n  experience_loading: false,\r\n  experience_error: false,\r\n  singlebatch_experience_loading: false,\r\n  singlebatch_experience_error: false,\r\n  singlebatchexperience: {},\r\n};\r\n\r\nconst TablesContext = React.createContext();\r\n\r\nexport const TablesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  // Allowances\r\n  const loadAllowances = async () => {\r\n    dispatch({ type: GET_ALLOWANCES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(allowances_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const allowances = await res.json();\r\n      dispatch({ type: GET_ALLOWANCES_SUCCESS, payload: allowances });\r\n    } catch (error) {\r\n      dispatch({ type: GET_ALLOWANCES_ERROR });\r\n    }\r\n  };\r\n\r\n  const addAllowance = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_ALLOWANCE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateAllowance = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_ALLOWANCE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteAllowance = async (id) => {\r\n    dispatch({ type: DELETE_ALLOWANCE_BEGIN });\r\n    try {\r\n      await fetch(allowances_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_ALLOWANCE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_ALLOWANCE_ERROR });\r\n    }\r\n  };\r\n\r\n  // Deductions\r\n  const loadDeductions = async () => {\r\n    dispatch({ type: GET_DEDUCTIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(deductions_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const deductions = await res.json();\r\n      dispatch({ type: GET_DEDUCTIONS_SUCCESS, payload: deductions });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DEDUCTIONS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDeduction = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DEDUCTION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDeduction = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DEDUCTION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDeduction = async (id) => {\r\n    dispatch({ type: DELETE_DEDUCTION_BEGIN });\r\n    try {\r\n      await fetch(deductions_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DEDUCTION_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DEDUCTION_ERROR });\r\n    }\r\n  };\r\n\r\n  // Departments\r\n  const loadDepartments = async () => {\r\n    dispatch({ type: GET_DEPARTMENTS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(departments_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const departments = await res.json();\r\n      dispatch({ type: GET_DEPARTMENTS_SUCCESS, payload: departments });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DEPARTMENTS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDepartment = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DEPARTMENT_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDepartment = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DEPARTMENT_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDepartment = async (id) => {\r\n    dispatch({ type: DELETE_DEPARTMENT_BEGIN });\r\n    try {\r\n      await fetch(departments_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DEPARTMENT_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DEPARTMENT_ERROR });\r\n    }\r\n  };\r\n\r\n  // Designations\r\n  const loadDesignations = async () => {\r\n    dispatch({ type: GET_DESIGNATIONS_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(designations_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const designations = await res.json();\r\n      dispatch({ type: GET_DESIGNATIONS_SUCCESS, payload: designations });\r\n    } catch (error) {\r\n      dispatch({ type: GET_DESIGNATIONS_ERROR });\r\n    }\r\n  };\r\n\r\n  const addDesignation = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_DESIGNATION_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateDesignation = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_DESIGNATION_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteDesignation = async (id) => {\r\n    dispatch({ type: DELETE_DESIGNATION_BEGIN });\r\n    try {\r\n      await fetch(designations_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_DESIGNATION_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_DESIGNATION_ERROR });\r\n    }\r\n  };\r\n\r\n  // Family\r\n  const loadFamily = async () => {\r\n    dispatch({ type: GET_FAMILY_BEGIN });\r\n    try {\r\n      const res = await fetch(family_url);\r\n\r\n      const family = await res.json();\r\n      dispatch({ type: GET_FAMILY_SUCCESS, payload: family });\r\n    } catch (error) {\r\n      dispatch({ type: GET_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const loadSingleBatchFamily = async (linkid) => {\r\n    dispatch({ type: LOAD_SINGLEBATCH_FAMILY_BEGIN });\r\n    try {\r\n      const res = await fetch(`${family_url}?fv=${linkid}`);\r\n      console.log(`${family_url}?fv=${linkid}`);\r\n      const singlebatchfamily = await res.json();\r\n      dispatch({\r\n        type: LOAD_SINGLEBATCH_FAMILY_SUCCESS,\r\n        payload: singlebatchfamily,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: LOAD_SINGLEBATCH_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const addFamily = async (data) => {\r\n    const { id, name } = data;\r\n    //\r\n    dispatch({ type: ADD_FAMILY_BEGIN });\r\n    try {\r\n      await fetch(family_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_FAMILY_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateFamily = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_FAMILY_BEGIN });\r\n    try {\r\n      await fetch(family_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_FAMILY_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteFamily = async (id) => {\r\n    dispatch({ type: DELETE_FAMILY_BEGIN });\r\n    try {\r\n      await fetch(family_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_FAMILY_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_FAMILY_ERROR });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TablesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadAllowances,\r\n        addAllowance,\r\n        deleteAllowance,\r\n        updateAllowance,\r\n        loadDeductions,\r\n        addDeduction,\r\n        deleteDeduction,\r\n        updateDeduction,\r\n        loadDepartments,\r\n        addDepartment,\r\n        deleteDepartment,\r\n        updateDepartment,\r\n        loadDesignations,\r\n        addDesignation,\r\n        deleteDesignation,\r\n        updateDesignation,\r\n        loadFamily,\r\n        loadSingleBatchFamily,\r\n        addFamily,\r\n        deleteFamily,\r\n        updateFamily,\r\n      }}\r\n    >\r\n      {children}\r\n    </TablesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTablesContext = () => {\r\n  return useContext(TablesContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}