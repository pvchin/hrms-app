{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\Payrun.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MaterialTable from \"material-table\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { format } from \"date-fns\";\nimport axios from \"axios\";\nimport { useAsync } from \"react-async\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { Button, Paper, Grid, Icon, Divider, TextField, MenuItem } from \"@material-ui/core\";\nimport { RecoilRoot, atom, selector, useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { employees_url } from \"../utils/constants\";\nimport { usePayslipsContext } from \"../context/payslips_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst url = \"https://course-api.com/react-tabs-project\";\nconst columns = [{\n  title: \"Period\",\n  field: \"period\",\n  editable: \"never\"\n}, {\n  title: \"From Date\",\n  field: \"from_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}, {\n  title: \"To Date\",\n  field: \"to_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}, {\n  title: \"Pay Date\",\n  field: \"pay_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}, {\n  title: \"Status\",\n  field: \"status\",\n  type: \"text\",\n  editable: \"never\"\n}];\nconst payrunState = atom({\n  key: \"payrunState\",\n  default: {\n    payfreq: \"\",\n    fromdate: null,\n    todate: null,\n    paydate: null,\n    period: \"\"\n  }\n}); // const loadEmp = async () =>\n//   await fetch(employees_url)\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\n//     .then((res) => res.json());\n\nconst Payrun = () => {\n  _s();\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const {\n    addPayrun,\n    getPayrun,\n    payrun\n  } = usePayslipsContext();\n  const [input, setInput] = useRecoilState(payrunState);\n  const [alert, setAlert] = useState(false);\n  const [error, setError] = useState(false);\n\n  function formatDate(string) {\n    var options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    };\n    return new Date(string).toLocaleDateString(\"en-GB\", options);\n  } // var today = new Date();\n  // console.log(yyyymmdd(today));\n\n\n  const handleChange = e => {\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const period = formatDate(input.fromdate) + \" - \" + formatDate(input.todate);\n    setInput({ ...input,\n      period: period\n    });\n  };\n\n  const add_Payrun = () => {\n    //update payrun\n    addPayrun({\n      pay_freq: input.payfreq,\n      from_date: input.fromdate,\n      to_date: input.todate,\n      pay_date: input.paydate,\n      period: input.period\n    });\n  };\n\n  useEffect(() => {\n    getPayrun();\n  }, []);\n  useEffect(() => {\n    if (input.period) {\n      add_Payrun();\n      setAlert(true);\n    }\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: fixedHeightPaper,\n    style: {\n      backgroundColor: \"black\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.section,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        sm: 8,\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          className: classes.jobinfo,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Pay Run\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Pay Frequency\",\n                variant: \"filled\",\n                required: true,\n                style: {\n                  width: 350\n                },\n                name: \"payfreq\",\n                value: input.payfreq,\n                onChange: e => handleChange(e),\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Weekly\",\n                  children: \"Weekly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Monthly\",\n                  children: \"Monthly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"From Date\",\n                variant: \"filled\",\n                name: \"fromdate\",\n                type: \"date\",\n                value: input.fromdate,\n                required: true,\n                style: {\n                  width: 350\n                },\n                onChange: e => handleChange(e),\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"To Date\",\n                variant: \"filled\",\n                type: \"date\",\n                name: \"todate\",\n                value: input.todate,\n                required: true,\n                onChange: e => handleChange(e),\n                style: {\n                  width: 350\n                },\n                onChange: handleChange,\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Payment Date\",\n                variant: \"filled\",\n                type: \"date\",\n                name: \"paydate\",\n                value: input.paydate,\n                required: true,\n                style: {\n                  width: 350\n                },\n                onChange: e => handleChange(e),\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                className: classes.button,\n                children: [\"Submit \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 26\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: alert && /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"New Payrun being added!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 30\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: error && /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"This Payrun period already existed!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 30\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        sm: 8,\n        children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n          columns: columns,\n          data: payrun,\n          title: \"Payrun History\",\n          options: {\n            filtering: false,\n            search: false,\n            toolbar: false,\n            headerStyle: {\n              backgroundColor: \"orange\",\n              color: \"primary\"\n            },\n            showTitle: false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payrun, \"+yA8TtxACbXbj//NRZY18tA2fJk=\", false, function () {\n  return [useStyles, usePayslipsContext, useRecoilState];\n});\n\n_c = Payrun;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  container: {\n    margin: 0,\n    padding: 0,\n    width: \"80vw\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\n    gridAutoRows: \"10px\",\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    justifyContent: \"center\",\n    backgroundColor: \"primary\"\n  },\n  fixedHeight: {\n    height: 800\n  },\n  paper: {\n    padding: theme.spacing(10),\n    // display: \"flex\",\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    border: \"1px solid\",\n    width: \"100%\",\n    color: \"primary\",\n    bcakgroundColor: \"black\"\n  },\n  card: {\n    backgroundColor: \"black\"\n  },\n  section: {\n    width: \"70vw\",\n    margin: \"5rem auto\",\n    maxWidth: \"var(--max-width)\"\n  },\n  underline: {\n    width: \"5rem\",\n    height: \"0.25rem\",\n    marginBottom: \"1.25rem\",\n    background: \"var(--clr-primary-5)\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  title: {\n    marginbottom: \"4rem\",\n    textAlign: \"center\"\n  },\n  jobscenter: {\n    width: \"80vw\",\n    margin: \"0 auto\",\n    maxWidth: \"var(--max-width)\",\n    flexDirection: \"row\"\n  },\n  btncontainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: \"4rem\",\n    flexWrap: \"wrap\"\n  },\n  jobbtn: {\n    background: \"transparent\",\n    borderColor: \"transparent\",\n    textTransform: \"capitalize\",\n    fontSize: \"1.25rem\",\n    letterSpacing: \"var(--spacing)\",\n    margin: \"0 0.5rem\",\n    transition: \"var(--transition)\",\n    cursor: \"pointer\",\n    padding: \"0.25rem 0\",\n    lineHeight: \"1\",\n    outlineColor: \"var(--clr-primary-10)\",\n    \"&:hover\": {\n      color: \"var(--clr-primary-5)\",\n      boxShadow: \"0 2px var(--clr-primary-5)\"\n    }\n  },\n  activebtn: {\n    color: \"var(--clr-primary-5)\",\n    boxShadow: \"0 2px var(--clr-primary-5)\"\n  },\n  jobinfo: {\n    fontWeight: \"400\"\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\nexport default Payrun;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payrun\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/Payrun.js"],"names":["React","useState","useEffect","makeStyles","MaterialTable","clsx","moment","format","axios","useAsync","Alert","Button","Paper","Grid","Icon","Divider","TextField","MenuItem","RecoilRoot","atom","selector","useRecoilState","useRecoilValue","useSetRecoilState","employees_url","usePayslipsContext","drawerWidth","url","columns","title","field","editable","type","dateSetting","locale","payrunState","key","default","payfreq","fromdate","todate","paydate","period","Payrun","classes","useStyles","fixedHeightPaper","paper","fixedHeight","addPayrun","getPayrun","payrun","input","setInput","alert","setAlert","error","setError","formatDate","string","options","year","month","day","Date","toLocaleDateString","handleChange","e","target","name","value","handleSubmit","preventDefault","add_Payrun","pay_freq","from_date","to_date","pay_date","backgroundColor","section","jobinfo","width","shrink","button","rightIcon","filtering","search","toolbar","headerStyle","color","showTitle","theme","root","flexGrow","margin","spacing","container","padding","display","gridTemplateColumns","gridAutoRows","position","left","transform","justifyContent","height","overflow","flexDirection","border","bcakgroundColor","card","maxWidth","underline","marginBottom","background","marginLeft","marginRight","marginbottom","textAlign","jobscenter","btncontainer","flexWrap","jobbtn","borderColor","textTransform","fontSize","letterSpacing","transition","cursor","lineHeight","outlineColor","boxShadow","activebtn","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport { format } from \"date-fns\";\r\nimport axios from \"axios\";\r\nimport { useAsync } from \"react-async\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Icon,\r\n  Divider,\r\n  TextField,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  RecoilRoot,\r\n  atom,\r\n  selector,\r\n  useRecoilState,\r\n  useRecoilValue,\r\n  useSetRecoilState,\r\n} from \"recoil\";\r\n\r\nimport { employees_url } from \"../utils/constants\";\r\nimport { usePayslipsContext } from \"../context/payslips_context\";\r\n\r\nconst drawerWidth = 240;\r\nconst url = \"https://course-api.com/react-tabs-project\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Period\",\r\n    field: \"period\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Pay Date\",\r\n    field: \"pay_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    type: \"text\",\r\n    editable: \"never\",\r\n  },\r\n];\r\n\r\nconst payrunState = atom({\r\n  key: \"payrunState\",\r\n  default: {\r\n    payfreq: \"\",\r\n    fromdate: null,\r\n    todate: null,\r\n    paydate: null,\r\n    period: \"\",\r\n  },\r\n});\r\n\r\n// const loadEmp = async () =>\r\n//   await fetch(employees_url)\r\n//     .then((res) => (res.ok ? res : Promise.reject(res)))\r\n//     .then((res) => res.json());\r\n\r\n\r\nconst Payrun = () => {\r\n  const classes = useStyles();\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { addPayrun, getPayrun, payrun } = usePayslipsContext();\r\n  const [input, setInput] = useRecoilState(payrunState);\r\n  const [alert, setAlert] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  function formatDate(string) {\r\n    var options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n    return new Date(string).toLocaleDateString(\"en-GB\", options);\r\n  }\r\n\r\n  // var today = new Date();\r\n  // console.log(yyyymmdd(today));\r\n\r\n  const handleChange = (e) => {\r\n    setInput({ ...input, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const period =\r\n      formatDate(input.fromdate) + \" - \" + formatDate(input.todate);\r\n\r\n    setInput({ ...input, period: period });\r\n  };\r\n\r\n  const add_Payrun = () => {\r\n    //update payrun\r\n    addPayrun({\r\n      pay_freq: input.payfreq,\r\n      from_date: input.fromdate,\r\n      to_date: input.todate,\r\n      pay_date: input.paydate,\r\n      period: input.period,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPayrun();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (input.period) {\r\n      add_Payrun();\r\n      setAlert(true);\r\n    }\r\n  }, [input]);\r\n\r\n  return (\r\n    <Paper className={fixedHeightPaper} style={{ backgroundColor: \"black\" }}>\r\n      <section className={classes.section}>\r\n        <Grid container item sm={8}>\r\n          <article className={classes.jobinfo}>\r\n            <h2>Pay Run</h2>\r\n            <form onSubmit={handleSubmit}>\r\n              <div>\r\n                <TextField\r\n                  label=\"Pay Frequency\"\r\n                  variant=\"filled\"\r\n                  required\r\n                  style={{ width: 350 }}\r\n                  name=\"payfreq\"\r\n                  value={input.payfreq}\r\n                  onChange={(e) => handleChange(e)}\r\n                  select\r\n                >\r\n                  <MenuItem value=\"Weekly\">Weekly</MenuItem>\r\n                  <MenuItem value=\"Monthly\">Monthly</MenuItem>\r\n                </TextField>\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"From Date\"\r\n                  variant=\"filled\"\r\n                  name=\"fromdate\"\r\n                  type=\"date\"\r\n                  value={input.fromdate}\r\n                  required\r\n                  style={{ width: 350 }}\r\n                  onChange={(e) => handleChange(e)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"To Date\"\r\n                  variant=\"filled\"\r\n                  type=\"date\"\r\n                  name=\"todate\"\r\n                  value={input.todate}\r\n                  required\r\n                  onChange={(e) => handleChange(e)}\r\n                  style={{ width: 350 }}\r\n                  onChange={handleChange}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <TextField\r\n                  label=\"Payment Date\"\r\n                  variant=\"filled\"\r\n                  type=\"date\"\r\n                  name=\"paydate\"\r\n                  value={input.paydate}\r\n                  required\r\n                  style={{ width: 350 }}\r\n                  onChange={(e) => handleChange(e)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                >\r\n                  Submit <Icon className={classes.rightIcon}>send</Icon>\r\n                </Button>\r\n              </div>\r\n              <div>{alert && <h3>New Payrun being added!</h3>}</div>\r\n              <div>{error && <h3>This Payrun period already existed!</h3>}</div>\r\n            </form>\r\n          </article>\r\n        </Grid>\r\n        <Grid container item sm={8}>\r\n          <MaterialTable\r\n            columns={columns}\r\n            data={payrun}\r\n            title=\"Payrun History\"\r\n            options={{\r\n              filtering: false,\r\n              search: false,\r\n              toolbar: false,\r\n              headerStyle: {\r\n                backgroundColor: \"orange\",\r\n                color: \"primary\",\r\n              },\r\n              showTitle: false,\r\n            }}\r\n          />\r\n        </Grid>\r\n      </section>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  container: {\r\n    margin: 0,\r\n    padding: 0,\r\n    width: \"80vw\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill,250px)\",\r\n    gridAutoRows: \"10px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"primary\",\r\n  },\r\n  fixedHeight: {\r\n    height: 800,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(10),\r\n    // display: \"flex\",\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    border: \"1px solid\",\r\n    width: \"100%\",\r\n    color: \"primary\",\r\n    bcakgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  section: {\r\n    width: \"70vw\",\r\n    margin: \"5rem auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n  },\r\n  underline: {\r\n    width: \"5rem\",\r\n    height: \"0.25rem\",\r\n    marginBottom: \"1.25rem\",\r\n    background: \"var(--clr-primary-5)\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  title: {\r\n    marginbottom: \"4rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  jobscenter: {\r\n    width: \"80vw\",\r\n    margin: \"0 auto\",\r\n    maxWidth: \"var(--max-width)\",\r\n    flexDirection: \"row\",\r\n  },\r\n  btncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"4rem\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  jobbtn: {\r\n    background: \"transparent\",\r\n    borderColor: \"transparent\",\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"1.25rem\",\r\n    letterSpacing: \"var(--spacing)\",\r\n    margin: \"0 0.5rem\",\r\n    transition: \"var(--transition)\",\r\n    cursor: \"pointer\",\r\n    padding: \"0.25rem 0\",\r\n    lineHeight: \"1\",\r\n    outlineColor: \"var(--clr-primary-10)\",\r\n    \"&:hover\": {\r\n      color: \"var(--clr-primary-5)\",\r\n      boxShadow: \"0 2px var(--clr-primary-5)\",\r\n    },\r\n  },\r\n  activebtn: {\r\n    color: \"var(--clr-primary-5)\",\r\n    boxShadow: \"0 2px var(--clr-primary-5)\",\r\n  },\r\n  jobinfo: {\r\n    fontWeight: \"400\",\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default Payrun;\r\n"]},"metadata":{},"sourceType":"module"}