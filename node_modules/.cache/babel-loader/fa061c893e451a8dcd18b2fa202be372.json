{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\LeaveTableAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LeaveForm from \"./LeaveForm\";\nimport { CustomDialog } from \"../helpers/CustomDialog\";\nimport { AlertDialog } from \"../helpers/AlertDialog\";\nimport { useLeavesContext } from \"../context/leaves_context\";\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Name\",\n  field: \"name\",\n  editable: \"never\"\n}, {\n  title: \"From Date\",\n  field: \"from_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}, {\n  title: \"To Date\",\n  field: \"to_date\",\n  type: \"date\",\n  dateSetting: {\n    locale: \"en-GB\"\n  },\n  editable: \"never\"\n}, {\n  title: \"No of Days\",\n  field: \"no_of_days\",\n  editable: \"never\",\n  cellStyle: {\n    width: 10,\n    maxWidth: 10\n  }\n}, {\n  title: \"Status\",\n  field: \"status\",\n  cellStyle: {\n    width: 50,\n    maxWidth: 50\n  },\n  editComponent: props => /*#__PURE__*/_jsxDEV(TextField //defaultValue={props.value || null}\n  , {\n    onChange: e => props.onChange(e.target.value),\n    style: {\n      width: 100\n    },\n    value: props.value,\n    select: true,\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Pending\",\n      children: \"Pending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Approve\",\n      children: \"Approve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Reject\",\n      children: \"Reject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"Cancel\",\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this)\n}];\nexport default function LeaveTable({\n  leavesdata,\n  setLeavesdata,\n  handleDialogClose\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const {\n    loadEmployees\n  } = useEmployeesContext();\n  const {\n    leaves,\n    editLeaveID,\n    leaves_loading,\n    deleteLeave,\n    loadLeaves,\n    getSingleLeave,\n    setEditLeaveID,\n    setIsLeaveEditingOn,\n    setIsLeaveEditingOff,\n    resetSingleLeave\n  } = useLeavesContext(); // useEffect(() => {\n  //   loadLeaves();\n  // }, []);\n\n  const update_Leave = async data => {\n    const {\n      id\n    } = data;\n    setEditLeaveID(id);\n    setIsLeaveEditingOn();\n    getSingleLeave(id);\n    handleLeaveFormDialogOpen(); //history.push(\"/singleleave\");\n  };\n\n  const add_Leave = async data => {\n    // const { id } = data;\n    resetSingleLeave();\n    setEditLeaveID(\"\");\n    setIsLeaveEditingOff();\n    handleLeaveFormDialogOpen(); //history.push(\"/singleleave\");\n  };\n\n  const delete_Leave = data => {\n    const {\n      id\n    } = data;\n    setEditLeaveID(id);\n    handleLeaveFormAlertOpen(); //deleteLeave(id);\n    //loadLeaves();\n  };\n\n  const handleLeaveFormDialogOpen = () => {\n    setIsDialogOpen(true);\n  };\n\n  const handleLeaveFormDialogClose = () => {\n    setIsDialogOpen(false);\n    loadLeaves();\n  };\n\n  const handleLeaveFormAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n\n  const handleLeaveFormAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const handleLeaveFormOnDeleteConfirm = () => {\n    const id = editLeaveID;\n    deleteLeave(id);\n    loadLeaves();\n  };\n\n  const Save_FamilyData = () => {\n    // delete unwanted data\n    singlebatchfamily.forEach(row => {\n      const {\n        id,\n        rec_id\n      } = row;\n      const res = familydata.find(r => r.rec_id === rec_id);\n\n      if (!res) {\n        deleteFamily(id);\n      }\n    }); //add or update new data\n\n    leavesdata.forEach(data => {\n      const {\n        id\n      } = data;\n\n      if (id) {\n        const {\n          id,\n          rec_id,\n          tableData,\n          ...fields\n        } = data;\n        updateLeave({\n          id,\n          ...fields\n        });\n      } else {\n        addFamily({\n          name,\n          relationship,\n          birth_date,\n          phone,\n          age,\n          empid: editEmployeeID\n        });\n      }\n    });\n    handleDialogClose();\n  }; // if (expenses_loading) {\n  //   return (\n  // if (leaves_loading) {\n  //   return (\n  //     <div>\n  //       <h2>Loading...Leaves</h2>\n  //     </div>\n  //   );\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"100%\",\n        paddingTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: leavesdata,\n        title: \"Leave Application\",\n        icons: {\n          Add: props => /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this),\n          Edit: props => /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 30\n          }, this),\n          Delete: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 32\n          }, this),\n          Clear: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 31\n          }, this),\n          Check: props => /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 31\n          }, this),\n          Search: props => /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 32\n          }, this),\n          ResetSearch: props => /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 37\n          }, this)\n        },\n        editable: {\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...leavesdata];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData;\n              setLeavesdata([...dataUpdate]); //approve_Expense(newData);\n\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          headerStyle: {\n            backgroundColor: \"orange\",\n            color: \"primary\"\n          },\n          showTitle: true\n        },\n        components: {\n          Toolbar: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MTableToolbar, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"5px 10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                className: classes.button,\n                onClick: Save_LeaveData,\n                children: [\"Update \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n        isOpen: isDialogOpen,\n        handleClose: handleLeaveFormDialogClose,\n        title: \"\",\n        showButton: true,\n        isFullscree: false,\n        children: /*#__PURE__*/_jsxDEV(LeaveForm, {\n          handleDialogClose: handleLeaveFormDialogClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n        handleClose: handleLeaveFormAlertClose,\n        onConfirm: handleLeaveFormOnDeleteConfirm,\n        isOpen: isAlertOpen,\n        title: \"Delete Expenses\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Are you sure you want to delete ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LeaveTable, \"iutiC+oo+vFsKET+1WKFNhHtDzs=\", false, function () {\n  return [useStyles, useEmployeesContext, useLeavesContext];\n});\n\n_c = LeaveTable;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaveTable\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/LeaveTableAdmin.js"],"names":["React","useState","useEffect","MaterialTable","TextField","MenuItem","makeStyles","AddIcon","EditIcon","DeleteIcon","CheckIcon","SearchIcon","LeaveForm","CustomDialog","AlertDialog","useLeavesContext","useEmployeesContext","columns","title","field","editable","type","dateSetting","locale","cellStyle","width","maxWidth","editComponent","props","e","onChange","target","value","LeaveTable","leavesdata","setLeavesdata","handleDialogClose","classes","useStyles","isDialogOpen","setIsDialogOpen","isAlertOpen","setIsAlertOpen","loadEmployees","leaves","editLeaveID","leaves_loading","deleteLeave","loadLeaves","getSingleLeave","setEditLeaveID","setIsLeaveEditingOn","setIsLeaveEditingOff","resetSingleLeave","update_Leave","data","id","handleLeaveFormDialogOpen","add_Leave","delete_Leave","handleLeaveFormAlertOpen","handleLeaveFormDialogClose","handleLeaveFormAlertClose","handleLeaveFormOnDeleteConfirm","Save_FamilyData","singlebatchfamily","forEach","row","rec_id","res","familydata","find","r","deleteFamily","tableData","fields","updateLeave","addFamily","name","relationship","birth_date","phone","age","empid","editEmployeeID","root","paddingTop","Add","Edit","Delete","Clear","Check","Search","ResetSearch","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","dataUpdate","index","filtering","headerStyle","backgroundColor","color","showTitle","Toolbar","padding","button","Save_LeaveData","rightIcon","theme"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LeaveForm from \"./LeaveForm\";\r\nimport { CustomDialog } from \"../helpers/CustomDialog\";\r\nimport { AlertDialog } from \"../helpers/AlertDialog\";\r\nimport { useLeavesContext } from \"../context/leaves_context\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    field: \"from_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    field: \"to_date\",\r\n    type: \"date\",\r\n    dateSetting: { locale: \"en-GB\" },\r\n    editable: \"never\",\r\n  },\r\n  {\r\n    title: \"No of Days\",\r\n    field: \"no_of_days\",\r\n    editable: \"never\",\r\n    cellStyle: {\r\n      width: 10,\r\n      maxWidth: 10,\r\n    },\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n    cellStyle: {\r\n      width: 50,\r\n      maxWidth: 50,\r\n    },\r\n    editComponent: (props) => (\r\n      <TextField\r\n        //defaultValue={props.value || null}\r\n        onChange={(e) => props.onChange(e.target.value)}\r\n        style={{ width: 100 }}\r\n        value={props.value}\r\n        select\r\n      >\r\n        <MenuItem value=\"Pending\">Pending</MenuItem>\r\n        <MenuItem value=\"Approve\">Approve</MenuItem>\r\n        <MenuItem value=\"Reject\">Reject</MenuItem>\r\n        <MenuItem value=\"Cancel\">Cancel</MenuItem>\r\n      </TextField>\r\n    ),\r\n  },\r\n];\r\n\r\n \r\nexport default function LeaveTable({\r\n  leavesdata,\r\n  setLeavesdata,\r\n  handleDialogClose,\r\n}) {\r\n  const classes = useStyles();\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const { loadEmployees } = useEmployeesContext();\r\n  const {\r\n    leaves,\r\n    editLeaveID,\r\n    leaves_loading,\r\n    deleteLeave,\r\n    loadLeaves,\r\n    getSingleLeave,\r\n    setEditLeaveID,\r\n    setIsLeaveEditingOn,\r\n    setIsLeaveEditingOff,\r\n    resetSingleLeave,\r\n  } = useLeavesContext();\r\n\r\n  // useEffect(() => {\r\n  //   loadLeaves();\r\n  // }, []);\r\n\r\n  const update_Leave = async (data) => {\r\n    const { id } = data;\r\n    setEditLeaveID(id);\r\n    setIsLeaveEditingOn();\r\n    getSingleLeave(id);\r\n    handleLeaveFormDialogOpen();\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const add_Leave = async (data) => {\r\n    // const { id } = data;\r\n    resetSingleLeave();\r\n    setEditLeaveID(\"\");\r\n    setIsLeaveEditingOff();\r\n    handleLeaveFormDialogOpen();\r\n    //history.push(\"/singleleave\");\r\n  };\r\n\r\n  const delete_Leave = (data) => {\r\n    const { id } = data;\r\n    setEditLeaveID(id);\r\n    handleLeaveFormAlertOpen();\r\n    //deleteLeave(id);\r\n    //loadLeaves();\r\n  };\r\n\r\n  const handleLeaveFormDialogOpen = () => {\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleLeaveFormDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    loadLeaves();\r\n  };\r\n\r\n  const handleLeaveFormAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleLeaveFormAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleLeaveFormOnDeleteConfirm = () => {\r\n    const id = editLeaveID;\r\n    deleteLeave(id);\r\n    loadLeaves();\r\n  };\r\n\r\n  const Save_FamilyData = () => {\r\n    // delete unwanted data\r\n    singlebatchfamily.forEach((row) => {\r\n      const { id, rec_id } = row;\r\n      const res = familydata.find((r) => r.rec_id === rec_id);\r\n      if (!res) {\r\n        deleteFamily(id);\r\n      }\r\n    });\r\n    //add or update new data\r\n\r\n    leavesdata.forEach((data) => {\r\n      const { id } = data;\r\n      if (id) {\r\n        const { id, rec_id, tableData, ...fields } = data;\r\n        updateLeave({ id, ...fields });\r\n      } else {\r\n        addFamily({\r\n          name,\r\n          relationship,\r\n          birth_date,\r\n          phone,\r\n          age,\r\n          empid: editEmployeeID,\r\n        });\r\n      }\r\n    });\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  // if (expenses_loading) {\r\n  //   return (\r\n\r\n  // if (leaves_loading) {\r\n  //   return (\r\n  //     <div>\r\n  //       <h2>Loading...Leaves</h2>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <h1>Expenses Claims Application</h1> */}\r\n\r\n      <div style={{ maxWidth: \"100%\", paddingTop: \"5px\" }}>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={leavesdata}\r\n          title=\"Leave Application\"\r\n          icons={{\r\n            Add: (props) => <AddIcon />,\r\n            Edit: (props) => <EditIcon />,\r\n            Delete: (props) => <DeleteIcon />,\r\n            Clear: (props) => <DeleteIcon />,\r\n            Check: (props) => <CheckIcon />,\r\n            Search: (props) => <SearchIcon />,\r\n            ResetSearch: (props) => <DeleteIcon />,\r\n          }}\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...leavesdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setLeavesdata([...dataUpdate]);\r\n                  //approve_Expense(newData);\r\n\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            headerStyle: {\r\n              backgroundColor: \"orange\",\r\n              color: \"primary\",\r\n            },\r\n            showTitle: true,\r\n          }}\r\n          components={{\r\n            Toolbar: (props) => (\r\n              <div>\r\n                <MTableToolbar {...props} />\r\n                <div style={{ padding: \"5px 10px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.button}\r\n                    onClick={Save_LeaveData}\r\n                  >\r\n                    Update <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ),\r\n          }}\r\n        />\r\n        <CustomDialog\r\n          isOpen={isDialogOpen}\r\n          handleClose={handleLeaveFormDialogClose}\r\n          title=\"\"\r\n          showButton={true}\r\n          isFullscree={false}\r\n        >\r\n          <LeaveForm handleDialogClose={handleLeaveFormDialogClose} />\r\n        </CustomDialog>\r\n\r\n        <AlertDialog\r\n          handleClose={handleLeaveFormAlertClose}\r\n          onConfirm={handleLeaveFormOnDeleteConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Delete Expenses\"\r\n        >\r\n          <h2>Are you sure you want to delete ?</h2>\r\n        </AlertDialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}