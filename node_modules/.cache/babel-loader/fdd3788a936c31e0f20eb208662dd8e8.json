{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\context\\\\leaves_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport reducer from \"../reducers/leaves_reducer\";\nimport { leaves_url } from \"../utils/constants\";\nimport { SET_EDITLEAVEID, SET_ISLEAVEEDITING_ON, SET_ISLEAVEEDITING_OFF, SET_SINGLELEAVE, GET_LEAVES_BEGIN, GET_LEAVES_SUCCESS, GET_LEAVES_ERROR, GET_SINGLE_LEAVE_BEGIN, GET_SINGLE_LEAVE_SUCCESS, GET_SINGLE_LEAVE_ERROR, GET_SINGLEBATCH_LEAVE_BEGIN, GET_SINGLEBATCH_LEAVE_SUCCESS, GET_SINGLEBATCH_LEAVE_ERROR, ADD_LEAVE_BEGIN, ADD_LEAVE_SUCCESS, ADD_LEAVE_ERROR, DELETE_LEAVE_BEGIN, DELETE_LEAVE_SUCCESS, DELETE_LEAVE_ERROR, UPDATE_LEAVE_BEGIN, UPDATE_LEAVE_SUCCESS, UPDATE_LEAVE_ERROR, RESET_SINGLE_LEAVE } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  isLeaveEditing: false,\n  alertleave: {\n    show: false,\n    msg: \"\",\n    type: \"\"\n  },\n  editLeaveID: null,\n  leaves_loading: false,\n  leaves_error: false,\n  leaves: [],\n  singlebatchleave: [],\n  single_leave_loading: false,\n  single_leave_error: false,\n  single_leave: {},\n  singlebatch_leave_loading: false,\n  singlebatch_leave_error: false,\n  singlebatch_leave: {},\n  delete_leave_loading: false,\n  delete_leave_error: false,\n  update_leave_loading: false,\n  update_leave_error: false,\n  add_leave_loading: false,\n  add_leave_error: false // filterValue: \"Female\",\n  // filterfield: \"gender\",\n\n};\nconst LeavesContext = /*#__PURE__*/React.createContext();\nexport const LeavesProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const loadLeaves = async () => {\n    dispatch({\n      type: GET_LEAVES_BEGIN\n    });\n\n    try {\n      // const res = await fetch(\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\n      // );\n      const res = await fetch(leaves_url); //const { data } = await axios.get(employees_url);\n      //const employees = data;\n\n      const leaves = await res.json();\n      dispatch({\n        type: GET_LEAVES_SUCCESS,\n        payload: leaves\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_LEAVES_ERROR\n      });\n    }\n  };\n\n  const setIsLeaveEditingOn = () => {\n    dispatch({\n      type: SET_ISLEAVEEDITING_ON\n    });\n  };\n\n  const setIsLeaveEditingOff = () => {\n    dispatch({\n      type: SET_ISLEAVEEDITING_OFF\n    });\n  };\n\n  const resetSingleLeave = () => {\n    dispatch({\n      type: RESET_SINGLE_LEAVE\n    });\n  };\n\n  const setEditLeaveID = async id => {\n    try {\n      dispatch({\n        type: SET_EDITLEAVEID,\n        payload: id\n      });\n    } catch (error) {\n      dispatch(error);\n    }\n  };\n\n  const getSingleLeave = async id => {\n    dispatch({\n      type: GET_SINGLE_LEAVE_BEGIN\n    });\n\n    try {\n      const {\n        data\n      } = await axios.get(`${leaves_url}?id=${id}`);\n      const singleleave = data;\n      dispatch({\n        type: GET_SINGLE_LEAVE_SUCCESS,\n        payload: singleleave\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_SINGLE_LEAVE_ERROR\n      });\n    }\n  };\n\n  const getSingleBatchLeave = async empid => {\n    dispatch({\n      type: LOAD_SINGLEBATCH_LEAVE_BEGIN\n    });\n\n    try {\n      const res = await fetch(`${leaves_url}?fv=${empid}`); //console.log(`${family_url}?fv=${linkid}`);\n\n      const singlebatchleave = await res.json();\n      dispatch({\n        type: LOAD_SINGLEBATCH_LEAVE_SUCCESS,\n        payload: singlebatchleave\n      });\n    } catch (error) {\n      dispatch({\n        type: LOAD_SINGLEBATCH_LEAVE_ERROR\n      });\n    }\n  };\n\n  const addLeave = async data => {\n    const {\n      id,\n      name,\n      from_date,\n      to_date,\n      reason,\n      no_of_days,\n      status\n    } = data; //\n\n    dispatch({\n      type: ADD_LEAVE_BEGIN\n    });\n\n    try {\n      await fetch(leaves_url, {\n        method: \"POST\",\n        body: JSON.stringify({ ...data\n        })\n      });\n      dispatch({\n        type: ADD_LEAVE_SUCCESS\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_LEAVE_ERROR\n      });\n    }\n  };\n\n  const updateLeave = async data => {\n    const {\n      id,\n      ...fields\n    } = data;\n    dispatch({\n      type: UPDATE_LEAVE_BEGIN\n    });\n\n    try {\n      await fetch(leaves_url, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          id,\n          ...fields\n        })\n      });\n      dispatch({\n        type: UPDATE_LEAVE_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_LEAVE_ERROR\n      });\n    }\n  };\n\n  const deleteLeave = async id => {\n    dispatch({\n      type: DELETE_LEAVE_BEGIN\n    });\n\n    try {\n      await fetch(leaves_url, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      dispatch({\n        type: DELETE_LEAVE_SUCCESS\n      }); //loadEmployees();\n    } catch (err) {\n      dispatch({\n        type: DELETE_LEAVE_ERROR\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(LeavesContext.Provider, {\n    value: { ...state,\n      loadLeaves,\n      addLeave,\n      updateLeave,\n      deleteLeave,\n      getSingleLeave,\n      getSingleBatchLeave,\n      setEditLeaveID,\n      setIsLeaveEditingOn,\n      setIsLeaveEditingOff,\n      resetSingleLeave\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LeavesProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = LeavesProvider;\nexport const useLeavesContext = () => {\n  _s2();\n\n  return useContext(LeavesContext);\n};\n\n_s2(useLeavesContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"LeavesProvider\");","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/context/leaves_context.js"],"names":["React","useContext","useEffect","useReducer","axios","reducer","leaves_url","SET_EDITLEAVEID","SET_ISLEAVEEDITING_ON","SET_ISLEAVEEDITING_OFF","SET_SINGLELEAVE","GET_LEAVES_BEGIN","GET_LEAVES_SUCCESS","GET_LEAVES_ERROR","GET_SINGLE_LEAVE_BEGIN","GET_SINGLE_LEAVE_SUCCESS","GET_SINGLE_LEAVE_ERROR","GET_SINGLEBATCH_LEAVE_BEGIN","GET_SINGLEBATCH_LEAVE_SUCCESS","GET_SINGLEBATCH_LEAVE_ERROR","ADD_LEAVE_BEGIN","ADD_LEAVE_SUCCESS","ADD_LEAVE_ERROR","DELETE_LEAVE_BEGIN","DELETE_LEAVE_SUCCESS","DELETE_LEAVE_ERROR","UPDATE_LEAVE_BEGIN","UPDATE_LEAVE_SUCCESS","UPDATE_LEAVE_ERROR","RESET_SINGLE_LEAVE","initialState","isLeaveEditing","alertleave","show","msg","type","editLeaveID","leaves_loading","leaves_error","leaves","singlebatchleave","single_leave_loading","single_leave_error","single_leave","singlebatch_leave_loading","singlebatch_leave_error","singlebatch_leave","delete_leave_loading","delete_leave_error","update_leave_loading","update_leave_error","add_leave_loading","add_leave_error","LeavesContext","createContext","LeavesProvider","children","state","dispatch","loadLeaves","res","fetch","json","payload","error","setIsLeaveEditingOn","setIsLeaveEditingOff","resetSingleLeave","setEditLeaveID","id","getSingleLeave","data","get","singleleave","getSingleBatchLeave","empid","LOAD_SINGLEBATCH_LEAVE_BEGIN","LOAD_SINGLEBATCH_LEAVE_SUCCESS","LOAD_SINGLEBATCH_LEAVE_ERROR","addLeave","name","from_date","to_date","reason","no_of_days","status","method","body","JSON","stringify","err","updateLeave","fields","deleteLeave","useLeavesContext"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../reducers/leaves_reducer\";\r\nimport { leaves_url } from \"../utils/constants\";\r\n\r\nimport {\r\n  SET_EDITLEAVEID,\r\n  SET_ISLEAVEEDITING_ON,\r\n  SET_ISLEAVEEDITING_OFF,\r\n  SET_SINGLELEAVE,\r\n  GET_LEAVES_BEGIN,\r\n  GET_LEAVES_SUCCESS,\r\n  GET_LEAVES_ERROR,\r\n  GET_SINGLE_LEAVE_BEGIN,\r\n  GET_SINGLE_LEAVE_SUCCESS,\r\n  GET_SINGLE_LEAVE_ERROR,\r\n  GET_SINGLEBATCH_LEAVE_BEGIN,\r\n  GET_SINGLEBATCH_LEAVE_SUCCESS,\r\n  GET_SINGLEBATCH_LEAVE_ERROR,\r\n  ADD_LEAVE_BEGIN,\r\n  ADD_LEAVE_SUCCESS,\r\n  ADD_LEAVE_ERROR,\r\n  DELETE_LEAVE_BEGIN,\r\n  DELETE_LEAVE_SUCCESS,\r\n  DELETE_LEAVE_ERROR,\r\n  UPDATE_LEAVE_BEGIN,\r\n  UPDATE_LEAVE_SUCCESS,\r\n  UPDATE_LEAVE_ERROR,\r\n  RESET_SINGLE_LEAVE,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  isLeaveEditing: false,\r\n  alertleave: { show: false, msg: \"\", type: \"\" },\r\n  editLeaveID: null,\r\n  leaves_loading: false,\r\n  leaves_error: false,\r\n  leaves: [],\r\n  singlebatchleave:[],\r\n  single_leave_loading: false,\r\n  single_leave_error: false,\r\n  single_leave: {},\r\n  singlebatch_leave_loading: false,\r\n  singlebatch_leave_error: false,\r\n  singlebatch_leave: {},\r\n  delete_leave_loading: false,\r\n  delete_leave_error: false,\r\n  update_leave_loading: false,\r\n  update_leave_error: false,\r\n  add_leave_loading: false,\r\n  add_leave_error: false,\r\n  // filterValue: \"Female\",\r\n  // filterfield: \"gender\",\r\n};\r\n\r\nconst LeavesContext = React.createContext();\r\n\r\nexport const LeavesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const loadLeaves = async () => {\r\n    dispatch({ type: GET_LEAVES_BEGIN });\r\n    try {\r\n      // const res = await fetch(\r\n      //   `${employees_url}?filterValue=\"${state.filterValue}\"&filterField=\"${state.filterField}\"`\r\n      // );\r\n      const res = await fetch(leaves_url);\r\n      //const { data } = await axios.get(employees_url);\r\n      //const employees = data;\r\n      const leaves = await res.json();\r\n      dispatch({ type: GET_LEAVES_SUCCESS, payload: leaves });\r\n    } catch (error) {\r\n      dispatch({ type: GET_LEAVES_ERROR });\r\n    }\r\n  };\r\n\r\n  const setIsLeaveEditingOn = () => {\r\n    dispatch({ type: SET_ISLEAVEEDITING_ON });\r\n  };\r\n\r\n  const setIsLeaveEditingOff = () => {\r\n    dispatch({ type: SET_ISLEAVEEDITING_OFF });\r\n  };\r\n\r\n  const resetSingleLeave = () => {\r\n    dispatch({ type: RESET_SINGLE_LEAVE });\r\n  };\r\n\r\n  const setEditLeaveID = async (id) => {\r\n    try {\r\n      dispatch({ type: SET_EDITLEAVEID, payload: id });\r\n    } catch (error) {\r\n      dispatch(error);\r\n    }\r\n  };\r\n\r\n  const getSingleLeave = async (id) => {\r\n    dispatch({ type: GET_SINGLE_LEAVE_BEGIN });\r\n    try {\r\n      const { data } = await axios.get(`${leaves_url}?id=${id}`);\r\n      const singleleave = data;\r\n      dispatch({ type: GET_SINGLE_LEAVE_SUCCESS, payload: singleleave });\r\n    } catch (error) {\r\n      dispatch({ type: GET_SINGLE_LEAVE_ERROR });\r\n    }\r\n  };\r\n\r\nconst getSingleBatchLeave = async (empid) => {\r\n  dispatch({ type: LOAD_SINGLEBATCH_LEAVE_BEGIN });\r\n  try {\r\n    const res = await fetch(`${leaves_url}?fv=${empid}`);\r\n    //console.log(`${family_url}?fv=${linkid}`);\r\n    const singlebatchleave = await res.json();\r\n\r\n    dispatch({\r\n      type: LOAD_SINGLEBATCH_LEAVE_SUCCESS,\r\n      payload: singlebatchleave,\r\n    });\r\n  } catch (error) {\r\n    dispatch({ type: LOAD_SINGLEBATCH_LEAVE_ERROR });\r\n  }\r\n};\r\n\r\n\r\n  const addLeave = async (data) => {\r\n    const { id, name, from_date, to_date, reason, no_of_days, status } = data;\r\n    //\r\n    dispatch({ type: ADD_LEAVE_BEGIN });\r\n    try {\r\n      await fetch(leaves_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ ...data }),\r\n      });\r\n      dispatch({ type: ADD_LEAVE_SUCCESS });\r\n    } catch (err) {\r\n      dispatch({ type: ADD_LEAVE_ERROR });\r\n    }\r\n  };\r\n\r\n  const updateLeave = async (data) => {\r\n    const { id, ...fields } = data;\r\n\r\n    dispatch({ type: UPDATE_LEAVE_BEGIN });\r\n    try {\r\n      await fetch(leaves_url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ id, ...fields }),\r\n      });\r\n      dispatch({ type: UPDATE_LEAVE_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_LEAVE_ERROR });\r\n    }\r\n  };\r\n\r\n  const deleteLeave = async (id) => {\r\n    dispatch({ type: DELETE_LEAVE_BEGIN });\r\n    try {\r\n      await fetch(leaves_url, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n      });\r\n      dispatch({ type: DELETE_LEAVE_SUCCESS });\r\n      //loadEmployees();\r\n    } catch (err) {\r\n      dispatch({ type: DELETE_LEAVE_ERROR });\r\n    }\r\n  };\r\n  return (\r\n    <LeavesContext.Provider\r\n      value={{\r\n        ...state,\r\n        loadLeaves,\r\n        addLeave,\r\n        updateLeave,\r\n        deleteLeave,\r\n        getSingleLeave,\r\n        getSingleBatchLeave,\r\n        setEditLeaveID,\r\n        setIsLeaveEditingOn,\r\n        setIsLeaveEditingOff,\r\n        resetSingleLeave,\r\n      }}\r\n    >\r\n      {children}\r\n    </LeavesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useLeavesContext = () => {\r\n  return useContext(LeavesContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}